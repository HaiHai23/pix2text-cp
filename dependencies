// Module Dependencies
digraph {
	__main__ -> os
	__main__ -> logging
	__main__ -> glob
	__main__ -> json
	__main__ -> click
	__main__ -> copy
	__main__ -> shutil
	__main__ -> string
	__main__ -> re
	__main__ -> torch
	__main__ -> tqdm
	__main__ -> cv2
	__main__ -> dataclasses
	__main__ -> spellchecker
	__main__ -> io
	__main__ -> fitz
	__main__ -> time
	__main__ -> hashlib
	__main__ -> platform
	__main__ -> random
	__main__ -> argparse
	__main__ -> math
	__main__ -> sys
	"PIL.Image" -> atexit
	"PIL.Image" -> builtins
	"PIL.Image" -> io
	"PIL.Image" -> logging
	"PIL.Image" -> math
	"PIL.Image" -> os
	"PIL.Image" -> re
	"PIL.Image" -> struct
	"PIL.Image" -> sys
	"PIL.Image" -> tempfile
	"PIL.Image" -> warnings
	"PIL.Image" -> cffi
	"PIL.Image" -> enum
	io -> _io
	io -> abc
	types -> sys
	collections -> _collections_abc
	_collections_abc -> sys
	warnings -> sys
	linecache -> functools
	linecache -> sys
	linecache -> os
	linecache -> tokenize
	os -> abc
	os -> sys
	os -> nt
	os -> copy
	posixpath -> os
	posixpath -> sys
	posixpath -> stat
	posixpath -> genericpath
	genericpath -> os
	genericpath -> stat
	re -> enum
	re -> functools
	re -> _sre
	re -> copyreg
	re -> _pickle
	enum -> sys
	"re._compiler" -> _sre
	"re._compiler" -> dis
	copyreg -> pickle
	ntpath -> os
	ntpath -> sys
	ntpath -> stat
	ntpath -> genericpath
	string -> _string
	subprocess -> builtins
	subprocess -> errno
	subprocess -> io
	subprocess -> locale
	subprocess -> os
	subprocess -> time
	subprocess -> signal
	subprocess -> sys
	subprocess -> threading
	subprocess -> warnings
	subprocess -> contextlib
	subprocess -> types
	subprocess -> msvcrt
	subprocess -> _winapi
	subprocess -> select
	subprocess -> selectors
	locale -> sys
	locale -> encodings
	locale -> re
	locale -> _collections_abc
	locale -> functools
	encodings -> codecs
	encodings -> sys
	codecs -> builtins
	codecs -> sys
	codecs -> encodings
	codecs -> readline
	"encodings.mbcs" -> codecs
	signal -> _signal
	signal -> signal
	threading -> _thread
	threading -> functools
	traceback -> collections
	traceback -> itertools
	traceback -> linecache
	traceback -> sys
	traceback -> textwrap
	"collections.abc" -> sys
	textwrap -> re
	contextlib -> abc
	contextlib -> os
	contextlib -> sys
	contextlib -> _collections_abc
	ast -> sys
	ast -> re
	inspect -> abc
	inspect -> ast
	inspect -> dis
	inspect -> collections
	inspect -> enum
	inspect -> importlib
	inspect -> itertools
	inspect -> linecache
	inspect -> os
	inspect -> re
	inspect -> sys
	inspect -> tokenize
	inspect -> token
	inspect -> types
	inspect -> functools
	inspect -> builtins
	dis -> sys
	dis -> types
	dis -> collections
	dis -> io
	dis -> dis
	argparse -> warnings
	gettext -> operator
	gettext -> os
	gettext -> re
	gettext -> sys
	gettext -> _tokenize
	gettext -> gettext
	copy -> types
	copy -> weakref
	copy -> copy
	weakref -> _collections_abc
	weakref -> sys
	weakref -> itertools
	weakref -> copy
	weakref -> atexit
	shutil -> os
	shutil -> sys
	shutil -> stat
	shutil -> fnmatch
	shutil -> collections
	shutil -> errno
	shutil -> warnings
	shutil -> zlib
	shutil -> bz2
	shutil -> lzma
	shutil -> nt
	shutil -> _winapi
	shutil -> _stat
	shutil -> copy
	fnmatch -> os
	fnmatch -> posixpath
	fnmatch -> re
	fnmatch -> functools
	fnmatch -> fnmatch
	bz2 -> io
	bz2 -> os
	bz2 -> _compression
	bz2 -> readline
	_compression -> io
	_compression -> sys
	lzma -> builtins
	lzma -> io
	lzma -> os
	lzma -> _compression
	lzma -> readline
	tarfile -> sys
	tarfile -> os
	tarfile -> io
	tarfile -> shutil
	tarfile -> stat
	tarfile -> time
	tarfile -> struct
	tarfile -> copy
	tarfile -> re
	tarfile -> warnings
	gzip -> struct
	gzip -> sys
	gzip -> time
	gzip -> os
	gzip -> zlib
	gzip -> builtins
	gzip -> io
	gzip -> _compression
	gzip -> readline
	zipfile -> binascii
	zipfile -> importlib
	zipfile -> io
	zipfile -> os
	zipfile -> shutil
	zipfile -> stat
	zipfile -> struct
	zipfile -> sys
	zipfile -> threading
	zipfile -> time
	zipfile -> zlib
	zipfile -> bz2
	zipfile -> lzma
	importlib -> _imp
	importlib -> sys
	importlib -> warnings
	"importlib._bootstrap" -> _thread
	"importlib._bootstrap" -> _warnings
	"importlib._bootstrap" -> _weakref
	"importlib._bootstrap" -> _imp
	"importlib._bootstrap" -> sys
	"importlib._bootstrap_external" -> _imp
	"importlib._bootstrap_external" -> _io
	"importlib._bootstrap_external" -> sys
	"importlib._bootstrap_external" -> _warnings
	"importlib._bootstrap_external" -> marshal
	"importlib._bootstrap_external" -> winreg
	tokenize -> collections
	tokenize -> functools
	tokenize -> re
	tokenize -> sys
	tokenize -> _tokenize
	tokenize -> token
	tokenize -> tokenize
	"importlib.resources._common" -> os
	"importlib.resources._common" -> pathlib
	"importlib.resources._common" -> tempfile
	"importlib.resources._common" -> functools
	"importlib.resources._common" -> contextlib
	"importlib.resources._common" -> types
	"importlib.resources._common" -> importlib
	"importlib.resources._common" -> inspect
	"importlib.resources._common" -> warnings
	"importlib.resources._common" -> itertools
	pathlib -> fnmatch
	pathlib -> functools
	pathlib -> io
	pathlib -> ntpath
	pathlib -> os
	pathlib -> posixpath
	pathlib -> re
	pathlib -> sys
	pathlib -> warnings
	pathlib -> stat
	pathlib -> glob
	"urllib.parse" -> functools
	"urllib.parse" -> math
	"urllib.parse" -> re
	"urllib.parse" -> types
	"urllib.parse" -> warnings
	"urllib.parse" -> ipaddress
	ipaddress -> functools
	tempfile -> _warnings
	tempfile -> _io
	tempfile -> _weakref
	tempfile -> _thread
	random -> _bisect
	random -> _random
	random -> random
	bisect -> bisect
	hashlib -> _hashlib
	hashlib -> logging
	logging -> sys
	logging -> os
	logging -> time
	logging -> io
	logging -> re
	logging -> traceback
	logging -> warnings
	logging -> weakref
	logging -> collections
	logging -> threading
	logging -> atexit
	pickle -> sys
	pickle -> re
	pickle -> io
	pickle -> codecs
	pickle -> _compat_pickle
	pickle -> argparse
	pickle -> pprint
	pickle -> readline
	pprint -> _collections
	pprint -> re
	pprint -> pprint
	dataclasses -> re
	dataclasses -> sys
	dataclasses -> copy
	dataclasses -> types
	dataclasses -> inspect
	dataclasses -> keyword
	dataclasses -> functools
	dataclasses -> itertools
	dataclasses -> abc
	dataclasses -> _thread
	doctest -> __future__
	doctest -> difflib
	doctest -> inspect
	doctest -> linecache
	doctest -> os
	doctest -> pdb
	doctest -> re
	doctest -> sys
	doctest -> traceback
	doctest -> unittest
	difflib -> re
	heapq -> doctest
	pdb -> os
	pdb -> io
	pdb -> re
	pdb -> sys
	pdb -> cmd
	pdb -> bdb
	pdb -> dis
	pdb -> code
	pdb -> glob
	pdb -> token
	pdb -> pprint
	pdb -> signal
	pdb -> inspect
	pdb -> tokenize
	pdb -> functools
	pdb -> traceback
	pdb -> linecache
	pdb -> test
	pdb -> pdb
	cmd -> string
	cmd -> sys
	platform -> collections
	platform -> os
	platform -> re
	platform -> sys
	platform -> functools
	platform -> itertools
	platform -> _wmi
	platform -> platform
	plistlib -> binascii
	plistlib -> codecs
	plistlib -> datetime
	plistlib -> enum
	plistlib -> itertools
	plistlib -> os
	plistlib -> re
	plistlib -> struct
	datetime -> sys
	datetime -> dbm
	datetime -> time
	datetime -> datetime
	_pydatetime -> sys
	_pydatetime -> dbm
	_pydatetime -> time
	_pydatetime -> datetime
	_strptime -> time
	_strptime -> locale
	_strptime -> calendar
	_strptime -> _strptime
	calendar -> sys
	calendar -> datetime
	calendar -> _locale
	calendar -> warnings
	calendar -> calendar
	"xml.parsers.expat" -> sys
	socket -> _socket
	socket -> os
	socket -> sys
	socket -> io
	socket -> selectors
	socket -> errno
	socket -> socket
	socket -> array
	selectors -> math
	selectors -> select
	selectors -> sys
	"importlib.metadata" -> os
	"importlib.metadata" -> re
	"importlib.metadata" -> abc
	"importlib.metadata" -> csv
	"importlib.metadata" -> sys
	"importlib.metadata" -> email
	"importlib.metadata" -> pathlib
	"importlib.metadata" -> zipfile
	"importlib.metadata" -> operator
	"importlib.metadata" -> textwrap
	"importlib.metadata" -> warnings
	"importlib.metadata" -> functools
	"importlib.metadata" -> itertools
	"importlib.metadata" -> posixpath
	"importlib.metadata" -> contextlib
	"importlib.metadata" -> collections
	"importlib.metadata" -> inspect
	"importlib.metadata" -> attr
	"importlib.metadata" -> select
	csv -> re
	csv -> types
	"email.feedparser" -> re
	"email.feedparser" -> readline
	"email._policybase" -> abc
	"email.header" -> re
	"email.header" -> binascii
	"email.header" -> email
	"email.quoprimime" -> re
	base64 -> re
	base64 -> struct
	base64 -> binascii
	getopt -> os
	getopt -> getopt
	getopt -> sys
	"email.charset" -> email
	"email.utils" -> os
	"email.utils" -> re
	"email.utils" -> time
	"email.utils" -> random
	"email.utils" -> socket
	"email.utils" -> datetime
	"email.utils" -> urllib
	"email._parseaddr" -> time
	"email._parseaddr" -> calendar
	"email.message" -> binascii
	"email.message" -> re
	"email.message" -> quopri
	"email._encoded_words" -> re
	"email._encoded_words" -> base64
	"email._encoded_words" -> binascii
	"email._encoded_words" -> functools
	"email.iterators" -> sys
	"email.generator" -> re
	"email.generator" -> sys
	"email.generator" -> time
	"email.generator" -> random
	"email.policy" -> re
	"email.policy" -> sys
	"email.headerregistry" -> datetime
	"email._header_value_parser" -> re
	"email._header_value_parser" -> sys
	"email._header_value_parser" -> urllib
	"email._header_value_parser" -> pprint
	"email.contentmanager" -> binascii
	"email.contentmanager" -> email
	"importlib.metadata._adapters" -> functools
	"importlib.metadata._adapters" -> warnings
	"importlib.metadata._adapters" -> re
	"importlib.metadata._adapters" -> textwrap
	"importlib.metadata._adapters" -> email
	"importlib.metadata._adapters" -> json
	"importlib.metadata._text" -> re
	"importlib.metadata._functools" -> types
	"importlib.metadata._functools" -> functools
	"importlib.metadata._meta" -> json
	typing -> collections
	typing -> copyreg
	typing -> contextlib
	typing -> functools
	typing -> operator
	typing -> sys
	typing -> types
	typing -> warnings
	typing -> io
	typing -> re
	typing -> readline
	"importlib.metadata._collections" -> collections
	"importlib.abc" -> abc
	"importlib.abc" -> warnings
	"importlib._abc" -> abc
	"importlib.resources.abc" -> abc
	"importlib.resources.abc" -> io
	"importlib.resources.abc" -> itertools
	"importlib.resources.abc" -> os
	"importlib.resources.abc" -> pathlib
	"pyreadline3.py3k_compat" -> sys
	"pyreadline3.clipboard.win32_clipboard" -> ctypes
	"ctypes._endian" -> sys
	"ctypes.wintypes" -> ctypes
	"pyreadline3.keysyms.ironpython_keysyms" -> code
	"pyreadline3.unicode_helper" -> sys
	"pyreadline3.console.ironpython_console" -> os
	"pyreadline3.console.ironpython_console" -> re
	"pyreadline3.console.ironpython_console" -> sys
	"pyreadline3.console.ironpython_console" -> time
	"pyreadline3.console.ansi" -> os
	"pyreadline3.console.ansi" -> re
	"pyreadline3.console.ansi" -> sys
	"pyreadline3.console.ansi" -> pprint
	"pyreadline3.console.ansi" -> copy
	"pyreadline3.logger.control" -> os
	"logging.handlers" -> io
	"logging.handlers" -> logging
	"logging.handlers" -> socket
	"logging.handlers" -> os
	"logging.handlers" -> pickle
	"logging.handlers" -> struct
	"logging.handlers" -> time
	"logging.handlers" -> re
	"logging.handlers" -> queue
	"logging.handlers" -> threading
	"logging.handlers" -> copy
	queue -> threading
	queue -> types
	queue -> time
	smtplib -> socket
	smtplib -> io
	smtplib -> re
	smtplib -> email
	smtplib -> base64
	smtplib -> hmac
	smtplib -> copy
	smtplib -> datetime
	smtplib -> sys
	smtplib -> ssl
	hmac -> _warnings
	hmac -> _hashlib
	hmac -> copy
	ssl -> sys
	ssl -> os
	ssl -> _ssl
	ssl -> socket
	ssl -> _socket
	ssl -> base64
	ssl -> errno
	ssl -> warnings
	win32evtlogutil -> win32api
	win32evtlogutil -> win32con
	win32evtlogutil -> win32evtlog
	win32evtlogutil -> winerror
	"http.client" -> email
	"http.client" -> errno
	"http.client" -> http
	"http.client" -> io
	"http.client" -> re
	"http.client" -> socket
	"http.client" -> sys
	"http.client" -> collections
	"http.client" -> ssl
	"http.client" -> readline
	"pyreadline3.logger.logger" -> logging
	"pyreadline3.logger.logger" -> os
	"pyreadline3.logger.socket_stream" -> socket
	"pyreadline3.lineeditor.lineobj" -> copy
	"pyreadline3.lineeditor.wordmatcher" -> re
	"pyreadline3.modes.basemode" -> glob
	"pyreadline3.modes.basemode" -> math
	"pyreadline3.modes.basemode" -> os
	"pyreadline3.modes.basemode" -> re
	"pyreadline3.modes.basemode" -> sys
	glob -> contextlib
	glob -> os
	glob -> re
	glob -> fnmatch
	glob -> itertools
	glob -> stat
	glob -> sys
	glob -> glob
	"pyreadline3.lineeditor.history" -> re
	"pyreadline3.lineeditor.history" -> operator
	"pyreadline3.lineeditor.history" -> string
	"pyreadline3.lineeditor.history" -> sys
	"pyreadline3.lineeditor.history" -> os
	"pyreadline3.lineeditor.history" -> io
	"pyreadline3.modes.notemacs" -> os
	"pyreadline3.modes.notemacs" -> readline
	"pyreadline3.modes.vi" -> os
	"pyreadline3.rlmain" -> os
	"pyreadline3.rlmain" -> re
	"pyreadline3.rlmain" -> sys
	"pyreadline3.rlmain" -> time
	"pyreadline3.rlmain" -> glob
	"pyreadline3.rlmain" -> pyreadline3
	"pyreadline3.rlmain" -> readline
	bdb -> fnmatch
	bdb -> sys
	bdb -> os
	bdb -> test
	reprlib -> builtins
	code -> sys
	code -> traceback
	code -> argparse
	codeop -> __future__
	codeop -> warnings
	runpy -> sys
	runpy -> importlib
	runpy -> io
	runpy -> os
	"importlib.util" -> _imp
	"importlib.util" -> sys
	"importlib.util" -> types
	pkgutil -> importlib
	pkgutil -> os
	pkgutil -> sys
	pkgutil -> warnings
	pkgutil -> zipimport
	zipimport -> _imp
	zipimport -> _io
	zipimport -> marshal
	zipimport -> sys
	zipimport -> time
	zipimport -> _warnings
	shlex -> os
	shlex -> re
	shlex -> sys
	shlex -> shlex
	pydoc -> __future__
	pydoc -> builtins
	pydoc -> importlib
	pydoc -> inspect
	pydoc -> io
	pydoc -> os
	pydoc -> pkgutil
	pydoc -> platform
	pydoc -> re
	pydoc -> sys
	pydoc -> sysconfig
	pydoc -> time
	pydoc -> tokenize
	pydoc -> urllib
	pydoc -> warnings
	pydoc -> html
	sysconfig -> os
	sysconfig -> sys
	sysconfig -> threading
	_osx_support -> os
	_osx_support -> re
	_osx_support -> sys
	_aix_support -> sys
	_aix_support -> sysconfig
	"http.server" -> copy
	"http.server" -> datetime
	"http.server" -> email
	"http.server" -> html
	"http.server" -> http
	"http.server" -> io
	"http.server" -> itertools
	"http.server" -> mimetypes
	"http.server" -> os
	"http.server" -> posixpath
	"http.server" -> select
	"http.server" -> shutil
	"http.server" -> socket
	"http.server" -> socketserver
	"http.server" -> sys
	"http.server" -> time
	"http.server" -> urllib
	"http.server" -> test
	"http.server" -> argparse
	"http.server" -> contextlib
	mimetypes -> os
	mimetypes -> sys
	mimetypes -> posixpath
	mimetypes -> urllib
	socketserver -> socket
	socketserver -> selectors
	socketserver -> os
	socketserver -> sys
	socketserver -> threading
	socketserver -> time
	webbrowser -> os
	webbrowser -> shlex
	webbrowser -> shutil
	webbrowser -> sys
	webbrowser -> subprocess
	webbrowser -> threading
	webbrowser -> warnings
	"unittest.result" -> io
	"unittest.result" -> sys
	"unittest.result" -> traceback
	"unittest.case" -> sys
	"unittest.case" -> functools
	"unittest.case" -> difflib
	"unittest.case" -> pprint
	"unittest.case" -> re
	"unittest.case" -> warnings
	"unittest.case" -> collections
	"unittest.case" -> contextlib
	"unittest.case" -> traceback
	"unittest.case" -> time
	"unittest.case" -> types
	"unittest._log" -> logging
	"unittest._log" -> collections
	"unittest.suite" -> sys
	"unittest.loader" -> os
	"unittest.loader" -> re
	"unittest.loader" -> sys
	"unittest.loader" -> traceback
	"unittest.loader" -> types
	"unittest.loader" -> functools
	"unittest.loader" -> fnmatch
	"unittest.main" -> sys
	"unittest.main" -> argparse
	"unittest.main" -> os
	"unittest.main" -> warnings
	"unittest.runner" -> sys
	"unittest.runner" -> time
	"unittest.runner" -> warnings
	"unittest.signals" -> signal
	"unittest.signals" -> weakref
	"unittest.async_case" -> asyncio
	"unittest.async_case" -> contextvars
	"unittest.async_case" -> inspect
	"unittest.async_case" -> warnings
	asyncio -> sys
	"asyncio.base_events" -> collections
	"asyncio.base_events" -> concurrent
	"asyncio.base_events" -> errno
	"asyncio.base_events" -> functools
	"asyncio.base_events" -> heapq
	"asyncio.base_events" -> itertools
	"asyncio.base_events" -> os
	"asyncio.base_events" -> socket
	"asyncio.base_events" -> stat
	"asyncio.base_events" -> subprocess
	"asyncio.base_events" -> threading
	"asyncio.base_events" -> time
	"asyncio.base_events" -> traceback
	"asyncio.base_events" -> sys
	"asyncio.base_events" -> warnings
	"asyncio.base_events" -> weakref
	"asyncio.base_events" -> ssl
	"concurrent.futures._base" -> collections
	"concurrent.futures._base" -> logging
	"concurrent.futures._base" -> threading
	"concurrent.futures._base" -> time
	"concurrent.futures._base" -> types
	"concurrent.futures.process" -> os
	"concurrent.futures.process" -> queue
	"concurrent.futures.process" -> multiprocessing
	"concurrent.futures.process" -> threading
	"concurrent.futures.process" -> weakref
	"concurrent.futures.process" -> itertools
	"concurrent.futures.process" -> sys
	multiprocessing -> sys
	"multiprocessing.context" -> os
	"multiprocessing.context" -> sys
	"multiprocessing.context" -> threading
	"multiprocessing.process" -> os
	"multiprocessing.process" -> sys
	"multiprocessing.process" -> signal
	"multiprocessing.process" -> itertools
	"multiprocessing.process" -> threading
	"multiprocessing.util" -> os
	"multiprocessing.util" -> itertools
	"multiprocessing.util" -> sys
	"multiprocessing.util" -> weakref
	"multiprocessing.util" -> atexit
	"multiprocessing.util" -> threading
	"test.support" -> contextlib
	"test.support" -> dataclasses
	"test.support" -> functools
	"test.support" -> opcode
	"test.support" -> os
	"test.support" -> re
	"test.support" -> stat
	"test.support" -> sys
	"test.support" -> sysconfig
	"test.support" -> textwrap
	"test.support" -> time
	"test.support" -> types
	"test.support" -> unittest
	"test.support" -> warnings
	"ctypes.util" -> os
	"ctypes.util" -> shutil
	"ctypes.util" -> subprocess
	"ctypes.util" -> sys
	"ctypes.util" -> re
	"ctypes.util" -> tempfile
	"ctypes.util" -> test
	"ctypes.macholib.dyld" -> os
	"ctypes.macholib.framework" -> re
	"ctypes.macholib.dylib" -> re
	"ctypes._aix" -> re
	tkinter -> collections
	tkinter -> enum
	tkinter -> sys
	tkinter -> types
	tkinter -> _tkinter
	tkinter -> re
	tkinter -> select
	tkinter -> copy
	getpass -> contextlib
	getpass -> io
	getpass -> os
	getpass -> sys
	getpass -> warnings
	getpass -> getpass
	getpass -> msvcrt
	"urllib.request" -> base64
	"urllib.request" -> bisect
	"urllib.request" -> email
	"urllib.request" -> hashlib
	"urllib.request" -> http
	"urllib.request" -> io
	"urllib.request" -> os
	"urllib.request" -> re
	"urllib.request" -> socket
	"urllib.request" -> string
	"urllib.request" -> sys
	"urllib.request" -> time
	"urllib.request" -> tempfile
	"urllib.request" -> contextlib
	"urllib.request" -> warnings
	"urllib.request" -> ssl
	"urllib.error" -> io
	"urllib.error" -> urllib
	"urllib.response" -> tempfile
	"http.cookiejar" -> os
	"http.cookiejar" -> copy
	"http.cookiejar" -> datetime
	"http.cookiejar" -> re
	"http.cookiejar" -> time
	"http.cookiejar" -> urllib
	"http.cookiejar" -> http
	ftplib -> sys
	ftplib -> socket
	ftplib -> ssl
	ftplib -> test
	netrc -> os
	netrc -> stat
	netrc -> netrc
	"test.support.os_helper" -> collections
	"test.support.os_helper" -> contextlib
	"test.support.os_helper" -> errno
	"test.support.os_helper" -> os
	"test.support.os_helper" -> re
	"test.support.os_helper" -> stat
	"test.support.os_helper" -> string
	"test.support.os_helper" -> sys
	"test.support.os_helper" -> time
	"test.support.os_helper" -> unittest
	"test.support.os_helper" -> warnings
	"test.support.os_helper" -> unicodedata
	"test.support.os_helper" -> ctypes
	"test.support.os_helper" -> copy
	tracemalloc -> fnmatch
	tracemalloc -> linecache
	tracemalloc -> os
	tracemalloc -> pickle
	tracemalloc -> traceback
	tracemalloc -> statistics
	setuptools -> functools
	setuptools -> os
	setuptools -> re
	setuptools -> sys
	setuptools -> _distutils_hack
	setuptools -> logging
	_distutils_hack -> os
	_distutils_hack -> sys
	"setuptools.logging" -> inspect
	"setuptools.logging" -> logging
	"setuptools.logging" -> sys
	"setuptools.monkey" -> inspect
	"setuptools.monkey" -> platform
	"setuptools.monkey" -> sys
	"setuptools.monkey" -> types
	"setuptools._core_metadata" -> os
	"setuptools._core_metadata" -> stat
	"setuptools._core_metadata" -> textwrap
	"packaging.markers" -> operator
	"packaging.markers" -> os
	"packaging.markers" -> platform
	"packaging.markers" -> sys
	"packaging._parser" -> ast
	"packaging._tokenizer" -> contextlib
	"packaging._tokenizer" -> re
	"packaging.specifiers" -> abc
	"packaging.specifiers" -> itertools
	"packaging.specifiers" -> re
	"packaging.specifiers" -> operator
	"packaging.utils" -> re
	"packaging.tags" -> logging
	"packaging.tags" -> platform
	"packaging.tags" -> struct
	"packaging.tags" -> subprocess
	"packaging.tags" -> sys
	"packaging.tags" -> sysconfig
	"packaging._manylinux" -> collections
	"packaging._manylinux" -> contextlib
	"packaging._manylinux" -> functools
	"packaging._manylinux" -> os
	"packaging._manylinux" -> re
	"packaging._manylinux" -> sys
	"packaging._manylinux" -> warnings
	"packaging._elffile" -> enum
	"packaging._elffile" -> os
	"packaging._elffile" -> struct
	"packaging._musllinux" -> functools
	"packaging._musllinux" -> re
	"packaging._musllinux" -> subprocess
	"packaging._musllinux" -> sys
	"packaging._musllinux" -> sysconfig
	"packaging.version" -> itertools
	"packaging.version" -> re
	"setuptools._normalization" -> re
	"setuptools._normalization" -> packaging
	json -> codecs
	"json.decoder" -> re
	"json.scanner" -> re
	"json.encoder" -> re
	"click.core" -> enum
	"click.core" -> errno
	"click.core" -> inspect
	"click.core" -> os
	"click.core" -> sys
	"click.core" -> abc
	"click.core" -> types
	"click.types" -> os
	"click.types" -> stat
	"click.types" -> sys
	"click.types" -> datetime
	"click._compat" -> codecs
	"click._compat" -> io
	"click._compat" -> os
	"click._compat" -> re
	"click._compat" -> sys
	"click._winconsole" -> io
	"click._winconsole" -> sys
	"click._winconsole" -> time
	"click._winconsole" -> msvcrt
	"colorama.initialise" -> atexit
	"colorama.initialise" -> contextlib
	"colorama.initialise" -> sys
	"colorama.ansitowin32" -> re
	"colorama.ansitowin32" -> sys
	"colorama.ansitowin32" -> os
	"colorama.win32" -> ctypes
	"click.utils" -> os
	"click.utils" -> re
	"click.utils" -> sys
	typing_extensions -> abc
	typing_extensions -> collections
	typing_extensions -> contextlib
	typing_extensions -> functools
	typing_extensions -> inspect
	typing_extensions -> operator
	typing_extensions -> sys
	typing_extensions -> typing
	typing_extensions -> warnings
	typing_extensions -> _socket
	"click.shell_completion" -> os
	"click.shell_completion" -> re
	uuid -> os
	uuid -> sys
	uuid -> platform
	uuid -> _uuid
	uuid -> time
	"click._textwrap" -> textwrap
	"click.termui" -> inspect
	"click.termui" -> io
	"click.termui" -> itertools
	"click.termui" -> sys
	"click._termui_impl" -> contextlib
	"click._termui_impl" -> math
	"click._termui_impl" -> os
	"click._termui_impl" -> sys
	"click._termui_impl" -> time
	"click._termui_impl" -> msvcrt
	"click._termui_impl" -> tty
	"click.decorators" -> inspect
	"click.decorators" -> types
	importlib_metadata -> os
	importlib_metadata -> re
	importlib_metadata -> abc
	importlib_metadata -> sys
	importlib_metadata -> json
	importlib_metadata -> zipp
	importlib_metadata -> email
	importlib_metadata -> types
	importlib_metadata -> inspect
	importlib_metadata -> pathlib
	importlib_metadata -> operator
	importlib_metadata -> textwrap
	importlib_metadata -> functools
	importlib_metadata -> itertools
	importlib_metadata -> posixpath
	importlib_metadata -> collections
	importlib_metadata -> attr
	importlib_metadata -> select
	zipp -> io
	zipp -> posixpath
	zipp -> zipfile
	zipp -> itertools
	zipp -> contextlib
	zipp -> pathlib
	zipp -> re
	zipp -> glob
	"zipp.py310compat" -> sys
	"zipp.py310compat" -> io
	"zipp.glob" -> re
	"importlib_metadata._meta" -> os
	"importlib_metadata._meta" -> json
	"importlib_metadata.compat.py311" -> os
	"importlib_metadata.compat.py311" -> pathlib
	"importlib_metadata.compat.py311" -> sys
	"importlib_metadata.compat.py311" -> types
	"importlib_metadata._collections" -> collections
	"importlib_metadata._compat" -> sys
	"importlib_metadata._compat" -> platform
	"importlib_metadata._functools" -> types
	"importlib_metadata._functools" -> functools
	"importlib_metadata._adapters" -> re
	"importlib_metadata._adapters" -> textwrap
	"importlib_metadata._adapters" -> email
	"importlib_metadata._adapters" -> json
	"importlib_metadata._text" -> re
	"pix2text.utils" -> hashlib
	"pix2text.utils" -> os
	"pix2text.utils" -> re
	"pix2text.utils" -> shutil
	"pix2text.utils" -> logging
	"pix2text.utils" -> platform
	"pix2text.utils" -> random
	"pix2text.utils" -> torch
	"PIL.ImageOps" -> functools
	"PIL.ImageOps" -> operator
	"PIL.ImageOps" -> re
	"PIL.ImagePalette" -> array
	"PIL.ImagePalette" -> random
	"PIL.ImagePalette" -> copy
	"PIL.GimpPaletteFile" -> re
	"PIL.ImageColor" -> re
	numpy -> sys
	numpy -> warnings
	numpy -> random
	numpy -> math
	numpy -> test
	numpy -> os
	"numpy._globals" -> enum
	"numpy.core" -> os
	"numpy.core" -> warnings
	"numpy.core" -> sys
	"numpy.core" -> nt
	"numpy.core" -> copyreg
	"numpy.core" -> test
	"numpy.core.multiarray" -> functools
	"numpy.core.overrides" -> collections
	"numpy.core.overrides" -> functools
	"numpy.core.overrides" -> os
	"numpy._utils._inspect" -> types
	"numpy.core.numerictypes" -> numbers
	"numpy.core.numerictypes" -> warnings
	"numpy.core.numerictypes" -> array
	"numpy.compat.py3k" -> sys
	"numpy.compat.py3k" -> os
	"numpy.compat.py3k" -> io
	"numpy.compat.py3k" -> pickle
	"numpy.core.numeric" -> functools
	"numpy.core.numeric" -> itertools
	"numpy.core.numeric" -> operator
	"numpy.core.numeric" -> sys
	"numpy.core.numeric" -> warnings
	"numpy.core.numeric" -> numbers
	"numpy.core.numeric" -> builtins
	"numpy.core.numeric" -> array
	"numpy.core.shape_base" -> functools
	"numpy.core.shape_base" -> itertools
	"numpy.core.shape_base" -> operator
	"numpy.core.shape_base" -> warnings
	"numpy.core.shape_base" -> array
	"numpy.core.fromnumeric" -> functools
	"numpy.core.fromnumeric" -> types
	"numpy.core.fromnumeric" -> warnings
	"numpy.core.fromnumeric" -> nt
	"numpy.core.fromnumeric" -> array
	"numpy.core._methods" -> warnings
	"numpy.core._methods" -> nt
	"numpy.core._methods" -> pickle
	"numpy.core._ufunc_config" -> collections
	"numpy.core._ufunc_config" -> contextlib
	"numpy.core._ufunc_config" -> contextvars
	"numpy.lib" -> test
	"numpy.lib.scimath" -> nt
	"numpy.lib.type_check" -> functools
	"numpy.core.getlimits" -> warnings
	"numpy.core.getlimits" -> array
	"numpy.lib.ufunclike" -> warnings
	"numpy.lib.ufunclike" -> functools
	"numpy.lib.index_tricks" -> functools
	"numpy.lib.index_tricks" -> sys
	"numpy.lib.index_tricks" -> math
	"numpy.lib.index_tricks" -> warnings
	"numpy.lib.index_tricks" -> array
	"numpy.matrixlib" -> test
	"numpy.matrixlib.defmatrix" -> sys
	"numpy.matrixlib.defmatrix" -> warnings
	"numpy.matrixlib.defmatrix" -> ast
	"numpy.linalg" -> test
	"numpy.linalg.linalg" -> functools
	"numpy.linalg.linalg" -> operator
	"numpy.linalg.linalg" -> warnings
	"numpy.linalg.linalg" -> array
	"numpy.lib.twodim_base" -> functools
	"numpy.lib.twodim_base" -> operator
	"numpy._typing._array_like" -> sys
	"numpy._pytesttester" -> sys
	"numpy._pytesttester" -> os
	"numpy.array_api" -> warnings
	"numpy.array_api._typing" -> sys
	"numpy.array_api._array_object" -> operator
	"numpy.array_api._array_object" -> types
	"numpy.typing" -> test
	"numpy._typing._add_docstring" -> re
	"numpy._typing._add_docstring" -> textwrap
	"numpy.array_api.linalg" -> numpy
	"numpy.testing" -> test
	"numpy.testing._private.utils" -> os
	"numpy.testing._private.utils" -> sys
	"numpy.testing._private.utils" -> platform
	"numpy.testing._private.utils" -> re
	"numpy.testing._private.utils" -> gc
	"numpy.testing._private.utils" -> operator
	"numpy.testing._private.utils" -> warnings
	"numpy.testing._private.utils" -> shutil
	"numpy.testing._private.utils" -> contextlib
	"numpy.testing._private.utils" -> pprint
	"numpy.testing._private.utils" -> sysconfig
	"numpy.testing._private.utils" -> array
	"numpy.testing._private.utils" -> numpy
	"numpy.testing._private.utils" -> unittest
	psutil -> collections
	psutil -> contextlib
	psutil -> datetime
	psutil -> functools
	psutil -> os
	psutil -> signal
	psutil -> subprocess
	psutil -> sys
	psutil -> threading
	psutil -> time
	psutil -> test
	"psutil._common" -> collections
	"psutil._common" -> contextlib
	"psutil._common" -> errno
	"psutil._common" -> functools
	"psutil._common" -> os
	"psutil._common" -> socket
	"psutil._common" -> stat
	"psutil._common" -> sys
	"psutil._common" -> threading
	"psutil._common" -> warnings
	"psutil._common" -> enum
	"psutil._compat" -> collections
	"psutil._compat" -> contextlib
	"psutil._compat" -> errno
	"psutil._compat" -> functools
	"psutil._compat" -> os
	"psutil._compat" -> sys
	"psutil._compat" -> types
	"psutil._compat" -> platform
	"psutil._pslinux" -> base64
	"psutil._pslinux" -> collections
	"psutil._pslinux" -> errno
	"psutil._pslinux" -> functools
	"psutil._pslinux" -> glob
	"psutil._pslinux" -> os
	"psutil._pslinux" -> re
	"psutil._pslinux" -> socket
	"psutil._pslinux" -> struct
	"psutil._pslinux" -> sys
	"psutil._pslinux" -> warnings
	"psutil._pslinux" -> enum
	"psutil._pslinux" -> ctypes
	"psutil._psposix" -> glob
	"psutil._psposix" -> os
	"psutil._psposix" -> signal
	"psutil._psposix" -> sys
	"psutil._psposix" -> time
	"psutil._psposix" -> enum
	"psutil._pswindows" -> contextlib
	"psutil._pswindows" -> errno
	"psutil._pswindows" -> functools
	"psutil._pswindows" -> os
	"psutil._pswindows" -> signal
	"psutil._pswindows" -> sys
	"psutil._pswindows" -> time
	"psutil._pswindows" -> enum
	"psutil._psosx" -> errno
	"psutil._psosx" -> functools
	"psutil._psosx" -> os
	"psutil._psbsd" -> contextlib
	"psutil._psbsd" -> errno
	"psutil._psbsd" -> functools
	"psutil._psbsd" -> os
	"xml.etree.ElementTree" -> sys
	"xml.etree.ElementTree" -> re
	"xml.etree.ElementTree" -> warnings
	"xml.etree.ElementTree" -> io
	"xml.etree.ElementTree" -> collections
	"xml.etree.ElementTree" -> contextlib
	"xml.etree.ElementTree" -> weakref
	"xml.etree.ElementPath" -> re
	"psutil._pssunos" -> errno
	"psutil._pssunos" -> functools
	"psutil._pssunos" -> os
	"psutil._pssunos" -> socket
	"psutil._pssunos" -> subprocess
	"psutil._pssunos" -> sys
	"psutil._psaix" -> functools
	"psutil._psaix" -> glob
	"psutil._psaix" -> os
	"psutil._psaix" -> re
	"psutil._psaix" -> subprocess
	"psutil._psaix" -> sys
	"numpy.testing._private.extbuild" -> os
	"numpy.testing._private.extbuild" -> pathlib
	"numpy.testing._private.extbuild" -> subprocess
	"numpy.testing._private.extbuild" -> sys
	"numpy.testing._private.extbuild" -> sysconfig
	"numpy.testing._private.extbuild" -> textwrap
	"numpy.lib.recfunctions" -> itertools
	"numpy.ma" -> test
	"numpy.ma.core" -> builtins
	"numpy.ma.core" -> inspect
	"numpy.ma.core" -> operator
	"numpy.ma.core" -> warnings
	"numpy.ma.core" -> textwrap
	"numpy.ma.core" -> re
	"numpy.ma.core" -> array
	"numpy.ma.core" -> copy
	"numpy.lib.function_base" -> collections
	"numpy.lib.function_base" -> functools
	"numpy.lib.function_base" -> re
	"numpy.lib.function_base" -> sys
	"numpy.lib.function_base" -> warnings
	"numpy.lib.function_base" -> array
	"numpy.lib.function_base" -> builtins
	"numpy.lib.function_base" -> select
	"numpy.lib.function_base" -> copy
	"numpy.core.function_base" -> functools
	"numpy.core.function_base" -> warnings
	"numpy.core.function_base" -> operator
	"numpy.core.function_base" -> types
	"numpy.lib.histograms" -> contextlib
	"numpy.lib.histograms" -> functools
	"numpy.lib.histograms" -> operator
	"numpy.lib.histograms" -> warnings
	"numpy.ma.extras" -> itertools
	"numpy.ma.extras" -> warnings
	"numpy.ma.extras" -> array
	"numpy.ma.mrecords" -> warnings
	"numpy.ma.mrecords" -> copy
	"numpy.core.records" -> warnings
	"numpy.core.records" -> nt
	"numpy.core.records" -> array
	"numpy.core.records" -> pprint
	"numpy.core.arrayprint" -> functools
	"numpy.core.arrayprint" -> numbers
	"numpy.core.arrayprint" -> sys
	"numpy.core.arrayprint" -> array
	"numpy.core.arrayprint" -> operator
	"numpy.core.arrayprint" -> warnings
	"numpy.core.arrayprint" -> contextlib
	"numpy.lib.nanfunctions" -> functools
	"numpy.lib.nanfunctions" -> warnings
	"numpy.lib.shape_base" -> functools
	"numpy.lib.shape_base" -> array
	"numpy.lib.polynomial" -> functools
	"numpy.lib.polynomial" -> re
	"numpy.lib.polynomial" -> warnings
	"numpy.lib.polynomial" -> array
	"numpy.lib.utils" -> os
	"numpy.lib.utils" -> sys
	"numpy.lib.utils" -> textwrap
	"numpy.lib.utils" -> types
	"numpy.lib.utils" -> re
	"numpy.lib.utils" -> warnings
	"numpy.lib.utils" -> functools
	"numpy.lib.utils" -> platform
	"numpy.lib.arraysetops" -> functools
	"numpy.lib.npyio" -> os
	"numpy.lib.npyio" -> re
	"numpy.lib.npyio" -> functools
	"numpy.lib.npyio" -> itertools
	"numpy.lib.npyio" -> warnings
	"numpy.lib.npyio" -> weakref
	"numpy.lib.npyio" -> contextlib
	"numpy.lib.npyio" -> operator
	"numpy.lib.npyio" -> pickle
	"numpy.lib.format" -> numpy
	"numpy.lib.format" -> warnings
	"numpy.lib.format" -> pickle
	"numpy.lib._datasource" -> os
	"numpy.lib._datasource" -> io
	"numpy.lib._version" -> re
	"numpy.core._asarray" -> array
	"numpy.core.defchararray" -> functools
	"numpy.core.defchararray" -> numpy
	"numpy.core.defchararray" -> array
	"numpy.core.einsumfunc" -> itertools
	"numpy.core.einsumfunc" -> operator
	"numpy.core._add_newdocs_scalars" -> sys
	"numpy.core._add_newdocs_scalars" -> os
	"numpy.core._internal" -> ast
	"numpy.core._internal" -> re
	"numpy.core._internal" -> sys
	"numpy.core._internal" -> warnings
	"numpy.core._internal" -> array
	"numpy.core._internal" -> ctypes
	"numpy.core._internal" -> _ctypes
	yaml -> io
	yaml -> warnings
	"yaml.reader" -> codecs
	"yaml.reader" -> re
	"yaml.constructor" -> collections
	"yaml.constructor" -> datetime
	"yaml.constructor" -> base64
	"yaml.constructor" -> binascii
	"yaml.constructor" -> re
	"yaml.constructor" -> sys
	"yaml.constructor" -> types
	"yaml.resolver" -> re
	"yaml.representer" -> datetime
	"yaml.representer" -> copyreg
	"yaml.representer" -> types
	"yaml.representer" -> base64
	"yaml.representer" -> collections
	"numpy.core.umath_tests" -> warnings
	"numpy.lib.user_array" -> array
	"numpy.lib.user_array" -> copy
	"numpy.fft" -> test
	"numpy.fft._pocketfft" -> functools
	"numpy.polynomial" -> test
	"numpy.polynomial.polyutils" -> operator
	"numpy.polynomial.polyutils" -> functools
	"numpy.polynomial.polyutils" -> warnings
	"numpy.polynomial._polybase" -> os
	"numpy.polynomial._polybase" -> abc
	"numpy.polynomial._polybase" -> numbers
	"numpy.polynomial._polybase" -> copy
	"numpy.random" -> _pickle
	"numpy.random" -> test
	"numpy.ctypeslib" -> os
	"numpy.ctypeslib" -> ctypes
	torch -> math
	torch -> os
	torch -> sys
	torch -> platform
	torch -> textwrap
	torch -> ctypes
	torch -> inspect
	torch -> builtins
	torch -> glob
	torch -> attr
	torch -> torch
	torch -> multiprocessing
	torch -> random
	torch -> __future__
	torch -> onnx
	"torch._utils" -> copyreg
	"torch._utils" -> functools
	"torch._utils" -> sys
	"torch._utils" -> traceback
	"torch._utils" -> warnings
	"torch._utils" -> torch
	"torch._subclasses" -> torch
	"torch._subclasses.fake_tensor" -> contextlib
	"torch._subclasses.fake_tensor" -> functools
	"torch._subclasses.fake_tensor" -> itertools
	"torch._subclasses.fake_tensor" -> logging
	"torch._subclasses.fake_tensor" -> os
	"torch._subclasses.fake_tensor" -> sys
	"torch._subclasses.fake_tensor" -> traceback
	"torch._subclasses.fake_tensor" -> weakref
	"torch._subclasses.fake_tensor" -> torch
	"torch._logging" -> torch
	"torch._logging._internal" -> functools
	"torch._logging._internal" -> itertools
	"torch._logging._internal" -> logging
	"torch._logging._internal" -> os
	"torch._logging._internal" -> re
	"torch._logging._internal" -> torch
	"torch._guards" -> contextlib
	"torch._guards" -> dataclasses
	"torch._guards" -> enum
	"torch._guards" -> functools
	"torch._guards" -> logging
	"torch._guards" -> threading
	"torch._guards" -> traceback
	"torch._guards" -> unittest
	"torch._guards" -> weakref
	"torch._guards" -> torch
	"torch._guards" -> sympy
	"unittest.mock" -> asyncio
	"unittest.mock" -> contextlib
	"unittest.mock" -> io
	"unittest.mock" -> inspect
	"unittest.mock" -> pprint
	"unittest.mock" -> sys
	"unittest.mock" -> builtins
	"unittest.mock" -> pkgutil
	"unittest.mock" -> copy
	"torch.utils" -> torch
	"torch.utils.throughput_benchmark" -> torch
	"torch.utils.backend_registration" -> torch
	"torch.utils.deterministic" -> sys
	"torch.utils.deterministic" -> types
	"torch.utils.deterministic" -> torch
	"torch.utils.collect_env" -> datetime
	"torch.utils.collect_env" -> locale
	"torch.utils.collect_env" -> re
	"torch.utils.collect_env" -> subprocess
	"torch.utils.collect_env" -> sys
	"torch.utils.collect_env" -> os
	"torch.utils.collect_env" -> torch
	"torch.backends" -> types
	"torch.backends.cpu" -> torch
	"torch.backends.cuda" -> contextlib
	"torch.backends.cuda" -> torch
	"torch.backends.cudnn" -> os
	"torch.backends.cudnn" -> sys
	"torch.backends.cudnn" -> warnings
	"torch.backends.cudnn" -> torch
	"torch.backends.mkl" -> torch
	"torch.backends.mkldnn" -> sys
	"torch.backends.mkldnn" -> torch
	"torch.backends.mps" -> torch
	"torch.library" -> traceback
	"torch.library" -> torch
	"torch.library" -> weakref
	"torch.library" -> functools
	"torch.library" -> inspect
	"torch.library" -> re
	"torch.library" -> sys
	"torch._ops" -> contextlib
	"torch._ops" -> ctypes
	"torch._ops" -> importlib
	"torch._ops" -> inspect
	"torch._ops" -> sys
	"torch._ops" -> types
	"torch._ops" -> torch
	"torch.utils._pytree" -> dataclasses
	"torch.utils._pytree" -> importlib
	"torch.utils._pytree" -> json
	"torch.utils._pytree" -> threading
	"torch.utils._pytree" -> warnings
	"torch.utils._cxx_pytree" -> functools
	"torch.utils._cxx_pytree" -> warnings
	"torch.utils._cxx_pytree" -> torch
	"torch._utils_internal" -> logging
	"torch._utils_internal" -> os
	"torch._utils_internal" -> sys
	"torch._utils_internal" -> tempfile
	"torch._utils_internal" -> torch
	"torch._functorch.pyfunctorch" -> contextlib
	"torch._functorch.pyfunctorch" -> torch
	"torch.autograd" -> warnings
	"torch.autograd" -> torch
	"torch.types" -> torch
	"torch.types" -> builtins
	"torch._vmap_internals" -> functools
	"torch._vmap_internals" -> warnings
	"torch._vmap_internals" -> torch
	"torch.overrides" -> __future__
	"torch.overrides" -> collections
	"torch.overrides" -> functools
	"torch.overrides" -> types
	"torch.overrides" -> warnings
	"torch.overrides" -> contextlib
	"torch.overrides" -> torch
	"torch.autograd.forward_ad" -> os
	"torch.autograd.forward_ad" -> torch
	"torch.autograd.grad_mode" -> torch
	"torch.utils._contextlib" -> functools
	"torch.utils._contextlib" -> inspect
	"torch.utils._contextlib" -> warnings
	"torch.utils._contextlib" -> sys
	"torch._decomp" -> inspect
	"torch._decomp" -> torch
	"torch._prims_common" -> operator
	"torch._prims_common" -> warnings
	"torch._prims_common" -> weakref
	"torch._prims_common" -> sympy
	"torch._prims_common" -> torch
	sympy -> sys
	sympy -> mpmath
	sympy -> re
	sympy -> pprint
	sympy -> test
	sympy -> doctest
	mpmath -> re
	timeit -> gc
	timeit -> itertools
	timeit -> sys
	timeit -> time
	timeit -> timeit
	"mpmath.ctx_fp" -> math
	"mpmath.ctx_fp" -> cmath
	"mpmath.libmp.libmpf" -> math
	"mpmath.libmp.libmpf" -> bisect
	"mpmath.libmp.libmpf" -> sys
	"mpmath.libmp.backend" -> os
	"mpmath.libmp.backend" -> sys
	"mpmath.libmp.backend" -> builtins
	"mpmath.libmp.libintmath" -> math
	"mpmath.libmp.libintmath" -> bisect
	"mpmath.libmp.libintmath" -> operator
	"mpmath.libmp.libelefun" -> math
	"mpmath.libmp.libelefun" -> bisect
	"mpmath.libmp.libmpc" -> sys
	"mpmath.libmp.libhyper" -> operator
	"mpmath.libmp.libhyper" -> math
	"mpmath.libmp.gammazeta" -> math
	"mpmath.libmp.gammazeta" -> sys
	"mpmath.functions.functions" -> re
	"mpmath.functions.functions" -> math
	"mpmath.functions.functions" -> cmath
	"mpmath.functions.rszeta" -> math
	"mpmath.calculus.quadrature" -> math
	"mpmath.calculus.quadrature" -> doctest
	"mpmath.calculus.inverselaplace" -> doctest
	"mpmath.calculus.optimization" -> copy
	"mpmath.calculus.optimization" -> doctest
	"mpmath.calculus.odes" -> bisect
	"mpmath.calculus.odes" -> doctest
	"mpmath.matrices.matrices" -> warnings
	"mpmath.matrices.matrices" -> doctest
	"mpmath.matrices.matrices" -> copy
	"mpmath.matrices.linalg" -> copy
	"mpmath.identification" -> doctest
	pylab -> matplotlib
	matplotlib -> atexit
	matplotlib -> contextlib
	matplotlib -> functools
	matplotlib -> importlib
	matplotlib -> inspect
	matplotlib -> locale
	matplotlib -> logging
	matplotlib -> os
	matplotlib -> pprint
	matplotlib -> re
	matplotlib -> shutil
	matplotlib -> subprocess
	matplotlib -> sys
	matplotlib -> tempfile
	matplotlib -> warnings
	matplotlib -> numpy
	matplotlib -> cycler
	"matplotlib._api" -> functools
	"matplotlib._api" -> itertools
	"matplotlib._api" -> re
	"matplotlib._api" -> sys
	"matplotlib._api" -> warnings
	"matplotlib._api.deprecation" -> contextlib
	"matplotlib._api.deprecation" -> functools
	"matplotlib._api.deprecation" -> inspect
	"matplotlib._api.deprecation" -> math
	"matplotlib._api.deprecation" -> warnings
	"matplotlib.cbook" -> collections
	"matplotlib.cbook" -> contextlib
	"matplotlib.cbook" -> functools
	"matplotlib.cbook" -> gzip
	"matplotlib.cbook" -> itertools
	"matplotlib.cbook" -> math
	"matplotlib.cbook" -> operator
	"matplotlib.cbook" -> os
	"matplotlib.cbook" -> shlex
	"matplotlib.cbook" -> subprocess
	"matplotlib.cbook" -> sys
	"matplotlib.cbook" -> time
	"matplotlib.cbook" -> traceback
	"matplotlib.cbook" -> types
	"matplotlib.cbook" -> weakref
	"matplotlib.cbook" -> matplotlib
	"matplotlib.artist" -> contextlib
	"matplotlib.artist" -> inspect
	"matplotlib.artist" -> logging
	"matplotlib.artist" -> re
	"matplotlib.artist" -> warnings
	"matplotlib.colors" -> base64
	"matplotlib.colors" -> functools
	"matplotlib.colors" -> importlib
	"matplotlib.colors" -> inspect
	"matplotlib.colors" -> io
	"matplotlib.colors" -> itertools
	"matplotlib.colors" -> re
	"PIL.PngImagePlugin" -> itertools
	"PIL.PngImagePlugin" -> logging
	"PIL.PngImagePlugin" -> re
	"PIL.PngImagePlugin" -> struct
	"PIL.PngImagePlugin" -> warnings
	"PIL.PngImagePlugin" -> zlib
	"PIL.ImageFile" -> io
	"PIL.ImageFile" -> itertools
	"PIL.ImageFile" -> struct
	"PIL.ImageFile" -> sys
	"PIL._deprecate" -> warnings
	"PIL._util" -> os
	"PIL._typing" -> sys
	"matplotlib.scale" -> inspect
	"matplotlib.scale" -> textwrap
	"matplotlib._docstring" -> inspect
	"matplotlib._docstring" -> copy
	"matplotlib.ticker" -> itertools
	"matplotlib.ticker" -> logging
	"matplotlib.ticker" -> locale
	"matplotlib.ticker" -> math
	"matplotlib.transforms" -> copy
	"matplotlib.transforms" -> functools
	"matplotlib.transforms" -> textwrap
	"matplotlib.transforms" -> weakref
	"matplotlib.transforms" -> math
	"matplotlib.path" -> copy
	"matplotlib.bezier" -> math
	"matplotlib.bezier" -> warnings
	"matplotlib.font_manager" -> copy
	"matplotlib.font_manager" -> dataclasses
	"matplotlib.font_manager" -> json
	"matplotlib.font_manager" -> logging
	"matplotlib.font_manager" -> os
	"matplotlib.font_manager" -> re
	"matplotlib.font_manager" -> subprocess
	"matplotlib.font_manager" -> sys
	"matplotlib.font_manager" -> threading
	"matplotlib._afm" -> logging
	"matplotlib._afm" -> re
	"matplotlib._fontconfig_pattern" -> re
	"pyparsing.util" -> inspect
	"pyparsing.util" -> warnings
	"pyparsing.util" -> types
	"pyparsing.util" -> collections
	"pyparsing.util" -> itertools
	"pyparsing.exceptions" -> re
	"pyparsing.exceptions" -> sys
	"pyparsing.exceptions" -> typing
	"pyparsing.unicode" -> sys
	"pyparsing.core" -> os
	"pyparsing.core" -> typing
	"pyparsing.core" -> string
	"pyparsing.core" -> copy
	"pyparsing.core" -> warnings
	"pyparsing.core" -> re
	"pyparsing.core" -> sys
	"pyparsing.core" -> traceback
	"pyparsing.core" -> types
	"pyparsing.results" -> pprint
	"pyparsing.results" -> copy
	"pyparsing.testing" -> typing
	"pyparsing.testing" -> copy
	"pyparsing.diagram" -> pyparsing
	"pyparsing.diagram" -> typing
	"pyparsing.diagram" -> inspect
	"jinja2.bccache" -> errno
	"jinja2.bccache" -> fnmatch
	"jinja2.bccache" -> marshal
	"jinja2.bccache" -> os
	"jinja2.bccache" -> pickle
	"jinja2.bccache" -> stat
	"jinja2.bccache" -> sys
	"jinja2.bccache" -> tempfile
	"jinja2.environment" -> os
	"jinja2.environment" -> typing
	"jinja2.environment" -> weakref
	"jinja2.environment" -> _tokenize
	markupsafe -> functools
	markupsafe -> string
	markupsafe -> sys
	"jinja2.nodes" -> inspect
	"jinja2.nodes" -> operator
	"jinja2.utils" -> enum
	"jinja2.utils" -> json
	"jinja2.utils" -> os
	"jinja2.utils" -> re
	"jinja2.utils" -> abc
	"jinja2.utils" -> markupsafe
	"jinja2.utils" -> copy
	"jinja2.runtime" -> functools
	"jinja2.runtime" -> sys
	"jinja2.runtime" -> abc
	"jinja2.runtime" -> logging
	"jinja2.async_utils" -> inspect
	"jinja2.lexer" -> re
	"jinja2.lexer" -> test
	"jinja2.lexer" -> tokenize
	"jinja2._identifier" -> re
	"jinja2.compiler" -> copy
	"jinja2.idtracking" -> copy
	"jinja2.filters" -> math
	"jinja2.filters" -> random
	"jinja2.filters" -> re
	"jinja2.filters" -> typing
	"jinja2.filters" -> abc
	"jinja2.sandbox" -> operator
	"jinja2.sandbox" -> types
	"jinja2.sandbox" -> abc
	"jinja2.tests" -> operator
	"jinja2.tests" -> abc
	"jinja2.parser" -> typing
	"jinja2.ext" -> pprint
	"jinja2.ext" -> re
	"jinja2.ext" -> gettext
	"jinja2.ext" -> attr
	"jinja2.loaders" -> importlib
	"jinja2.loaders" -> os
	"jinja2.loaders" -> posixpath
	"jinja2.loaders" -> sys
	"jinja2.loaders" -> weakref
	"jinja2.loaders" -> zipimport
	"jinja2.loaders" -> abc
	"jinja2.debug" -> sys
	"pyparsing.helpers" -> html
	"pyparsing.helpers" -> re
	"pyparsing.helpers" -> sys
	"pyparsing.helpers" -> typing
	"pyparsing.common" -> datetime
	"pyparsing.common" -> uuid
	"matplotlib.rcsetup" -> ast
	"matplotlib.rcsetup" -> operator
	"matplotlib.rcsetup" -> os
	"matplotlib.rcsetup" -> re
	"matplotlib.rcsetup" -> cycler
	"matplotlib.pyplot" -> functools
	"matplotlib.pyplot" -> importlib
	"matplotlib.pyplot" -> inspect
	"matplotlib.pyplot" -> logging
	"matplotlib.pyplot" -> re
	"matplotlib.pyplot" -> sys
	"matplotlib.pyplot" -> threading
	"matplotlib.pyplot" -> time
	"matplotlib.pyplot" -> cycler
	"matplotlib.pyplot" -> matplotlib
	"matplotlib.pyplot" -> datetime
	"matplotlib.pyplot" -> pathlib
	"matplotlib.pyplot" -> os
	"matplotlib.pyplot" -> PIL
	"matplotlib.pyplot" -> arrow
	cycler -> copy
	cycler -> cycler
	"matplotlib.colorbar" -> logging
	"matplotlib.colorbar" -> collections
	"matplotlib.collections" -> itertools
	"matplotlib.collections" -> math
	"matplotlib.collections" -> warnings
	"matplotlib.cm" -> functools
	"matplotlib.lines" -> copy
	"matplotlib.lines" -> logging
	"matplotlib.markers" -> copy
	"matplotlib.text" -> functools
	"matplotlib.text" -> logging
	"matplotlib.text" -> math
	"matplotlib.text" -> weakref
	"matplotlib.patches" -> functools
	"matplotlib.patches" -> inspect
	"matplotlib.patches" -> math
	"matplotlib.patches" -> textwrap
	"matplotlib.backend_bases" -> functools
	"matplotlib.backend_bases" -> importlib
	"matplotlib.backend_bases" -> inspect
	"matplotlib.backend_bases" -> io
	"matplotlib.backend_bases" -> itertools
	"matplotlib.backend_bases" -> logging
	"matplotlib.backend_bases" -> os
	"matplotlib.backend_bases" -> sys
	"matplotlib.backend_bases" -> time
	"matplotlib.backend_bases" -> weakref
	"matplotlib.backend_tools" -> enum
	"matplotlib.backend_tools" -> functools
	"matplotlib.backend_tools" -> re
	"matplotlib.backend_tools" -> time
	"matplotlib.backend_tools" -> uuid
	"matplotlib._pylab_helpers" -> atexit
	"matplotlib.widgets" -> copy
	"matplotlib.widgets" -> itertools
	"matplotlib.widgets" -> cycler
	"matplotlib.widgets" -> collections
	"matplotlib._constrained_layout" -> logging
	"matplotlib._layoutgrid" -> itertools
	"matplotlib._layoutgrid" -> logging
	"matplotlib.texmanager" -> functools
	"matplotlib.texmanager" -> hashlib
	"matplotlib.texmanager" -> logging
	"matplotlib.texmanager" -> os
	"matplotlib.texmanager" -> subprocess
	"matplotlib.dviread" -> enum
	"matplotlib.dviread" -> logging
	"matplotlib.dviread" -> os
	"matplotlib.dviread" -> re
	"matplotlib.dviread" -> struct
	"matplotlib.dviread" -> subprocess
	"matplotlib.dviread" -> sys
	"matplotlib.dviread" -> itertools
	"matplotlib.figure" -> inspect
	"matplotlib.figure" -> itertools
	"matplotlib.figure" -> logging
	"matplotlib.figure" -> threading
	"matplotlib.projections" -> warnings
	"matplotlib.axes._base" -> functools
	"matplotlib.axes._base" -> inspect
	"matplotlib.axes._base" -> logging
	"matplotlib.axes._base" -> types
	"matplotlib.axes._base" -> cycler
	"matplotlib.axes._base" -> collections
	"matplotlib.offsetbox" -> functools
	"matplotlib.image" -> math
	"matplotlib.image" -> os
	"matplotlib.image" -> logging
	"matplotlib.image" -> warnings
	"matplotlib.image" -> PIL
	"matplotlib.axis" -> datetime
	"matplotlib.axis" -> functools
	"matplotlib.axis" -> logging
	"matplotlib.axis" -> warnings
	decimal -> sys
	decimal -> contextvars
	decimal -> re
	decimal -> _locale
	decimal -> copy
	_pydecimal -> sys
	_pydecimal -> contextvars
	_pydecimal -> re
	_pydecimal -> _locale
	_pydecimal -> copy
	"dateutil.tz.tz" -> datetime
	"dateutil.tz.tz" -> struct
	"dateutil.tz.tz" -> time
	"dateutil.tz.tz" -> sys
	"dateutil.tz.tz" -> os
	"dateutil.tz.tz" -> bisect
	"dateutil.tz.tz" -> weakref
	"dateutil.tz.tz" -> six
	"dateutil.tz.tz" -> _thread
	"dateutil.tz.tz" -> attrs
	six -> functools
	six -> itertools
	six -> operator
	six -> sys
	six -> types
	six -> attr
	six -> struct
	six -> io
	"dateutil.tz._common" -> datetime
	"dateutil.tz._factories" -> weakref
	"dateutil.tz._factories" -> _thread
	"dateutil.tz.win" -> datetime
	"dateutil.tz.win" -> struct
	"dateutil.tz.win" -> winreg
	"dateutil.tz.win" -> ctypes
	"dateutil.relativedelta" -> datetime
	"dateutil.relativedelta" -> calendar
	"dateutil.relativedelta" -> operator
	"dateutil.parser._parser" -> datetime
	"dateutil.parser._parser" -> re
	"dateutil.parser._parser" -> string
	"dateutil.parser._parser" -> time
	"dateutil.parser._parser" -> warnings
	"dateutil.parser._parser" -> six
	"dateutil.parser.isoparser" -> datetime
	"dateutil.parser.isoparser" -> time
	"dateutil.parser.isoparser" -> calendar
	"dateutil.parser.isoparser" -> re
	"dateutil.parser.isoparser" -> six
	"dateutil.rrule" -> calendar
	"dateutil.rrule" -> datetime
	"dateutil.rrule" -> heapq
	"dateutil.rrule" -> itertools
	"dateutil.rrule" -> re
	"dateutil.rrule" -> sys
	"dateutil.rrule" -> _thread
	fractions -> functools
	fractions -> math
	fractions -> numbers
	fractions -> operator
	fractions -> re
	fractions -> sys
	"dateutil.easter" -> datetime
	"dateutil.zoneinfo" -> warnings
	"dateutil.zoneinfo" -> json
	"matplotlib.gridspec" -> copy
	"matplotlib.gridspec" -> logging
	"matplotlib.spines" -> functools
	"matplotlib.axes._axes" -> functools
	"matplotlib.axes._axes" -> itertools
	"matplotlib.axes._axes" -> logging
	"matplotlib.axes._axes" -> math
	"matplotlib.axes._axes" -> matplotlib
	"matplotlib.axes._axes" -> arrow
	"matplotlib.category" -> dateutil
	"matplotlib.category" -> itertools
	"matplotlib.category" -> logging
	"matplotlib.contour" -> functools
	"matplotlib.contour" -> math
	"matplotlib.contour" -> collections
	"contourpy.chunk" -> math
	"matplotlib.dates" -> datetime
	"matplotlib.dates" -> functools
	"matplotlib.dates" -> logging
	"matplotlib.dates" -> re
	"matplotlib.dates" -> dateutil
	"matplotlib.legend" -> itertools
	"matplotlib.legend" -> logging
	"matplotlib.legend" -> numbers
	"matplotlib.legend" -> time
	"matplotlib.mlab" -> functools
	"matplotlib.quiver" -> math
	"matplotlib.stackplot" -> itertools
	"matplotlib.tri._triangulation" -> sys
	"matplotlib.tri._trirefine" -> matplotlib
	"matplotlib.axes._secondary_axes" -> numbers
	"matplotlib.projections.polar" -> math
	"matplotlib.projections.polar" -> types
	"mpl_toolkits.mplot3d.axes3d" -> functools
	"mpl_toolkits.mplot3d.axes3d" -> itertools
	"mpl_toolkits.mplot3d.axes3d" -> math
	"mpl_toolkits.mplot3d.axes3d" -> textwrap
	"mpl_toolkits.mplot3d.art3d" -> math
	"mpl_toolkits.mplot3d.axis3d" -> inspect
	"matplotlib.backends.backend_webagg" -> errno
	"matplotlib.backends.backend_webagg" -> json
	"matplotlib.backends.backend_webagg" -> mimetypes
	"matplotlib.backends.backend_webagg" -> random
	"matplotlib.backends.backend_webagg" -> sys
	"matplotlib.backends.backend_webagg" -> signal
	"matplotlib.backends.backend_webagg" -> threading
	"matplotlib.backends.backend_webagg" -> tornado
	tornado -> importlib
	tornado -> typing
	"tornado.web" -> base64
	"tornado.web" -> binascii
	"tornado.web" -> datetime
	"tornado.web" -> email
	"tornado.web" -> functools
	"tornado.web" -> gzip
	"tornado.web" -> hashlib
	"tornado.web" -> hmac
	"tornado.web" -> http
	"tornado.web" -> mimetypes
	"tornado.web" -> numbers
	"tornado.web" -> os
	"tornado.web" -> re
	"tornado.web" -> socket
	"tornado.web" -> sys
	"tornado.web" -> threading
	"tornado.web" -> time
	"tornado.web" -> warnings
	"tornado.web" -> tornado
	"tornado.web" -> traceback
	"tornado.web" -> types
	"tornado.web" -> urllib
	"tornado.web" -> locale
	"tornado.web" -> typing
	"tornado.web" -> _stat
	"http.cookies" -> re
	"http.cookies" -> string
	"http.cookies" -> types
	"http.cookies" -> copy
	"tornado.concurrent" -> asyncio
	"tornado.concurrent" -> functools
	"tornado.concurrent" -> sys
	"tornado.concurrent" -> types
	"tornado.concurrent" -> typing
	"tornado.log" -> logging
	"tornado.log" -> sys
	"tornado.log" -> colorama
	"tornado.log" -> curses
	"tornado.escape" -> html
	"tornado.escape" -> json
	"tornado.escape" -> re
	"tornado.escape" -> urllib
	"tornado.escape" -> typing
	"tornado.util" -> array
	"tornado.util" -> asyncio
	"tornado.util" -> atexit
	"tornado.util" -> os
	"tornado.util" -> re
	"tornado.util" -> typing
	"tornado.util" -> zlib
	"tornado.util" -> datetime
	"tornado.util" -> unittest
	"tornado.options" -> datetime
	"tornado.options" -> numbers
	"tornado.options" -> re
	"tornado.options" -> sys
	"tornado.options" -> os
	"tornado.options" -> textwrap
	"tornado.ioloop" -> asyncio
	"tornado.ioloop" -> concurrent
	"tornado.ioloop" -> datetime
	"tornado.ioloop" -> functools
	"tornado.ioloop" -> numbers
	"tornado.ioloop" -> os
	"tornado.ioloop" -> sys
	"tornado.ioloop" -> time
	"tornado.ioloop" -> math
	"tornado.ioloop" -> random
	"tornado.ioloop" -> warnings
	"tornado.ioloop" -> typing
	"tornado.platform.asyncio" -> asyncio
	"tornado.platform.asyncio" -> atexit
	"tornado.platform.asyncio" -> concurrent
	"tornado.platform.asyncio" -> errno
	"tornado.platform.asyncio" -> functools
	"tornado.platform.asyncio" -> select
	"tornado.platform.asyncio" -> socket
	"tornado.platform.asyncio" -> sys
	"tornado.platform.asyncio" -> threading
	"tornado.platform.asyncio" -> typing
	"tornado.platform.asyncio" -> warnings
	"tornado.gen" -> asyncio
	"tornado.gen" -> builtins
	"tornado.gen" -> collections
	"tornado.gen" -> concurrent
	"tornado.gen" -> datetime
	"tornado.gen" -> functools
	"tornado.gen" -> sys
	"tornado.gen" -> types
	"tornado.gen" -> contextvars
	"tornado.gen" -> typing
	"tornado.process" -> asyncio
	"tornado.process" -> os
	"tornado.process" -> multiprocessing
	"tornado.process" -> signal
	"tornado.process" -> subprocess
	"tornado.process" -> sys
	"tornado.process" -> time
	"tornado.process" -> typing
	"tornado.iostream" -> asyncio
	"tornado.iostream" -> collections
	"tornado.iostream" -> errno
	"tornado.iostream" -> io
	"tornado.iostream" -> numbers
	"tornado.iostream" -> os
	"tornado.iostream" -> socket
	"tornado.iostream" -> ssl
	"tornado.iostream" -> sys
	"tornado.iostream" -> re
	"tornado.iostream" -> typing
	"tornado.netutil" -> asyncio
	"tornado.netutil" -> concurrent
	"tornado.netutil" -> errno
	"tornado.netutil" -> os
	"tornado.netutil" -> sys
	"tornado.netutil" -> socket
	"tornado.netutil" -> ssl
	"tornado.netutil" -> stat
	"tornado.httpserver" -> socket
	"tornado.httpserver" -> ssl
	"tornado.httpserver" -> typing
	"tornado.http1connection" -> asyncio
	"tornado.http1connection" -> logging
	"tornado.http1connection" -> re
	"tornado.http1connection" -> types
	"tornado.httputil" -> calendar
	"tornado.httputil" -> collections
	"tornado.httputil" -> copy
	"tornado.httputil" -> datetime
	"tornado.httputil" -> email
	"tornado.httputil" -> http
	"tornado.httputil" -> re
	"tornado.httputil" -> time
	"tornado.httputil" -> unicodedata
	"tornado.httputil" -> typing
	"tornado.httputil" -> unittest
	"tornado.tcpserver" -> errno
	"tornado.tcpserver" -> os
	"tornado.tcpserver" -> socket
	"tornado.tcpserver" -> ssl
	"tornado.tcpserver" -> typing
	"tornado.locale" -> codecs
	"tornado.locale" -> csv
	"tornado.locale" -> datetime
	"tornado.locale" -> gettext
	"tornado.locale" -> glob
	"tornado.locale" -> os
	"tornado.locale" -> re
	"tornado.template" -> datetime
	"tornado.template" -> linecache
	"tornado.template" -> os
	"tornado.template" -> posixpath
	"tornado.template" -> re
	"tornado.template" -> threading
	"tornado.template" -> typing
	"tornado.routing" -> re
	"tornado.autoreload" -> os
	"tornado.autoreload" -> sys
	"tornado.autoreload" -> functools
	"tornado.autoreload" -> importlib
	"tornado.autoreload" -> pkgutil
	"tornado.autoreload" -> traceback
	"tornado.autoreload" -> types
	"tornado.autoreload" -> subprocess
	"tornado.autoreload" -> weakref
	"tornado.autoreload" -> signal
	optparse -> sys
	optparse -> os
	optparse -> textwrap
	optparse -> gettext
	"tornado.websocket" -> abc
	"tornado.websocket" -> asyncio
	"tornado.websocket" -> base64
	"tornado.websocket" -> hashlib
	"tornado.websocket" -> os
	"tornado.websocket" -> sys
	"tornado.websocket" -> struct
	"tornado.websocket" -> tornado
	"tornado.websocket" -> warnings
	"tornado.websocket" -> zlib
	"tornado.httpclient" -> datetime
	"tornado.httpclient" -> functools
	"tornado.httpclient" -> ssl
	"tornado.httpclient" -> time
	"tornado.httpclient" -> weakref
	"tornado.simple_httpclient" -> base64
	"tornado.simple_httpclient" -> collections
	"tornado.simple_httpclient" -> copy
	"tornado.simple_httpclient" -> functools
	"tornado.simple_httpclient" -> re
	"tornado.simple_httpclient" -> socket
	"tornado.simple_httpclient" -> ssl
	"tornado.simple_httpclient" -> sys
	"tornado.simple_httpclient" -> time
	"tornado.simple_httpclient" -> urllib
	"tornado.simple_httpclient" -> typing
	"tornado.tcpclient" -> functools
	"tornado.tcpclient" -> socket
	"tornado.tcpclient" -> numbers
	"tornado.tcpclient" -> datetime
	"tornado.tcpclient" -> ssl
	"tornado.tcpclient" -> typing
	"tornado.queues" -> collections
	"tornado.queues" -> datetime
	"tornado.queues" -> heapq
	"tornado.queues" -> typing
	"tornado.queues" -> _queue
	"tornado.locks" -> collections
	"tornado.locks" -> datetime
	"tornado.locks" -> types
	"tornado.locks" -> typing
	"matplotlib.backends.backend_webagg_core" -> asyncio
	"matplotlib.backends.backend_webagg_core" -> datetime
	"matplotlib.backends.backend_webagg_core" -> json
	"matplotlib.backends.backend_webagg_core" -> logging
	"matplotlib.backends.backend_webagg_core" -> os
	"matplotlib.mathtext" -> functools
	"matplotlib.mathtext" -> logging
	"matplotlib._mathtext" -> abc
	"matplotlib._mathtext" -> copy
	"matplotlib._mathtext" -> enum
	"matplotlib._mathtext" -> functools
	"matplotlib._mathtext" -> logging
	"matplotlib._mathtext" -> os
	"matplotlib._mathtext" -> re
	"matplotlib._mathtext" -> types
	"matplotlib._mathtext" -> unicodedata
	"matplotlib._mathtext" -> string
	"matplotlib._mathtext" -> cmd
	"matplotlib._mathtext" -> math
	IPython -> sys
	"IPython.core.interactiveshell" -> abc
	"IPython.core.interactiveshell" -> ast
	"IPython.core.interactiveshell" -> atexit
	"IPython.core.interactiveshell" -> bdb
	"IPython.core.interactiveshell" -> functools
	"IPython.core.interactiveshell" -> inspect
	"IPython.core.interactiveshell" -> os
	"IPython.core.interactiveshell" -> re
	"IPython.core.interactiveshell" -> runpy
	"IPython.core.interactiveshell" -> shutil
	"IPython.core.interactiveshell" -> subprocess
	"IPython.core.interactiveshell" -> sys
	"IPython.core.interactiveshell" -> tempfile
	"IPython.core.interactiveshell" -> traceback
	"IPython.core.interactiveshell" -> types
	"IPython.core.interactiveshell" -> warnings
	"IPython.core.interactiveshell" -> IPython
	"IPython.core.interactiveshell" -> io
	traitlets -> traitlets
	"traitlets.traitlets" -> contextlib
	"traitlets.traitlets" -> enum
	"traitlets.traitlets" -> inspect
	"traitlets.traitlets" -> os
	"traitlets.traitlets" -> re
	"traitlets.traitlets" -> sys
	"traitlets.traitlets" -> types
	"traitlets.utils" -> os
	"traitlets.utils" -> pathlib
	"traitlets.utils.descriptions" -> inspect
	"traitlets.utils.descriptions" -> re
	"traitlets.utils.descriptions" -> types
	"traitlets.utils.getargspec" -> inspect
	"traitlets.utils.warnings" -> inspect
	"traitlets.utils.warnings" -> os
	"traitlets.utils.warnings" -> warnings
	"traitlets._version" -> re
	"traitlets.utils.decorators" -> copy
	"traitlets.config.application" -> functools
	"traitlets.config.application" -> json
	"traitlets.config.application" -> logging
	"traitlets.config.application" -> os
	"traitlets.config.application" -> pprint
	"traitlets.config.application" -> re
	"traitlets.config.application" -> sys
	"logging.config" -> errno
	"logging.config" -> functools
	"logging.config" -> io
	"logging.config" -> logging
	"logging.config" -> os
	"logging.config" -> queue
	"logging.config" -> re
	"logging.config" -> struct
	"logging.config" -> threading
	"logging.config" -> traceback
	configparser -> functools
	configparser -> io
	configparser -> itertools
	configparser -> os
	configparser -> re
	configparser -> sys
	configparser -> warnings
	"multiprocessing.queues" -> sys
	"multiprocessing.queues" -> os
	"multiprocessing.queues" -> threading
	"multiprocessing.queues" -> collections
	"multiprocessing.queues" -> time
	"multiprocessing.queues" -> types
	"multiprocessing.queues" -> weakref
	"multiprocessing.queues" -> errno
	"multiprocessing.queues" -> _multiprocessing
	"multiprocessing.connection" -> errno
	"multiprocessing.connection" -> io
	"multiprocessing.connection" -> os
	"multiprocessing.connection" -> sys
	"multiprocessing.connection" -> socket
	"multiprocessing.connection" -> struct
	"multiprocessing.connection" -> time
	"multiprocessing.connection" -> tempfile
	"multiprocessing.connection" -> itertools
	"multiprocessing.connection" -> _multiprocessing
	"multiprocessing.connection" -> _winapi
	"multiprocessing.connection" -> selectors
	"xmlrpc.client" -> base64
	"xmlrpc.client" -> sys
	"xmlrpc.client" -> time
	"xmlrpc.client" -> datetime
	"xmlrpc.client" -> http
	"xmlrpc.client" -> urllib
	"xmlrpc.client" -> errno
	"xmlrpc.client" -> gzip
	"xmlrpc.client" -> _datetime
	"xmlrpc.client" -> xml
	"multiprocessing.resource_sharer" -> os
	"multiprocessing.resource_sharer" -> signal
	"multiprocessing.resource_sharer" -> socket
	"multiprocessing.resource_sharer" -> sys
	"multiprocessing.resource_sharer" -> threading
	"multiprocessing.synchronize" -> threading
	"multiprocessing.synchronize" -> sys
	"multiprocessing.synchronize" -> tempfile
	"multiprocessing.synchronize" -> _multiprocessing
	"multiprocessing.synchronize" -> time
	"multiprocessing.resource_tracker" -> os
	"multiprocessing.resource_tracker" -> signal
	"multiprocessing.resource_tracker" -> sys
	"multiprocessing.resource_tracker" -> threading
	"multiprocessing.resource_tracker" -> warnings
	"multiprocessing.resource_tracker" -> _multiprocessing
	"multiprocessing.spawn" -> os
	"multiprocessing.spawn" -> sys
	"multiprocessing.spawn" -> runpy
	"multiprocessing.spawn" -> types
	"multiprocessing.heap" -> bisect
	"multiprocessing.heap" -> mmap
	"multiprocessing.heap" -> os
	"multiprocessing.heap" -> sys
	"multiprocessing.heap" -> tempfile
	"multiprocessing.heap" -> threading
	"multiprocessing.heap" -> _winapi
	"traitlets.config.configurable" -> logging
	"traitlets.config.configurable" -> warnings
	"traitlets.utils.text" -> re
	"traitlets.utils.text" -> textwrap
	"traitlets.config.loader" -> argparse
	"traitlets.config.loader" -> copy
	"traitlets.config.loader" -> functools
	"traitlets.config.loader" -> json
	"traitlets.config.loader" -> os
	"traitlets.config.loader" -> re
	"traitlets.config.loader" -> sys
	"traitlets.config.loader" -> warnings
	"traitlets.log" -> logging
	"traitlets.config.argcomplete_config" -> argparse
	"traitlets.config.argcomplete_config" -> os
	"IPython.core.hooks" -> os
	"IPython.core.hooks" -> subprocess
	"IPython.core.hooks" -> sys
	"IPython.lib.clipboard" -> os
	"IPython.lib.clipboard" -> subprocess
	"IPython.utils.py3compat" -> platform
	"IPython.utils.encoding" -> sys
	"IPython.utils.encoding" -> locale
	"IPython.utils.encoding" -> warnings
	"IPython.core.magic" -> os
	"IPython.core.magic" -> re
	"IPython.core.magic" -> sys
	"IPython.core.magic" -> getopt
	"IPython.core.oinspect" -> ast
	"IPython.core.oinspect" -> html
	"IPython.core.oinspect" -> inspect
	"IPython.core.oinspect" -> linecache
	"IPython.core.oinspect" -> os
	"IPython.core.oinspect" -> types
	"IPython.core.oinspect" -> warnings
	"IPython.core.oinspect" -> traitlets
	"IPython.core.page" -> os
	"IPython.core.page" -> io
	"IPython.core.page" -> re
	"IPython.core.page" -> sys
	"IPython.core.page" -> tempfile
	"IPython.core.page" -> subprocess
	"IPython.core.page" -> msvcrt
	"IPython.display" -> os
	"IPython.display" -> sys
	"IPython.display" -> warnings
	"IPython.core.display_functions" -> os
	"IPython.core.display_functions" -> sys
	"IPython.core.display_functions" -> warnings
	"IPython.core.display" -> html
	"IPython.core.display" -> json
	"IPython.core.display" -> mimetypes
	"IPython.core.display" -> os
	"IPython.core.display" -> struct
	"IPython.core.display" -> warnings
	"IPython.testing" -> os
	"xml.dom" -> code
	"xml.dom.domreg" -> sys
	"xml.dom.minidom" -> io
	"xml.dom.minidom" -> xml
	"xml.dom.minicompat" -> xml
	"xml.dom.xmlbuilder" -> copy
	"xml.dom.xmlbuilder" -> xml
	"xml.dom.pulldom" -> xml
	"xml.sax" -> xml
	"xml.sax" -> os
	"xml.sax" -> sys
	"xml.sax.xmlreader" -> copy
	"xml.sax.saxutils" -> os
	"xml.sax.saxutils" -> urllib
	"xml.sax.saxutils" -> io
	"xml.sax.saxutils" -> codecs
	"xml.sax.expatreader" -> _weakref
	"xml.sax.expatreader" -> weakref
	"xml.sax.expatreader" -> xml
	"matplotlib_inline.backend_inline" -> matplotlib
	"IPython.core.pylabtools" -> warnings
	"IPython.utils.docs" -> os
	wave -> builtins
	wave -> struct
	wave -> sys
	"pygments.lexer" -> re
	"pygments.lexer" -> sys
	"pygments.lexer" -> time
	"pygments.lexer" -> mimetypes
	"pygments.filters" -> re
	"pygments.util" -> re
	"pygments.regexopt" -> re
	"pygments.formatter" -> codecs
	"pygments.lexers" -> re
	"pygments.lexers" -> sys
	"pygments.lexers" -> types
	"pygments.lexers" -> fnmatch
	"pygments.modeline" -> re
	"pygments.formatters" -> re
	"pygments.formatters" -> sys
	"pygments.formatters" -> types
	"pygments.formatters" -> fnmatch
	"IPython.utils.process" -> os
	"IPython.utils.process" -> shutil
	"IPython.utils.process" -> sys
	"IPython.utils._process_win32" -> os
	"IPython.utils._process_win32" -> sys
	"IPython.utils._process_win32" -> ctypes
	"IPython.utils._process_win32" -> time
	"IPython.utils._process_common" -> subprocess
	"IPython.utils._process_common" -> shlex
	"IPython.utils._process_common" -> sys
	"IPython.utils._process_common" -> os
	"IPython.utils._process_cli" -> os
	"IPython.utils._process_posix" -> errno
	"IPython.utils._process_posix" -> os
	"IPython.utils._process_posix" -> sys
	"IPython.utils.terminal" -> os
	"IPython.utils.terminal" -> sys
	"IPython.utils.terminal" -> warnings
	"IPython.utils.terminal" -> ctypes
	"IPython.lib.pretty" -> datetime
	"IPython.lib.pretty" -> os
	"IPython.lib.pretty" -> re
	"IPython.lib.pretty" -> sys
	"IPython.lib.pretty" -> types
	"IPython.lib.pretty" -> pprint
	"IPython.utils.PyColorize" -> keyword
	"IPython.utils.PyColorize" -> os
	"IPython.utils.PyColorize" -> sys
	"IPython.utils.PyColorize" -> token
	"IPython.utils.PyColorize" -> tokenize
	"IPython.utils.coloransi" -> os
	"IPython.utils.coloransi" -> warnings
	"IPython.utils.coloransi" -> copy
	"IPython.utils.ipstruct" -> copy
	"IPython.utils.colorable" -> pygments
	"IPython.utils.openpy" -> io
	"IPython.utils.openpy" -> re
	"IPython.utils.dir2" -> inspect
	"IPython.utils.dir2" -> types
	"IPython.utils.path" -> os
	"IPython.utils.path" -> sys
	"IPython.utils.path" -> errno
	"IPython.utils.path" -> shutil
	"IPython.utils.path" -> random
	"IPython.utils.path" -> glob
	"IPython.utils.path" -> warnings
	"IPython.utils.text" -> os
	"IPython.utils.text" -> re
	"IPython.utils.text" -> string
	"IPython.utils.text" -> sys
	"IPython.utils.text" -> textwrap
	"IPython.utils.text" -> warnings
	"IPython.utils.wildcard" -> re
	"IPython.utils.wildcard" -> types
	"IPython.core.inputtransformer2" -> ast
	"IPython.core.inputtransformer2" -> re
	"IPython.core.inputtransformer2" -> sys
	"IPython.core.inputtransformer2" -> tokenize
	"IPython.core.inputtransformer2" -> warnings
	"IPython.utils.tokenutil" -> tokenize
	"IPython.core.prefilter" -> re
	"IPython.core.prefilter" -> transformers
	"IPython.core.macro" -> re
	"IPython.core.splitinput" -> re
	"IPython.core.splitinput" -> sys
	"IPython.core.ultratb" -> functools
	"IPython.core.ultratb" -> inspect
	"IPython.core.ultratb" -> linecache
	"IPython.core.ultratb" -> pydoc
	"IPython.core.ultratb" -> sys
	"IPython.core.ultratb" -> time
	"IPython.core.ultratb" -> traceback
	"IPython.core.ultratb" -> types
	"IPython.core.ultratb" -> stack_data
	"stack_data.core" -> ast
	"stack_data.core" -> html
	"stack_data.core" -> os
	"stack_data.core" -> sys
	"stack_data.core" -> executing
	"stack_data.core" -> stack_data
	"executing.executing" -> __future__
	"executing.executing" -> ast
	"executing.executing" -> dis
	"executing.executing" -> inspect
	"executing.executing" -> io
	"executing.executing" -> linecache
	"executing.executing" -> re
	"executing.executing" -> sys
	"executing.executing" -> types
	"executing.executing" -> executing
	"executing.executing" -> asttokens
	"asttokens.line_numbers" -> bisect
	"asttokens.line_numbers" -> re
	"asttokens.asttokens" -> abc
	"asttokens.asttokens" -> ast
	"asttokens.asttokens" -> bisect
	"asttokens.asttokens" -> sys
	"asttokens.asttokens" -> token
	"asttokens.asttokens" -> six
	"asttokens.asttokens" -> asttokens
	"asttokens.util" -> ast
	"asttokens.util" -> collections
	"asttokens.util" -> io
	"asttokens.util" -> sys
	"asttokens.util" -> token
	"asttokens.util" -> tokenize
	"asttokens.mark_tokens" -> ast
	"asttokens.mark_tokens" -> numbers
	"asttokens.mark_tokens" -> sys
	"asttokens.mark_tokens" -> token
	"asttokens.mark_tokens" -> six
	"executing._position_node_finder" -> ast
	"executing._position_node_finder" -> sys
	"executing._position_node_finder" -> dis
	"pure_eval.core" -> ast
	"pure_eval.core" -> builtins
	"pure_eval.core" -> operator
	"pure_eval.my_getattr_static" -> types
	"pure_eval.utils" -> time
	"pure_eval.utils" -> datetime
	"pure_eval.utils" -> ast
	"pure_eval.utils" -> enum
	"pure_eval.utils" -> typing
	"stack_data.utils" -> ast
	"stack_data.utils" -> itertools
	"stack_data.utils" -> types
	"stack_data.formatting" -> inspect
	"stack_data.formatting" -> sys
	"stack_data.formatting" -> traceback
	"stack_data.serializing" -> inspect
	"stack_data.serializing" -> logging
	"stack_data.serializing" -> sys
	"stack_data.serializing" -> traceback
	"pygments.formatters.html" -> functools
	"pygments.formatters.html" -> os
	"pygments.formatters.html" -> sys
	"IPython.core.debugger" -> inspect
	"IPython.core.debugger" -> linecache
	"IPython.core.debugger" -> os
	"IPython.core.debugger" -> re
	"IPython.core.debugger" -> sys
	"IPython.core.excolors" -> os
	"IPython.terminal.interactiveshell" -> os
	"IPython.terminal.interactiveshell" -> sys
	"IPython.terminal.interactiveshell" -> inspect
	"IPython.core.async_helpers" -> ast
	"IPython.core.async_helpers" -> asyncio
	"IPython.core.async_helpers" -> inspect
	prompt_toolkit -> re
	"prompt_toolkit.application.application" -> asyncio
	"prompt_toolkit.application.application" -> contextvars
	"prompt_toolkit.application.application" -> os
	"prompt_toolkit.application.application" -> re
	"prompt_toolkit.application.application" -> signal
	"prompt_toolkit.application.application" -> sys
	"prompt_toolkit.application.application" -> threading
	"prompt_toolkit.application.application" -> time
	"prompt_toolkit.buffer" -> asyncio
	"prompt_toolkit.buffer" -> logging
	"prompt_toolkit.buffer" -> os
	"prompt_toolkit.buffer" -> re
	"prompt_toolkit.buffer" -> shlex
	"prompt_toolkit.buffer" -> shutil
	"prompt_toolkit.buffer" -> subprocess
	"prompt_toolkit.buffer" -> tempfile
	"prompt_toolkit.key_binding.key_processor" -> weakref
	"prompt_toolkit.utils" -> os
	"prompt_toolkit.utils" -> signal
	"prompt_toolkit.utils" -> sys
	"prompt_toolkit.utils" -> threading
	"prompt_toolkit.utils" -> wcwidth
	wcwidth -> wcwidth
	"wcwidth.wcwidth" -> os
	"wcwidth.wcwidth" -> sys
	"wcwidth.wcwidth" -> warnings
	"wcwidth.wcwidth" -> wcwidth
	"prompt_toolkit.output.windows10" -> sys
	"prompt_toolkit.output.color_depth" -> os
	"prompt_toolkit.output.defaults" -> sys
	"prompt_toolkit.styles.style" -> itertools
	"prompt_toolkit.styles.style" -> re
	"prompt_toolkit.output.vt100" -> io
	"prompt_toolkit.output.vt100" -> os
	"prompt_toolkit.output.vt100" -> sys
	"prompt_toolkit.output.flush_stdout" -> errno
	"prompt_toolkit.output.flush_stdout" -> os
	"prompt_toolkit.output.flush_stdout" -> sys
	"prompt_toolkit.patch_stdout" -> asyncio
	"prompt_toolkit.patch_stdout" -> queue
	"prompt_toolkit.patch_stdout" -> sys
	"prompt_toolkit.patch_stdout" -> threading
	"prompt_toolkit.patch_stdout" -> time
	"prompt_toolkit.eventloop.utils" -> asyncio
	"prompt_toolkit.eventloop.utils" -> contextvars
	"prompt_toolkit.eventloop.utils" -> sys
	"prompt_toolkit.eventloop.utils" -> time
	"prompt_toolkit.eventloop.inputhook" -> asyncio
	"prompt_toolkit.eventloop.inputhook" -> os
	"prompt_toolkit.eventloop.inputhook" -> select
	"prompt_toolkit.eventloop.inputhook" -> selectors
	"prompt_toolkit.eventloop.inputhook" -> sys
	"prompt_toolkit.eventloop.inputhook" -> threading
	"prompt_toolkit.output.conemu" -> sys
	"prompt_toolkit.output.win32" -> sys
	"prompt_toolkit.output.win32" -> os
	"prompt_toolkit.output.win32" -> _winapi
	"prompt_toolkit.layout.controls" -> time
	"prompt_toolkit.document" -> bisect
	"prompt_toolkit.document" -> re
	"prompt_toolkit.document" -> string
	"prompt_toolkit.document" -> weakref
	"prompt_toolkit.lexers.pygments" -> re
	"prompt_toolkit.layout.processors" -> re
	"prompt_toolkit.layout.menus" -> math
	"prompt_toolkit.completion.filesystem" -> os
	"prompt_toolkit.completion.fuzzy_completer" -> re
	"prompt_toolkit.input.defaults" -> io
	"prompt_toolkit.input.defaults" -> sys
	"prompt_toolkit.input.win32" -> os
	"prompt_toolkit.input.win32" -> sys
	"prompt_toolkit.input.win32" -> msvcrt
	"prompt_toolkit.eventloop.win32" -> sys
	"prompt_toolkit.input.vt100" -> sys
	"prompt_toolkit.input.vt100" -> contextlib
	"prompt_toolkit.input.vt100" -> io
	"prompt_toolkit.input.vt100" -> tty
	"prompt_toolkit.input.posix_utils" -> os
	"prompt_toolkit.input.posix_utils" -> select
	"prompt_toolkit.input.vt100_parser" -> re
	"prompt_toolkit.input.win32_pipe" -> sys
	"prompt_toolkit.input.posix_pipe" -> sys
	"prompt_toolkit.input.posix_pipe" -> os
	"prompt_toolkit.history" -> datetime
	"prompt_toolkit.history" -> os
	"prompt_toolkit.history" -> threading
	"prompt_toolkit.key_binding.bindings.completion" -> asyncio
	"prompt_toolkit.key_binding.bindings.completion" -> math
	"prompt_toolkit.shortcuts.dialogs" -> functools
	"prompt_toolkit.shortcuts.progress_bar.base" -> contextvars
	"prompt_toolkit.shortcuts.progress_bar.base" -> datetime
	"prompt_toolkit.shortcuts.progress_bar.base" -> functools
	"prompt_toolkit.shortcuts.progress_bar.base" -> os
	"prompt_toolkit.shortcuts.progress_bar.base" -> signal
	"prompt_toolkit.shortcuts.progress_bar.base" -> threading
	"prompt_toolkit.shortcuts.progress_bar.base" -> traceback
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> datetime
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> time
	"prompt_toolkit.key_binding.bindings.auto_suggest" -> re
	"asyncio.events" -> contextvars
	"asyncio.events" -> os
	"asyncio.events" -> signal
	"asyncio.events" -> socket
	"asyncio.events" -> subprocess
	"asyncio.events" -> sys
	"asyncio.events" -> threading
	"asyncio.events" -> time
	"asyncio.format_helpers" -> functools
	"asyncio.format_helpers" -> inspect
	"asyncio.format_helpers" -> reprlib
	"asyncio.format_helpers" -> sys
	"asyncio.format_helpers" -> traceback
	"asyncio.constants" -> enum
	"prompt_toolkit.key_binding.bindings.mouse" -> sys
	"prompt_toolkit.key_binding.bindings.vi" -> codecs
	"prompt_toolkit.key_binding.bindings.vi" -> string
	"IPython.terminal.debugger" -> asyncio
	"IPython.terminal.debugger" -> os
	"IPython.terminal.debugger" -> sys
	"IPython.terminal.debugger" -> pdb
	"IPython.core.completer" -> enum
	"IPython.core.completer" -> glob
	"IPython.core.completer" -> inspect
	"IPython.core.completer" -> itertools
	"IPython.core.completer" -> keyword
	"IPython.core.completer" -> os
	"IPython.core.completer" -> re
	"IPython.core.completer" -> string
	"IPython.core.completer" -> sys
	"IPython.core.completer" -> tokenize
	"IPython.core.completer" -> time
	"IPython.core.completer" -> unicodedata
	"IPython.core.completer" -> uuid
	"IPython.core.completer" -> warnings
	"IPython.core.completer" -> __main__
	"IPython.core.completer" -> jedi
	"IPython.core.guarded_eval" -> ast
	"IPython.core.guarded_eval" -> builtins
	"IPython.core.guarded_eval" -> collections
	"IPython.core.guarded_eval" -> operator
	"IPython.core.guarded_eval" -> sys
	"jedi.api" -> sys
	"jedi.api" -> parso
	"parso.utils" -> re
	"parso.utils" -> sys
	"parso.pgen2.grammar_parser" -> tokenize
	"parso.python.tokenize" -> sys
	"parso.python.tokenize" -> re
	"parso.python.tokenize" -> tokenize
	"parso.python.tokenize" -> code
	"parso.python.tokenize" -> token
	"parso.grammar" -> hashlib
	"parso.grammar" -> os
	"parso.grammar" -> tokenize
	"parso.grammar" -> _tokenize
	"parso._compatibility" -> platform
	"parso.python.diff" -> re
	"parso.python.diff" -> difflib
	"parso.python.diff" -> logging
	"parso.python.tree" -> re
	"parso.python.tree" -> keyword
	"parso.python.prefix" -> re
	"parso.cache" -> time
	"parso.cache" -> os
	"parso.cache" -> sys
	"parso.cache" -> hashlib
	"parso.cache" -> gc
	"parso.cache" -> shutil
	"parso.cache" -> platform
	"parso.cache" -> logging
	"parso.cache" -> warnings
	"parso.cache" -> pickle
	"parso.python.errors" -> codecs
	"parso.python.errors" -> sys
	"parso.python.errors" -> warnings
	"parso.python.errors" -> re
	"parso.python.errors" -> code
	"parso.python.pep8" -> re
	"parso.python.pep8" -> code
	"parso.file_io" -> os
	"jedi.parser_utils" -> re
	"jedi.parser_utils" -> textwrap
	"jedi.debug" -> os
	"jedi.debug" -> time
	"jedi.settings" -> os
	"jedi.settings" -> platform
	"jedi.cache" -> time
	"jedi.file_io" -> os
	"jedi.api.classes" -> re
	"jedi.inference" -> parso
	"jedi.inference.imports" -> os
	"jedi.inference.sys_path" -> os
	"jedi.inference.sys_path" -> re
	"jedi.inference.helpers" -> copy
	"jedi.inference.helpers" -> sys
	"jedi.inference.helpers" -> re
	"jedi.inference.helpers" -> os
	"jedi.inference.compiled.value" -> re
	"jedi.inference.utils" -> functools
	"jedi.inference.utils" -> re
	"jedi.inference.utils" -> os
	"jedi.inference.filters" -> weakref
	"jedi.inference.docstrings" -> re
	"jedi.inference.docstrings" -> warnings
	"jedi.inference.value.module" -> os
	"jedi.inference.arguments" -> re
	"jedi.inference.analysis" -> code
	"jedi.inference.gradual.annotation" -> re
	"jedi.inference.syntax_tree" -> copy
	"jedi.inference.syntax_tree" -> itertools
	"jedi.inference.compiled.access" -> inspect
	"jedi.inference.compiled.access" -> types
	"jedi.inference.compiled.access" -> traceback
	"jedi.inference.compiled.access" -> sys
	"jedi.inference.compiled.access" -> warnings
	"jedi.inference.compiled.access" -> re
	"jedi.inference.compiled.access" -> builtins
	"jedi.inference.compiled.access" -> typing
	"jedi.inference.compiled.getattr_static" -> types
	"jedi.inference.gradual.typing" -> itertools
	"jedi.inference.gradual.typeshed" -> os
	"jedi.inference.gradual.typeshed" -> re
	"jedi.inference.compiled.mixed" -> inspect
	"jedi.inference.references" -> os
	"jedi.inference.references" -> re
	"jedi.inference.compiled.subprocess" -> collections
	"jedi.inference.compiled.subprocess" -> os
	"jedi.inference.compiled.subprocess" -> sys
	"jedi.inference.compiled.subprocess" -> queue
	"jedi.inference.compiled.subprocess" -> subprocess
	"jedi.inference.compiled.subprocess" -> traceback
	"jedi.inference.compiled.subprocess" -> weakref
	"jedi._compatibility" -> errno
	"jedi._compatibility" -> sys
	"jedi._compatibility" -> pickle
	"jedi.inference.compiled.subprocess.functions" -> sys
	"jedi.inference.compiled.subprocess.functions" -> os
	"jedi.inference.compiled.subprocess.functions" -> inspect
	"jedi.inference.compiled.subprocess.functions" -> importlib
	"jedi.api.keywords" -> pydoc
	"jedi.api.helpers" -> re
	"jedi.api.completion" -> re
	"jedi.api.strings" -> re
	"jedi.api.file_name" -> os
	"jedi.api.environment" -> os
	"jedi.api.environment" -> sys
	"jedi.api.environment" -> hashlib
	"jedi.api.environment" -> filecmp
	"jedi.api.environment" -> parso
	filecmp -> os
	filecmp -> stat
	"jedi.api.project" -> json
	"jedi.api.refactoring" -> difflib
	"jedi.plugins.stdlib" -> parso
	"jedi.plugins.stdlib" -> os
	"jedi.plugins.pytest" -> sys
	pkg_resources -> sys
	pkg_resources -> _imp
	pkg_resources -> collections
	pkg_resources -> email
	pkg_resources -> errno
	pkg_resources -> functools
	pkg_resources -> importlib
	pkg_resources -> inspect
	pkg_resources -> io
	pkg_resources -> ntpath
	pkg_resources -> operator
	pkg_resources -> os
	pkg_resources -> pkgutil
	pkg_resources -> platform
	pkg_resources -> plistlib
	pkg_resources -> posixpath
	pkg_resources -> re
	pkg_resources -> stat
	pkg_resources -> tempfile
	pkg_resources -> textwrap
	pkg_resources -> time
	pkg_resources -> types
	pkg_resources -> warnings
	pkg_resources -> zipfile
	pkg_resources -> zipimport
	pkg_resources -> packaging
	"cnstd.detector" -> os
	"cnstd.detector" -> logging
	"cnstd.detector" -> glob
	"cnstd.consts" -> os
	"cnstd.consts" -> logging
	torchvision -> os
	torchvision -> warnings
	torchvision -> torch
	torchvision -> io
	modulefinder -> dis
	modulefinder -> importlib
	modulefinder -> marshal
	modulefinder -> os
	modulefinder -> io
	modulefinder -> sys
	modulefinder -> test
	"torchvision._meta_registrations" -> functools
	"torchvision._meta_registrations" -> torch
	"torchvision._meta_registrations" -> torchvision
	"torch._custom_ops" -> inspect
	"torch._custom_op.impl" -> dataclasses
	"torch._custom_op.impl" -> functools
	"torch._custom_op.impl" -> inspect
	"torch._custom_op.impl" -> sys
	"torch._custom_op.impl" -> typing
	"torch._custom_op.impl" -> weakref
	"torch._custom_op.impl" -> torch
	"torchgen.model" -> dataclasses
	"torchgen.model" -> itertools
	"torchgen.model" -> re
	"torchgen.utils" -> contextlib
	"torchgen.utils" -> functools
	"torchgen.utils" -> hashlib
	"torchgen.utils" -> os
	"torchgen.utils" -> re
	"torchgen.utils" -> sys
	"torchgen.utils" -> textwrap
	"torchgen.utils" -> copy
	"torchgen.code_template" -> re
	"torchgen.local" -> threading
	"torchgen.api.dispatcher" -> itertools
	"torch._library" -> torch
	"torch._library.abstract_impl" -> contextlib
	"torch._library.abstract_impl" -> functools
	"torch._library.abstract_impl" -> warnings
	"torch._library.abstract_impl" -> torch
	"torch._library.utils" -> dataclasses
	"torch._library.utils" -> inspect
	"torch._library.utils" -> sys
	"torch._library.utils" -> torch
	"torch._custom_op.autograd" -> torch
	"torch._custom_op.autograd" -> functools
	"torchvision.extension" -> os
	"torchvision.extension" -> sys
	"torchvision.extension" -> torch
	"torchvision._internally_replaced_utils" -> importlib
	"torchvision._internally_replaced_utils" -> os
	"torch.hub" -> contextlib
	"torch.hub" -> errno
	"torch.hub" -> hashlib
	"torch.hub" -> json
	"torch.hub" -> os
	"torch.hub" -> re
	"torch.hub" -> shutil
	"torch.hub" -> sys
	"torch.hub" -> tempfile
	"torch.hub" -> torch
	"torch.hub" -> uuid
	"torch.hub" -> warnings
	"torch.hub" -> zipfile
	"torch.hub" -> tqdm
	"torch.serialization" -> difflib
	"torch.serialization" -> os
	"torch.serialization" -> io
	"torch.serialization" -> shutil
	"torch.serialization" -> struct
	"torch.serialization" -> sys
	"torch.serialization" -> torch
	"torch.serialization" -> tarfile
	"torch.serialization" -> tempfile
	"torch.serialization" -> warnings
	"torch.serialization" -> copyreg
	"torch.serialization" -> pickle
	"torch.serialization" -> pathlib
	"torch._sources" -> ast
	"torch._sources" -> functools
	"torch._sources" -> inspect
	"torch.storage" -> io
	"torch.storage" -> torch
	"torch.storage" -> copy
	"torch.storage" -> collections
	"torch.storage" -> warnings
	"torch.storage" -> threading
	"torch.storage" -> functools
	"torch.multiprocessing" -> multiprocessing
	"torch.multiprocessing" -> sys
	"torch.multiprocessing" -> torch
	"torch.multiprocessing.reductions" -> multiprocessing
	"torch.multiprocessing.reductions" -> os
	"torch.multiprocessing.reductions" -> threading
	"torch.multiprocessing.reductions" -> torch
	"multiprocessing.reduction" -> copyreg
	"multiprocessing.reduction" -> functools
	"multiprocessing.reduction" -> io
	"multiprocessing.reduction" -> os
	"multiprocessing.reduction" -> pickle
	"multiprocessing.reduction" -> socket
	"multiprocessing.reduction" -> sys
	"multiprocessing.reduction" -> _winapi
	"multiprocessing.reduction" -> array
	"torch.utils.hooks" -> torch
	"torch.utils.hooks" -> weakref
	"torch.utils.hooks" -> warnings
	"torch.nested" -> torch
	"torch.nested._internal.nested_tensor" -> torch
	"torch.fx.graph_module" -> copy
	"torch.fx.graph_module" -> itertools
	"torch.fx.graph_module" -> linecache
	"torch.fx.graph_module" -> os
	"torch.fx.graph_module" -> sys
	"torch.fx.graph_module" -> traceback
	"torch.fx.graph_module" -> warnings
	"torch.fx.graph_module" -> torch
	"torch.nn.modules.module" -> itertools
	"torch.nn.modules.module" -> warnings
	"torch.nn.modules.module" -> functools
	"torch.nn.modules.module" -> weakref
	"torch.nn.modules.module" -> torch
	"torch.nn.parameter" -> torch
	"torch.nn.modules.linear" -> math
	"torch.nn.modules.linear" -> torch
	"torch.nn.functional" -> math
	"torch.nn.functional" -> warnings
	"torch.nn.functional" -> importlib
	"torch.nn.functional" -> torch
	"torch._VF" -> sys
	"torch._VF" -> types
	"torch._VF" -> torch
	"torch._torch_docs" -> re
	"torch._torch_docs" -> torch
	"torch._jit_internal" -> ast
	"torch._jit_internal" -> builtins
	"torch._jit_internal" -> collections
	"torch._jit_internal" -> contextlib
	"torch._jit_internal" -> enum
	"torch._jit_internal" -> inspect
	"torch._jit_internal" -> io
	"torch._jit_internal" -> pickle
	"torch._jit_internal" -> sys
	"torch._jit_internal" -> threading
	"torch._jit_internal" -> types
	"torch._jit_internal" -> typing
	"torch._jit_internal" -> warnings
	"torch._jit_internal" -> weakref
	"torch._jit_internal" -> torch
	"torch._jit_internal" -> _thread
	"torch.distributed" -> os
	"torch.distributed" -> sys
	"torch.distributed" -> pdb
	"torch.distributed" -> io
	"torch.distributed" -> torch
	"torch.distributed.distributed_c10d" -> itertools
	"torch.distributed.distributed_c10d" -> collections
	"torch.distributed.distributed_c10d" -> contextlib
	"torch.distributed.distributed_c10d" -> hashlib
	"torch.distributed.distributed_c10d" -> io
	"torch.distributed.distributed_c10d" -> logging
	"torch.distributed.distributed_c10d" -> os
	"torch.distributed.distributed_c10d" -> pickle
	"torch.distributed.distributed_c10d" -> sys
	"torch.distributed.distributed_c10d" -> time
	"torch.distributed.distributed_c10d" -> warnings
	"torch.distributed.distributed_c10d" -> torch
	"torch.distributed.c10d_logger" -> functools
	"torch.distributed.c10d_logger" -> logging
	"torch.distributed.c10d_logger" -> time
	"torch.distributed.c10d_logger" -> torch
	"torch.distributed.logging_handlers" -> logging
	"torch.distributed.rendezvous" -> numbers
	"torch.distributed.rendezvous" -> os
	"torch.distributed.rendezvous" -> sys
	"torch.distributed.remote_device" -> torch
	"torch.distributed.rpc" -> logging
	"torch.distributed.rpc" -> os
	"torch.distributed.rpc" -> threading
	"torch.distributed.rpc" -> warnings
	"torch.distributed.rpc" -> torch
	"torch.distributed.rpc" -> numbers
	"torch.distributed.rpc.api" -> collections
	"torch.distributed.rpc.api" -> contextlib
	"torch.distributed.rpc.api" -> functools
	"torch.distributed.rpc.api" -> inspect
	"torch.distributed.rpc.api" -> logging
	"torch.distributed.rpc.api" -> threading
	"torch.distributed.rpc.api" -> torch
	"torch.futures" -> torch
	"torch.distributed.rpc.internal" -> collections
	"torch.distributed.rpc.internal" -> copyreg
	"torch.distributed.rpc.internal" -> io
	"torch.distributed.rpc.internal" -> pickle
	"torch.distributed.rpc.internal" -> sys
	"torch.distributed.rpc.internal" -> threading
	"torch.distributed.rpc.internal" -> traceback
	"torch.distributed.rpc.internal" -> torch
	"torch.distributed.rpc._utils" -> logging
	"torch.distributed.rpc.backend_registry" -> collections
	"torch.distributed.rpc.backend_registry" -> enum
	"torch.distributed.rpc.backend_registry" -> torch
	"torch.distributed.rpc.functions" -> functools
	"torch.distributed.autograd" -> sys
	"torch.distributed.autograd" -> torch
	"torch.distributed.rpc.options" -> torch
	"torch.distributed.rpc.server_process_global_profiler" -> itertools
	"torch.distributed.rpc.server_process_global_profiler" -> torch
	"torch.distributed.rpc.server_process_global_profiler" -> profile
	"torch.autograd.profiler_legacy" -> itertools
	"torch.autograd.profiler_legacy" -> torch
	"torch.autograd.profiler_legacy" -> profile
	"torch.cuda" -> contextlib
	"torch.cuda" -> importlib
	"torch.cuda" -> os
	"torch.cuda" -> sys
	"torch.cuda" -> threading
	"torch.cuda" -> traceback
	"torch.cuda" -> warnings
	"torch.cuda" -> torch
	"torch.cuda._utils" -> torch
	"torch.cuda.graphs" -> gc
	"torch.cuda.graphs" -> torch
	"torch.cuda.streams" -> ctypes
	"torch.cuda.streams" -> torch
	"torch.cuda.memory" -> collections
	"torch.cuda.memory" -> contextlib
	"torch.cuda.memory" -> ctypes
	"torch.cuda.memory" -> pickle
	"torch.cuda.memory" -> sys
	"torch.cuda.memory" -> warnings
	"torch.cuda.memory" -> torch
	"torch.cuda._memory_viz" -> pickle
	"torch.cuda._memory_viz" -> sys
	"torch.cuda._memory_viz" -> os
	"torch.cuda._memory_viz" -> io
	"torch.cuda._memory_viz" -> subprocess
	"torch.cuda._memory_viz" -> json
	"torch.cuda._memory_viz" -> base64
	"torch.cuda._memory_viz" -> warnings
	"torch.cuda._memory_viz" -> argparse
	"torch.cuda._memory_viz" -> cmd
	"torch.profiler" -> os
	"torch.profiler" -> profile
	"torch.autograd.profiler" -> torch
	"torch.autograd.profiler" -> profile
	"torch.autograd.profiler" -> functools
	"torch.autograd.profiler_util" -> bisect
	"torch.autograd.profiler_util" -> itertools
	"torch.autograd.profiler_util" -> math
	"torch.autograd.profiler_util" -> torch
	sqlite3 -> datetime
	sqlite3 -> time
	sqlite3 -> collections
	"sqlite3.dbapi2" -> datetime
	"sqlite3.dbapi2" -> time
	"sqlite3.dbapi2" -> collections
	"torch.optim.adadelta" -> torch
	"torch.optim.optimizer" -> math
	"torch.optim.optimizer" -> functools
	"torch.optim.optimizer" -> warnings
	"torch.optim.optimizer" -> torch
	"torch.utils._foreach_utils" -> torch
	"torch._dynamo" -> torch
	"torch._dynamo.allowed_functions" -> builtins
	"torch._dynamo.allowed_functions" -> collections
	"torch._dynamo.allowed_functions" -> copy
	"torch._dynamo.allowed_functions" -> dataclasses
	"torch._dynamo.allowed_functions" -> functools
	"torch._dynamo.allowed_functions" -> inspect
	"torch._dynamo.allowed_functions" -> itertools
	"torch._dynamo.allowed_functions" -> math
	"torch._dynamo.allowed_functions" -> operator
	"torch._dynamo.allowed_functions" -> sys
	"torch._dynamo.allowed_functions" -> types
	"torch._dynamo.allowed_functions" -> warnings
	"torch._dynamo.allowed_functions" -> torch
	"torch._functorch.deprecated" -> textwrap
	"torch._functorch.deprecated" -> warnings
	"torch._functorch.apis" -> functools
	"torch._functorch.vmap" -> torch
	"torch._functorch.vmap" -> functools
	"torch._functorch.vmap" -> threading
	"torch._functorch.vmap" -> os
	"torch._functorch.vmap" -> itertools
	"torch._functorch.utils" -> contextlib
	"torch._functorch.utils" -> torch
	"torch._functorch.eager_transforms" -> torch
	"torch._functorch.eager_transforms" -> contextlib
	"torch.fx.experimental.const_fold" -> re
	"torch.fx.experimental.const_fold" -> torch
	"torch.fx.node" -> torch
	"torch.fx.node" -> builtins
	"torch.fx.node" -> types
	"torch.fx.node" -> inspect
	"torch.fx.node" -> warnings
	"torch.fx._compatibility" -> textwrap
	"torch.fx.operator_schemas" -> torch
	"torch.fx.operator_schemas" -> inspect
	"torch.fx.operator_schemas" -> numbers
	"torch.fx.operator_schemas" -> types
	"torch.fx.operator_schemas" -> typing
	"torch.fx.operator_schemas" -> enum
	"torch.fx.operator_schemas" -> warnings
	"torch.fx.graph" -> collections
	"torch.fx.graph" -> contextlib
	"torch.fx.graph" -> copy
	"torch.fx.graph" -> enum
	"torch.fx.graph" -> torch
	"torch.fx.graph" -> keyword
	"torch.fx.graph" -> re
	"torch.fx.graph" -> builtins
	"torch.fx.graph" -> math
	"torch.fx.graph" -> warnings
	"torch.fx.graph" -> inspect
	"torch.fx._symbolic_trace" -> builtins
	"torch.fx._symbolic_trace" -> copy
	"torch.fx._symbolic_trace" -> functools
	"torch.fx._symbolic_trace" -> inspect
	"torch.fx._symbolic_trace" -> math
	"torch.fx._symbolic_trace" -> os
	"torch.fx._symbolic_trace" -> warnings
	"torch.fx._symbolic_trace" -> collections
	"torch.fx._symbolic_trace" -> torch
	"torch.fx.proxy" -> enum
	"torch.fx.proxy" -> dis
	"torch.fx.proxy" -> copy
	"torch.fx.proxy" -> sys
	"torch.fx.proxy" -> torch
	"torch.fx.proxy" -> inspect
	"torch.fx.proxy" -> operator
	"torch.fx.proxy" -> traceback
	"torch.fx.proxy" -> collections
	"torch.fx.traceback" -> traceback
	"torch.fx.experimental.proxy_tensor" -> contextlib
	"torch.fx.experimental.proxy_tensor" -> functools
	"torch.fx.experimental.proxy_tensor" -> torch
	"torch.fx.experimental.proxy_tensor" -> inspect
	"torch.fx.experimental.proxy_tensor" -> weakref
	"torch.fx.experimental.proxy_tensor" -> operator
	"torch.fx.experimental.proxy_tensor" -> logging
	"torch._dispatch.python" -> itertools
	"torch._dispatch.python" -> unittest
	"torch._dispatch.python" -> torch
	"torch.utils._python_dispatch" -> contextlib
	"torch.utils._python_dispatch" -> warnings
	"torch.utils._python_dispatch" -> torch
	"torch.utils._python_dispatch" -> torchgen
	"torch._subclasses.functional_tensor" -> contextlib
	"torch._subclasses.functional_tensor" -> torch
	"torch._higher_order_ops.cond" -> torch
	"torch._higher_order_ops.utils" -> torch
	"torch.fx.passes.graph_drawer" -> hashlib
	"torch.fx.passes.graph_drawer" -> torch
	"torch.fx.passes.shape_prop" -> torch
	"torch.fx.passes.shape_prop" -> traceback
	"torch._dynamo.utils" -> atexit
	"torch._dynamo.utils" -> collections
	"torch._dynamo.utils" -> contextlib
	"torch._dynamo.utils" -> copy
	"torch._dynamo.utils" -> cProfile
	"torch._dynamo.utils" -> dataclasses
	"torch._dynamo.utils" -> datetime
	"torch._dynamo.utils" -> dis
	"torch._dynamo.utils" -> enum
	"torch._dynamo.utils" -> functools
	"torch._dynamo.utils" -> gc
	"torch._dynamo.utils" -> inspect
	"torch._dynamo.utils" -> itertools
	"torch._dynamo.utils" -> linecache
	"torch._dynamo.utils" -> logging
	"torch._dynamo.utils" -> math
	"torch._dynamo.utils" -> operator
	"torch._dynamo.utils" -> os
	"torch._dynamo.utils" -> pstats
	"torch._dynamo.utils" -> subprocess
	"torch._dynamo.utils" -> sys
	"torch._dynamo.utils" -> textwrap
	"torch._dynamo.utils" -> threading
	"torch._dynamo.utils" -> time
	"torch._dynamo.utils" -> types
	"torch._dynamo.utils" -> typing
	"torch._dynamo.utils" -> weakref
	"torch._dynamo.utils" -> torch
	"torch._dynamo.utils" -> importlib
	cProfile -> _lsprof
	cProfile -> importlib
	cProfile -> io
	profile -> importlib
	profile -> io
	profile -> sys
	profile -> time
	profile -> marshal
	pstats -> sys
	pstats -> os
	pstats -> time
	pstats -> marshal
	pstats -> re
	pstats -> cmd
	pstats -> readline
	pstats -> profile
	"torch._numpy" -> random
	"torch._numpy" -> array
	"torch._numpy.fft" -> functools
	"torch._numpy.fft" -> torch
	"torch._numpy._dtypes_impl" -> torch
	"torch._numpy._casting_dicts" -> torch
	"torch._dynamo.config" -> inspect
	"torch._dynamo.config" -> os
	"torch._dynamo.config" -> re
	"torch._dynamo.config" -> sys
	"torch._dynamo.config" -> tempfile
	"torch._dynamo.config" -> torch
	"torch.utils._config_module" -> contextlib
	"torch.utils._config_module" -> copy
	"torch.utils._config_module" -> hashlib
	"torch.utils._config_module" -> inspect
	"torch.utils._config_module" -> io
	"torch.utils._config_module" -> pickle
	"torch.utils._config_module" -> tokenize
	"torch.utils._config_module" -> unittest
	"torch.utils._config_module" -> warnings
	"torch._numpy._util" -> operator
	"torch._numpy._util" -> torch
	"torch._numpy._ndarray" -> builtins
	"torch._numpy._ndarray" -> math
	"torch._numpy._ndarray" -> operator
	"torch._numpy._ndarray" -> torch
	"torch._numpy._ndarray" -> array
	"torch._numpy._ndarray" -> copy
	"torch._numpy._dtypes" -> builtins
	"torch._numpy._dtypes" -> torch
	"torch._numpy._funcs" -> inspect
	"torch._numpy._funcs" -> itertools
	"torch._numpy._funcs_impl" -> builtins
	"torch._numpy._funcs_impl" -> itertools
	"torch._numpy._funcs_impl" -> operator
	"torch._numpy._funcs_impl" -> torch
	"torch._numpy._funcs_impl" -> copy
	"torch._numpy._normalizations" -> functools
	"torch._numpy._normalizations" -> inspect
	"torch._numpy._normalizations" -> operator
	"torch._numpy._normalizations" -> typing
	"torch._numpy._normalizations" -> torch
	"torch.backends.opt_einsum" -> sys
	"torch.backends.opt_einsum" -> warnings
	"torch._numpy._reductions_impl" -> functools
	"torch._numpy._reductions_impl" -> torch
	"torch._numpy._ufuncs" -> torch
	"torch._numpy._binary_ufuncs_impl" -> torch
	"torch._numpy._unary_ufuncs_impl" -> torch
	"torch._numpy.linalg" -> functools
	"torch._numpy.linalg" -> math
	"torch._numpy.linalg" -> torch
	"torch._numpy.random" -> functools
	"torch._numpy.random" -> torch
	"torch._numpy.random" -> random
	"torch._numpy._getlimits" -> torch
	"torch._functorch.config" -> os
	"torch._functorch.config" -> sys
	"torch.fx.experimental.symbolic_shapes" -> builtins
	"torch.fx.experimental.symbolic_shapes" -> collections
	"torch.fx.experimental.symbolic_shapes" -> functools
	"torch.fx.experimental.symbolic_shapes" -> inspect
	"torch.fx.experimental.symbolic_shapes" -> itertools
	"torch.fx.experimental.symbolic_shapes" -> logging
	"torch.fx.experimental.symbolic_shapes" -> math
	"torch.fx.experimental.symbolic_shapes" -> operator
	"torch.fx.experimental.symbolic_shapes" -> re
	"torch.fx.experimental.symbolic_shapes" -> sys
	"torch.fx.experimental.symbolic_shapes" -> threading
	"torch.fx.experimental.symbolic_shapes" -> traceback
	"torch.fx.experimental.symbolic_shapes" -> torch
	"torch.fx.experimental.symbolic_shapes" -> sympy
	"torch.fx.experimental._config" -> os
	"torch.fx.experimental._config" -> sys
	"torch.fx.experimental.recording" -> functools
	"torch.fx.experimental.recording" -> itertools
	"torch.fx.experimental.recording" -> torch
	"torch.fx.experimental.sym_node" -> builtins
	"torch.fx.experimental.sym_node" -> itertools
	"torch.fx.experimental.sym_node" -> logging
	"torch.fx.experimental.sym_node" -> math
	"torch.fx.experimental.sym_node" -> operator
	"torch.fx.experimental.sym_node" -> sys
	"torch.utils._sympy.functions" -> sympy
	"sympy.core.sympify" -> string
	"sympy.core.random" -> _random
	"sympy.core.random" -> random
	"sympy.utilities.misc" -> operator
	"sympy.utilities.misc" -> sys
	"sympy.utilities.misc" -> os
	"sympy.utilities.misc" -> struct
	"sympy.utilities.exceptions" -> warnings
	"sympy.utilities.exceptions" -> contextlib
	"sympy.utilities.decorator" -> sys
	"sympy.utilities.decorator" -> types
	"sympy.utilities.decorator" -> inspect
	"sympy.matrices.common" -> re
	"sympy.assumptions.assume" -> inspect
	"sympy.core.symbol" -> string
	"sympy.core.symbol" -> random
	"sympy.core.assumptions" -> copy
	"sympy.core.function" -> mpmath
	"sympy.core.function" -> inspect
	"sympy.multipledispatch.core" -> inspect
	"sympy.multipledispatch.dispatcher" -> inspect
	"sympy.core.evalf" -> math
	"sympy.core.evalf" -> re
	"sympy.external.importtools" -> sys
	"sympy.external.importtools" -> re
	"sympy.external.gmpy" -> os
	"sympy.external.pythonmpq" -> operator
	"sympy.external.pythonmpq" -> sys
	"sympy.utilities.lambdify" -> builtins
	"sympy.utilities.lambdify" -> inspect
	"sympy.utilities.lambdify" -> keyword
	"sympy.utilities.lambdify" -> textwrap
	"sympy.utilities.lambdify" -> linecache
	"sympy.core.expr" -> re
	"sympy.core.numbers" -> numbers
	"sympy.core.numbers" -> decimal
	"sympy.core.numbers" -> fractions
	"sympy.core.numbers" -> math
	"sympy.core.numbers" -> sys
	"sympy.core.numbers" -> mpmath
	"mpmath.ctx_mp" -> functools
	"mpmath.ctx_mp" -> re
	"mpmath.ctx_mp" -> doctest
	"mpmath.function_docs" -> re
	"mpmath.rational" -> operator
	"mpmath.rational" -> sys
	"mpmath.rational" -> numbers
	"mpmath.ctx_mp_python" -> numbers
	"sympy.core.mul" -> operator
	"sympy.functions" -> re
	"sympy.ntheory.generate" -> random
	"sympy.ntheory.generate" -> bisect
	"sympy.ntheory.factor_" -> random
	"sympy.ntheory.factor_" -> math
	"sympy.ntheory.ecm" -> random
	"sympy.polys.polytools" -> sympy
	"sympy.polys.polytools" -> mpmath
	"sympy.assumptions.handlers.sets" -> re
	"sympy.functions.elementary.complexes" -> re
	"sympy.matrices.matrices" -> re
	"sympy.functions.elementary.exponential" -> re
	"sympy.concrete.summations" -> itertools
	"sympy.printing" -> pprint
	"sympy.printing.pretty" -> pprint
	"sympy.printing.pretty.pretty" -> itertools
	"sympy.printing.pretty.pretty" -> pprint
	"sympy.printing.conventions" -> re
	"sympy.printing.printer" -> sys
	"sympy.printing.printer" -> inspect
	"sympy.combinatorics.permutations" -> random
	"sympy.combinatorics.permutations" -> copy
	"sympy.combinatorics.perm_groups" -> random
	"sympy.combinatorics.homomorphisms" -> itertools
	"sympy.printing.latex" -> itertools
	"sympy.printing.latex" -> re
	"sympy.tensor.array.dense_ndim_array" -> functools
	"sympy.tensor.array.ndim_array" -> itertools
	"sympy.tensor.array.arrayop" -> itertools
	"sympy.tensor.array.sparse_ndim_array" -> functools
	"sympy.tensor.array.expressions.array_expressions" -> collections
	"sympy.tensor.array.expressions.array_expressions" -> operator
	"sympy.tensor.array.expressions.array_expressions" -> itertools
	"sympy.tensor.array.expressions.array_expressions" -> typing
	"sympy.functions.elementary.trigonometric" -> re
	"sympy.polys.densebasic" -> random
	"sympy.polys.polyutils" -> re
	"sympy.polys.polyoptions" -> sympy
	"sympy.polys.polyoptions" -> re
	"sympy.polys.agca.modules" -> copy
	"sympy.polys.ring_series" -> math
	"sympy.matrices.dense" -> random
	"sympy.matrices.decompositions" -> copy
	"sympy.simplify.simplify" -> re
	"sympy.simplify.simplify" -> mpmath
	"sympy.functions.elementary.hyperbolic" -> re
	"sympy.functions.elementary.integers" -> re
	"sympy.functions.special.bessel" -> re
	"sympy.functions.special.gamma_functions" -> re
	"sympy.functions.special.zeta_functions" -> re
	"sympy.functions.special.error_functions" -> re
	"sympy.functions.special.hyper" -> re
	"sympy.series.limits" -> re
	"sympy.series.gruntz" -> timeit
	"sympy.series.gruntz" -> copy
	"sympy.utilities.timeutils" -> timeit
	"sympy.utilities.timeutils" -> math
	"sympy.calculus.util" -> re
	"sympy.sets.sets" -> inspect
	"sympy.solvers.solvers" -> re
	"sympy.solvers.solvers" -> warnings
	"sympy.polys.matrices.domainmatrix" -> copy
	"sympy.polys.matrices.ddm" -> copy
	"sympy.polys.matrices.sdm" -> copy
	"sympy.solvers.polysys" -> itertools
	"sympy.polys.polyroots" -> math
	"sympy.physics.units" -> time
	"sympy.physics.units.dimensions" -> collections
	"sympy.physics.units.definitions.dimension_definitions" -> time
	"sympy.physics.units.systems.mks" -> time
	"sympy.physics.units.systems.length_weight_time" -> time
	"sympy.physics.units.systems.natural" -> time
	"sympy.physics.units.systems.si" -> time
	"sympy.solvers.inequalities" -> itertools
	"sympy.solvers.solveset" -> re
	"sympy.solvers.pde" -> operator
	"sympy.simplify.hyperexpand" -> re
	"sympy.solvers.ode.nonhomogeneous" -> re
	"sympy.solvers.ode.systems" -> re
	scipy -> warnings
	scipy -> test
	"scipy._distributor_init" -> os
	"scipy._distributor_init" -> glob
	"scipy._distributor_init" -> warnings
	"scipy._lib" -> test
	"scipy._lib._testutils" -> os
	"scipy._lib._testutils" -> re
	"scipy._lib._testutils" -> sys
	"scipy._lib._testutils" -> inspect
	"scipy._lib._testutils" -> sysconfig
	"scipy._lib._pep440" -> collections
	"scipy._lib._pep440" -> itertools
	"scipy._lib._pep440" -> re
	"scipy._lib._ccallback" -> ctypes
	"cffi.api" -> sys
	"cffi.api" -> types
	"cffi.api" -> string
	"cffi.api" -> gc
	"cffi.api" -> errno
	"cffi.lock" -> sys
	"cffi.model" -> types
	"cffi.model" -> weakref
	"cffi.cparser" -> pycparser
	"cffi.cparser" -> weakref
	"cffi.cparser" -> re
	"cffi.cparser" -> sys
	"cffi.cparser" -> _thread
	"cffi.commontypes" -> sys
	pycparser -> io
	"pycparser.ply.yacc" -> re
	"pycparser.ply.yacc" -> types
	"pycparser.ply.yacc" -> sys
	"pycparser.ply.yacc" -> os
	"pycparser.ply.yacc" -> inspect
	"pycparser.ply.yacc" -> base64
	"pycparser.ply.yacc" -> warnings
	"pycparser.ply.yacc" -> token
	"pycparser.ply.lex" -> re
	"pycparser.ply.lex" -> sys
	"pycparser.ply.lex" -> types
	"pycparser.ply.lex" -> copy
	"pycparser.ply.lex" -> os
	"pycparser.ply.lex" -> inspect
	"pycparser.ply.lex" -> token
	"pycparser.c_ast" -> sys
	"pycparser.c_lexer" -> re
	"pycparser.c_lexer" -> token
	"pycparser.c_lexer" -> keyword
	"pycparser.plyparser" -> warnings
	"cffi.verifier" -> sys
	"cffi.verifier" -> os
	"cffi.verifier" -> binascii
	"cffi.verifier" -> shutil
	"cffi.verifier" -> io
	"cffi.verifier" -> importlib
	"cffi.ffiplatform" -> sys
	"cffi.ffiplatform" -> os
	"cffi._shimmed_dist_utils" -> sys
	"cffi._shimmed_dist_utils" -> setuptools
	"cffi._shimmed_dist_utils" -> sysconfig
	"cffi.vengine_gen" -> sys
	"cffi.vengine_gen" -> os
	"cffi.vengine_gen" -> types
	"cffi.vengine_cpy" -> sys
	"cffi._imp_emulation" -> os
	"cffi._imp_emulation" -> sys
	"cffi._imp_emulation" -> tokenize
	"cffi.pkgconfig" -> sys
	"cffi.pkgconfig" -> os
	"cffi.pkgconfig" -> subprocess
	"cffi.recompiler" -> os
	"cffi.recompiler" -> sys
	"cffi.recompiler" -> io
	"scipy.optimize" -> test
	"scipy.optimize._optimize" -> math
	"scipy.optimize._optimize" -> warnings
	"scipy.optimize._optimize" -> sys
	"scipy.optimize._optimize" -> inspect
	"scipy.linalg" -> test
	"scipy.linalg.blas" -> functools
	"scipy.linalg._decomp" -> warnings
	"scipy.linalg._decomp" -> numpy
	"scipy.linalg._decomp" -> array
	"scipy._lib._util" -> re
	"scipy._lib._util" -> functools
	"scipy._lib._util" -> operator
	"scipy._lib._util" -> warnings
	"scipy._lib._util" -> numbers
	"scipy._lib._util" -> inspect
	"scipy._lib._util" -> math
	"scipy._lib._array_api" -> os
	"scipy._lib._array_api" -> warnings
	"scipy._lib._array_api" -> copy
	tqdm -> tqdm
	"tqdm._monitor" -> atexit
	"tqdm._monitor" -> time
	"tqdm._tqdm_pandas" -> sys
	"tqdm.cli" -> logging
	"tqdm.cli" -> re
	"tqdm.cli" -> sys
	"tqdm.cli" -> tqdm
	"tqdm.std" -> sys
	"tqdm.std" -> datetime
	"tqdm.std" -> time
	"tqdm.std" -> tqdm
	"tqdm.std" -> pandas
	"tqdm.utils" -> os
	"tqdm.utils" -> re
	"tqdm.utils" -> sys
	"tqdm.utils" -> colorama
	pandas -> os
	pandas -> warnings
	pandas -> pandas
	pandas -> array
	pandas -> io
	pandas -> test
	"pandas.compat" -> os
	"pandas.compat" -> platform
	"pandas.compat" -> sys
	"pandas.compat" -> pandas
	"pandas.compat._constants" -> platform
	"pandas.compat._constants" -> sys
	"pandas.compat._constants" -> sysconfig
	"pandas.compat.compressors" -> bz2
	"pandas.compat.compressors" -> lzma
	"pandas.compat.numpy" -> warnings
	"pandas.core.util.hashing" -> itertools
	"pandas._libs" -> pandas
	"pandas.core.dtypes.common" -> warnings
	"pandas.util._exceptions" -> contextlib
	"pandas.util._exceptions" -> inspect
	"pandas.util._exceptions" -> os
	"pandas.util._exceptions" -> re
	"pandas.util._exceptions" -> warnings
	"pandas.errors" -> ctypes
	"pandas._config.config" -> re
	"pandas._config.config" -> warnings
	"pandas._typing" -> datetime
	"pandas._typing" -> sys
	"pandas.core.dtypes.dtypes" -> datetime
	"pandas.core.dtypes.dtypes" -> time
	"pandas.core.dtypes.dtypes" -> re
	"pandas.core.dtypes.dtypes" -> warnings
	"pandas.core.dtypes.dtypes" -> pytz
	pytz -> sys
	pytz -> datetime
	pytz -> os
	"pytz.tzinfo" -> datetime
	"pytz.tzinfo" -> pytz
	"pytz.tzfile" -> datetime
	"pytz.tzfile" -> os
	"pytz.tzfile" -> pprint
	pyarrow -> _warnings
	pyarrow -> string
	pyarrow -> struct
	pyarrow -> array
	pyarrow -> types
	"pyarrow.hdfs" -> os
	"pyarrow.hdfs" -> posixpath
	"pyarrow.hdfs" -> sys
	"pyarrow.hdfs" -> warnings
	"pyarrow.util" -> os
	"pyarrow.util" -> contextlib
	"pyarrow.util" -> functools
	"pyarrow.util" -> gc
	"pyarrow.util" -> socket
	"pyarrow.util" -> sys
	"pyarrow.util" -> textwrap
	"pyarrow.util" -> types
	"pyarrow.util" -> warnings
	"pyarrow.filesystem" -> os
	"pyarrow.filesystem" -> posixpath
	"pyarrow.filesystem" -> sys
	"pyarrow.filesystem" -> urllib
	"pyarrow.filesystem" -> warnings
	"pyarrow.filesystem" -> stat
	"pyarrow.parquet.core" -> inspect
	"pyarrow.parquet.core" -> json
	"pyarrow.parquet.core" -> os
	"pyarrow.parquet.core" -> re
	"pyarrow.parquet.core" -> operator
	"pyarrow.parquet.core" -> warnings
	"pyarrow.fs" -> atexit
	"fsspec._version" -> json
	"fsspec.caching" -> collections
	"fsspec.caching" -> functools
	"fsspec.caching" -> logging
	"fsspec.caching" -> math
	"fsspec.caching" -> os
	"fsspec.caching" -> threading
	"fsspec.caching" -> warnings
	"fsspec.caching" -> mmap
	"fsspec.compression" -> fsspec
	"fsspec.utils" -> contextlib
	"fsspec.utils" -> logging
	"fsspec.utils" -> math
	"fsspec.utils" -> os
	"fsspec.utils" -> pathlib
	"fsspec.utils" -> re
	"fsspec.utils" -> sys
	"fsspec.utils" -> tempfile
	"fsspec.utils" -> tokenize
	"fsspec.spec" -> io
	"fsspec.spec" -> logging
	"fsspec.spec" -> os
	"fsspec.spec" -> threading
	"fsspec.spec" -> warnings
	"fsspec.spec" -> weakref
	"fsspec.spec" -> tokenize
	"fsspec.spec" -> glob
	"fsspec.spec" -> copy
	"fsspec.spec" -> stat
	"fsspec.spec" -> readline
	"fsspec.config" -> configparser
	"fsspec.config" -> json
	"fsspec.config" -> os
	"fsspec.config" -> warnings
	"fsspec.dircache" -> time
	"fsspec.asyn" -> asyncio
	"fsspec.asyn" -> functools
	"fsspec.asyn" -> inspect
	"fsspec.asyn" -> io
	"fsspec.asyn" -> numbers
	"fsspec.asyn" -> os
	"fsspec.asyn" -> re
	"fsspec.asyn" -> threading
	"fsspec.exceptions" -> asyncio
	"fsspec.implementations.local" -> datetime
	"fsspec.implementations.local" -> io
	"fsspec.implementations.local" -> logging
	"fsspec.implementations.local" -> os
	"fsspec.implementations.local" -> posixpath
	"fsspec.implementations.local" -> re
	"fsspec.implementations.local" -> shutil
	"fsspec.implementations.local" -> stat
	"fsspec.implementations.local" -> tempfile
	"fsspec.implementations.local" -> readline
	"fsspec.core" -> io
	"fsspec.core" -> logging
	"fsspec.core" -> os
	"fsspec.core" -> re
	"fsspec.registry" -> importlib
	"fsspec.registry" -> types
	"fsspec.registry" -> warnings
	"fsspec.mapping" -> array
	"fsspec.mapping" -> posixpath
	"fsspec.mapping" -> warnings
	"fsspec.implementations.dirfs" -> copy
	"fsspec.implementations.dirfs" -> glob
	"pyarrow.compute" -> inspect
	"pyarrow.compute" -> warnings
	"pyarrow.compute" -> random
	"pyarrow.vendored.docscrape" -> inspect
	"pyarrow.vendored.docscrape" -> textwrap
	"pyarrow.vendored.docscrape" -> re
	"pyarrow.vendored.docscrape" -> pydoc
	"pyarrow.vendored.docscrape" -> copy
	"pyarrow.vendored.docscrape" -> sys
	"pyarrow.ipc" -> os
	"pandas.core.arrays.arrow.array" -> functools
	"pandas.core.arrays.arrow.array" -> operator
	"pandas.core.arrays.arrow.array" -> re
	"pandas.core.arrays.arrow.array" -> textwrap
	"pandas.core.arrays.arrow.array" -> unicodedata
	"pandas.util._decorators" -> inspect
	"pandas.util._decorators" -> warnings
	"pandas.compat._optional" -> importlib
	"pandas.compat._optional" -> sys
	"pandas.compat._optional" -> warnings
	"pandas.compat._optional" -> types
	"pandas.util.version" -> collections
	"pandas.util.version" -> itertools
	"pandas.util.version" -> re
	"pandas.util.version" -> warnings
	"pandas.core.dtypes.cast" -> functools
	"pandas.core.dtypes.cast" -> warnings
	"pandas.core.dtypes.inference" -> abc
	"pandas.core.dtypes.inference" -> re
	"pandas.core.dtypes.missing" -> warnings
	"pandas.core.indexes.base" -> abc
	"pandas.core.indexes.base" -> datetime
	"pandas.core.indexes.base" -> functools
	"pandas.core.indexes.base" -> operator
	"pandas.core.indexes.base" -> warnings
	"pandas.core.dtypes.astype" -> inspect
	"pandas.core.dtypes.astype" -> warnings
	"pandas.core.construction" -> warnings
	"pandas.core.construction" -> array
	"pandas.core.common" -> builtins
	"pandas.core.common" -> abc
	"pandas.core.common" -> contextlib
	"pandas.core.common" -> inspect
	"pandas.core.common" -> warnings
	"pandas.core.arrays.base" -> operator
	"pandas.core.arrays.base" -> warnings
	"pandas.core.arraylike" -> operator
	"pandas.core.roperator" -> operator
	"pandas.core.ops.array_ops" -> datetime
	"pandas.core.ops.array_ops" -> operator
	"pandas.core.ops.array_ops" -> warnings
	"pandas.core.computation.expressions" -> operator
	"pandas.core.computation.expressions" -> warnings
	"pandas.core.ops.missing" -> operator
	"pandas.core.ops.invalid" -> operator
	"pandas.core.frame" -> collections
	"pandas.core.frame" -> abc
	"pandas.core.frame" -> functools
	"pandas.core.frame" -> itertools
	"pandas.core.frame" -> operator
	"pandas.core.frame" -> sys
	"pandas.core.frame" -> warnings
	"pandas.core.frame" -> pandas
	"pandas.core.frame" -> datetime
	"pandas.core.dtypes.concat" -> warnings
	"pandas.core.arrays.categorical" -> operator
	"pandas.core.arrays.categorical" -> warnings
	"pandas.core.algorithms" -> decimal
	"pandas.core.algorithms" -> operator
	"pandas.core.algorithms" -> warnings
	"pandas.core.array_algos.take" -> functools
	"pandas.core.indexes.api" -> textwrap
	"pandas.core.indexes.datetimes" -> operator
	"pandas.core.indexes.datetimes" -> warnings
	"pandas.core.indexes.datetimes" -> pytz
	"pandas.core.arrays.datetimes" -> datetime
	"pandas.core.arrays.datetimes" -> warnings
	"pandas.core.arrays.datetimelike" -> datetime
	"pandas.core.arrays.datetimelike" -> operator
	"pandas.core.arrays.datetimelike" -> warnings
	"pandas.core.nanops" -> functools
	"pandas.core.nanops" -> itertools
	"pandas.core.nanops" -> warnings
	"scipy.stats" -> test
	"scipy.stats._stats_py" -> warnings
	"scipy.stats._stats_py" -> math
	"scipy.stats._stats_py" -> array
	"scipy.spatial" -> test
	"scipy.spatial._spherical_voronoi" -> scipy
	"scipy._lib.decorator" -> re
	"scipy._lib.decorator" -> sys
	"scipy._lib.decorator" -> inspect
	"scipy._lib.decorator" -> operator
	"scipy._lib.decorator" -> itertools
	"scipy._lib.decorator" -> collections
	"scipy._lib.decorator" -> decorator
	"scipy.spatial._geometric_slerp" -> warnings
	"scipy.spatial.distance" -> math
	"scipy.spatial.distance" -> warnings
	"scipy.spatial.distance" -> dataclasses
	"scipy.spatial.distance" -> types
	"scipy.special" -> warnings
	"scipy.special" -> test
	"scipy.special._sf_error" -> warnings
	"scipy.special._support_alternative_backends" -> os
	"scipy.special._support_alternative_backends" -> sys
	"scipy.special._support_alternative_backends" -> functools
	"scipy.special._basic" -> operator
	"scipy.special._basic" -> math
	"scipy.special._basic" -> warnings
	"scipy._lib.deprecation" -> functools
	"scipy._lib.deprecation" -> warnings
	"scipy.spatial.transform" -> test
	"scipy.interpolate" -> test
	"scipy.interpolate._interpolate" -> warnings
	"scipy.interpolate._interpolate" -> array
	"scipy.interpolate._interpolate" -> itertools
	"scipy.interpolate._fitpack_impl" -> warnings
	"scipy.interpolate._fitpack_impl" -> array
	"scipy.interpolate._bsplines" -> operator
	"scipy.sparse" -> _warnings
	"scipy.sparse" -> test
	"scipy.sparse._sputils" -> sys
	"scipy.sparse._sputils" -> operator
	"scipy.sparse._data" -> copy
	"scipy.sparse._compressed" -> operator
	"scipy.sparse._coo" -> operator
	"scipy.sparse._dok" -> itertools
	"scipy.sparse._dok" -> copy
	"scipy.sparse._lil" -> copy
	"scipy.sparse.linalg" -> test
	"scipy.sparse.linalg._isolve" -> test
	"scipy.sparse.linalg._isolve.iterative" -> warnings
	"scipy.sparse.linalg._interface" -> warnings
	"scipy.sparse.linalg._isolve.utils" -> array
	"scipy.sparse.linalg._isolve.minres" -> warnings
	"scipy.sparse.linalg._dsolve" -> test
	"scipy.sparse.linalg._dsolve.linsolve" -> copy
	"scipy.sparse.linalg._eigen" -> test
	"scipy.sparse.linalg._eigen.arpack.arpack" -> warnings
	"scipy._lib._threadsafety" -> threading
	"scipy._lib._threadsafety" -> scipy
	"scipy.sparse.linalg._eigen.lobpcg" -> test
	"scipy.sparse.linalg._eigen.lobpcg.lobpcg" -> warnings
	"scipy.sparse.linalg._eigen._svds" -> os
	cv2 -> os
	cv2 -> importlib
	cv2 -> sys
	cv2 -> numpy
	"cv2.load_config_py2" -> sys
	"cv2.load_config_py3" -> os
	"cv2.load_config_py3" -> sys
	"cnstd.utils.geometry" -> cv2
	"cnstd.utils.metrics" -> cv2
	"cnstd.utils.metrics" -> unidecode
	unidecode -> warnings
	unidecode -> unidecode
	"cnstd.utils._utils" -> cv2
	statistics -> math
	statistics -> numbers
	statistics -> random
	statistics -> sys
	"cnocr.consts" -> os
	"cnocr.consts" -> string
	"cnocr.consts" -> logging
	"cnocr.cn_ocr" -> os
	"cnocr.cn_ocr" -> logging
	"cnocr.cn_ocr" -> torch
	"cnocr.recognizer" -> os
	"cnocr.recognizer" -> logging
	"cnocr.recognizer" -> glob
	"cnocr.recognizer" -> torch
	"cnocr.models.ocr_model" -> logging
	"cnocr.models.ocr_model" -> torch
	"torch.nn.utils.rnn" -> warnings
	"torch.nn.utils.rnn" -> torch
	"torch.nn.utils.clip_grad" -> warnings
	"torch.nn.utils.clip_grad" -> torch
	"torch.nn.utils.weight_norm" -> warnings
	"torch.nn.utils.convert_parameters" -> torch
	"torch.nn.utils.spectral_norm" -> torch
	"torch.nn.utils.fusion" -> copy
	"torch.nn.utils.fusion" -> torch
	"torch.nn.utils.memory_format" -> torch
	"torch.nn.utils.parametrizations" -> torch
	"torch.nn.utils.init" -> inspect
	"torch.nn.utils.init" -> torch
	"torch.nn.utils.stateless" -> contextlib
	"torch.nn.utils.stateless" -> warnings
	"torch.nn.utils.stateless" -> torch
	"torch.nn.utils._named_member_accessor" -> torch
	"cnocr.models.ctc" -> torch
	"torchvision.models.alexnet" -> torch
	"torchvision.transforms.transforms" -> math
	"torchvision.transforms.transforms" -> numbers
	"torchvision.transforms.transforms" -> random
	"torchvision.transforms.transforms" -> warnings
	"torchvision.transforms.transforms" -> torch
	"torchvision.transforms.functional" -> math
	"torchvision.transforms.functional" -> numbers
	"torchvision.transforms.functional" -> sys
	"torchvision.transforms.functional" -> warnings
	"torchvision.transforms.functional" -> torch
	"torchvision.transforms._functional_pil" -> numbers
	"torchvision.transforms._functional_pil" -> torch
	"PIL.ImageFilter" -> functools
	"PIL.ImageStat" -> math
	"torchvision.transforms._functional_tensor" -> warnings
	"torchvision.transforms._functional_tensor" -> torch
	"torchvision.transforms.autoaugment" -> math
	"torchvision.transforms.autoaugment" -> torch
	"torchvision.transforms._presets" -> torch
	"torchvision.models._api" -> fnmatch
	"torchvision.models._api" -> importlib
	"torchvision.models._api" -> inspect
	"torchvision.models._api" -> sys
	"torchvision.models._utils" -> functools
	"torchvision.models._utils" -> inspect
	"torchvision.models._utils" -> warnings
	"torchvision._utils" -> enum
	"torchvision.models.convnext" -> torch
	"torchvision.ops._register_onnx_ops" -> sys
	"torchvision.ops._register_onnx_ops" -> warnings
	"torchvision.ops._register_onnx_ops" -> torch
	"torch.onnx._deprecation" -> functools
	"torch.onnx._deprecation" -> textwrap
	"torch.onnx._deprecation" -> warnings
	"torch.onnx.errors" -> textwrap
	"torch.onnx._internal.diagnostics._diagnostic" -> contextlib
	"torch.onnx._internal.diagnostics._diagnostic" -> gzip
	"torch.onnx._internal.diagnostics._diagnostic" -> torch
	"torch.onnx._internal.diagnostics.infra._infra" -> dataclasses
	"torch.onnx._internal.diagnostics.infra._infra" -> enum
	"torch.onnx._internal.diagnostics.infra._infra" -> logging
	"torch.onnx._internal.diagnostics.infra.formatter" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.formatter" -> json
	"torch.onnx._internal.diagnostics.infra.formatter" -> re
	"torch.onnx._internal.diagnostics.infra.formatter" -> traceback
	"torch.onnx._internal._beartype" -> enum
	"torch.onnx._internal._beartype" -> functools
	"torch.onnx._internal._beartype" -> os
	"torch.onnx._internal._beartype" -> traceback
	"torch.onnx._internal._beartype" -> typing
	"torch.onnx._internal._beartype" -> warnings
	"torch.onnx._internal.diagnostics.infra.sarif._address" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._property_bag" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._message" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._replacement" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._region" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._rectangle" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._code_flow" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._location" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._logical_location" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._stack" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._web_request" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._web_response" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._notification" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._exception" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._tool" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._edge" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._graph" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._node" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._result" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._fix" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._suppression" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._run" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._special_locations" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.context" -> contextlib
	"torch.onnx._internal.diagnostics.infra.context" -> dataclasses
	"torch.onnx._internal.diagnostics.infra.context" -> gzip
	"torch.onnx._internal.diagnostics.infra.context" -> logging
	"torch.onnx._internal.diagnostics.infra.utils" -> functools
	"torch.onnx._internal.diagnostics.infra.utils" -> inspect
	"torch.onnx._internal.diagnostics.infra.utils" -> traceback
	"torch.onnx._internal.diagnostics._rules" -> dataclasses
	"torch.onnx.symbolic_caffe2" -> importlib
	"torch.onnx.symbolic_caffe2" -> inspect
	"torch.onnx.symbolic_helper" -> functools
	"torch.onnx.symbolic_helper" -> inspect
	"torch.onnx.symbolic_helper" -> sys
	"torch.onnx.symbolic_helper" -> typing
	"torch.onnx.symbolic_helper" -> warnings
	"torch.onnx.symbolic_helper" -> torch
	"torch.onnx._type_utils" -> enum
	"torch.onnx._type_utils" -> typing
	"torch.onnx._type_utils" -> torch
	"torch.onnx._internal.jit_utils" -> dataclasses
	"torch.onnx._internal.jit_utils" -> re
	"torch.onnx._internal.jit_utils" -> typing
	"torch.onnx._internal.jit_utils" -> torch
	"torch.onnx._internal.registration" -> warnings
	"torch.onnx.symbolic_opset9" -> builtins
	"torch.onnx.symbolic_opset9" -> functools
	"torch.onnx.symbolic_opset9" -> math
	"torch.onnx.symbolic_opset9" -> sys
	"torch.onnx.symbolic_opset9" -> warnings
	"torch.onnx.symbolic_opset9" -> torch
	"torch.onnx.symbolic_opset9" -> select
	"torch.nn.modules.utils" -> collections
	"torch.onnx.symbolic_opset10" -> functools
	"torch.onnx.symbolic_opset10" -> sys
	"torch.onnx.symbolic_opset10" -> warnings
	"torch.onnx.symbolic_opset10" -> torch
	"torch.onnx.symbolic_opset8" -> functools
	"torch.onnx.symbolic_opset8" -> warnings
	"torch.onnx.symbolic_opset8" -> torch
	"torch.onnx.symbolic_opset11" -> functools
	"torch.onnx.symbolic_opset11" -> sys
	"torch.onnx.symbolic_opset11" -> warnings
	"torch.onnx.symbolic_opset11" -> torch
	"torch.onnx.symbolic_opset11" -> select
	"torch.onnx.utils" -> contextlib
	"torch.onnx.utils" -> copy
	"torch.onnx.utils" -> inspect
	"torch.onnx.utils" -> io
	"torch.onnx.utils" -> re
	"torch.onnx.utils" -> textwrap
	"torch.onnx.utils" -> typing
	"torch.onnx.utils" -> warnings
	"torch.onnx.utils" -> torch
	"torch.jit" -> warnings
	"torch.jit" -> torch
	"torch.jit._async" -> torch
	"torch.jit._builtins" -> cmath
	"torch.jit._builtins" -> math
	"torch.jit._builtins" -> warnings
	"torch.jit._builtins" -> torch
	"torch.jit._await" -> torch
	"torch.jit._decomposition_utils" -> torch
	"torch.jit._freeze" -> torch
	"torch.jit._script" -> collections
	"torch.jit._script" -> copy
	"torch.jit._script" -> enum
	"torch.jit._script" -> functools
	"torch.jit._script" -> inspect
	"torch.jit._script" -> pickle
	"torch.jit._script" -> warnings
	"torch.jit._script" -> torch
	"torch.jit._script" -> code
	"torch._classes" -> types
	"torch._classes" -> torch
	"torch.jit._fuser" -> contextlib
	"torch.jit._fuser" -> torch
	"torch.jit._monkeytype_config" -> inspect
	"torch.jit._monkeytype_config" -> pathlib
	"torch.jit._monkeytype_config" -> sys
	"torch.jit._monkeytype_config" -> typing
	"torch.jit._monkeytype_config" -> torch
	"torch.jit._recursive" -> collections
	"torch.jit._recursive" -> functools
	"torch.jit._recursive" -> inspect
	"torch.jit._recursive" -> sys
	"torch.jit._recursive" -> textwrap
	"torch.jit._recursive" -> types
	"torch.jit._recursive" -> warnings
	"torch.jit._recursive" -> torch
	"torch.jit._check" -> ast
	"torch.jit._check" -> inspect
	"torch.jit._check" -> textwrap
	"torch.jit._check" -> warnings
	"torch.jit._check" -> torch
	"torch.jit._state" -> os
	"torch.jit._state" -> weakref
	"torch.jit._state" -> torch
	"torch.jit.frontend" -> ast
	"torch.jit.frontend" -> dataclasses
	"torch.jit.frontend" -> inspect
	"torch.jit.frontend" -> re
	"torch.jit.frontend" -> string
	"torch.jit.frontend" -> sys
	"torch.jit.frontend" -> torch
	"torch.jit.annotations" -> ast
	"torch.jit.annotations" -> builtins
	"torch.jit.annotations" -> dis
	"torch.jit.annotations" -> enum
	"torch.jit.annotations" -> inspect
	"torch.jit.annotations" -> re
	"torch.jit.annotations" -> typing
	"torch.jit.annotations" -> warnings
	"torch.jit.annotations" -> torch
	"torch.jit._dataclass_impls" -> ast
	"torch.jit._dataclass_impls" -> dataclasses
	"torch.jit._dataclass_impls" -> inspect
	"torch.jit._dataclass_impls" -> os
	"torch.package.package_exporter" -> collections
	"torch.package.package_exporter" -> importlib
	"torch.package.package_exporter" -> io
	"torch.package.package_exporter" -> linecache
	"torch.package.package_exporter" -> pickletools
	"torch.package.package_exporter" -> platform
	"torch.package.package_exporter" -> types
	"torch.package.package_exporter" -> torch
	pickletools -> codecs
	pickletools -> io
	pickletools -> pickle
	pickletools -> re
	pickletools -> sys
	pickletools -> dis
	pickletools -> argparse
	"torch.package._importlib" -> _warnings
	"torch.package._importlib" -> os
	"torch.package._mangling" -> re
	"torch.package._package_pickler" -> _compat_pickle
	"torch.package.importer" -> importlib
	"torch.package._stdlib" -> sys
	"torch.package.find_file_dependencies" -> ast
	"torch.package.glob_group" -> re
	"torch.package.analyze.trace_dependencies" -> sys
	"torch.package.package_importer" -> builtins
	"torch.package.package_importer" -> importlib
	"torch.package.package_importer" -> inspect
	"torch.package.package_importer" -> io
	"torch.package.package_importer" -> linecache
	"torch.package.package_importer" -> os
	"torch.package.package_importer" -> types
	"torch.package.package_importer" -> torch
	"torch.package._directory_reader" -> os
	"torch.package._directory_reader" -> glob
	"torch.package._directory_reader" -> torch
	"torch.package._package_unpickler" -> _compat_pickle
	"torch.package._package_unpickler" -> pickle
	"torch.jit._serialization" -> os
	"torch.jit._serialization" -> pathlib
	"torch.jit._serialization" -> torch
	"torch.jit._ir_utils" -> torch
	"torch.jit._trace" -> contextlib
	"torch.jit._trace" -> copy
	"torch.jit._trace" -> functools
	"torch.jit._trace" -> inspect
	"torch.jit._trace" -> os
	"torch.jit._trace" -> re
	"torch.jit._trace" -> warnings
	"torch.jit._trace" -> torch
	"torch.autograd.function" -> functools
	"torch.autograd.function" -> inspect
	"torch.autograd.function" -> warnings
	"torch.autograd.function" -> torch
	"torch._functorch.autograd_function" -> torch
	"torch.testing._comparison" -> abc
	"torch.testing._comparison" -> cmath
	"torch.testing._comparison" -> collections
	"torch.testing._comparison" -> contextlib
	"torch.testing._comparison" -> warnings
	"torch.testing._comparison" -> torch
	"torch.testing._creation" -> collections
	"torch.testing._creation" -> math
	"torch.testing._creation" -> warnings
	"torch.testing._creation" -> torch
	"torch.onnx._internal.onnx_proto_utils" -> glob
	"torch.onnx._internal.onnx_proto_utils" -> io
	"torch.onnx._internal.onnx_proto_utils" -> os
	"torch.onnx._internal.onnx_proto_utils" -> shutil
	"torch.onnx._internal.onnx_proto_utils" -> zipfile
	"torch.onnx._internal.onnx_proto_utils" -> torch
	onnx -> os
	onnx -> typing
	"onnx.serialization" -> warnings
	"onnx.serialization" -> typing
	"onnx.serialization" -> onnx
	fitz -> atexit
	fitz -> binascii
	fitz -> glob
	fitz -> inspect
	fitz -> io
	fitz -> math
	fitz -> os
	fitz -> pathlib
	fitz -> re
	fitz -> string
	fitz -> sys
	fitz -> tarfile
	fitz -> typing
	fitz -> warnings
	fitz -> weakref
	fitz -> zipfile
	fitz -> importlib
	fitz -> select
	fitz -> copy
	"fitz.mupdf" -> weakref
	"fitz.mupdf" -> inspect
	"fitz.mupdf" -> os
	"fitz.mupdf" -> re
	"fitz.mupdf" -> sys
	"fitz.mupdf" -> traceback
	"fitz.mupdf" -> io
	"fitz.mupdf" -> types
	"fitz.mupdf" -> copy
	"fitz.mupdf" -> mimetypes
	"fitz.mupdf" -> string
	"fitz.mupdf" -> email
	"fitz.mupdf" -> code
	"fitz.utils" -> io
	"fitz.utils" -> math
	"fitz.utils" -> os
	"fitz.utils" -> typing
	"fitz.utils" -> weakref
	"fitz.utils" -> fitz
	"fitz.table" -> inspect
	"fitz.table" -> itertools
	"fitz.table" -> string
	"fitz.table" -> html
	"fitz.__main__" -> argparse
	"fitz.__main__" -> bisect
	"fitz.__main__" -> os
	"fitz.__main__" -> sys
	"fitz.__main__" -> statistics
	"fitz.__main__" -> fitz
	"fitz.__main__" -> gettext
	fontTools -> logging
	"fontTools.misc.loggingTools" -> sys
	"fontTools.misc.loggingTools" -> logging
	"fontTools.misc.loggingTools" -> timeit
	"fontTools.misc.loggingTools" -> warnings
	"fontTools.misc.loggingTools" -> doctest
	"fontTools.misc.loggingTools" -> time
	"fontTools.subset" -> sys
	"fontTools.subset" -> struct
	"fontTools.subset" -> array
	"fontTools.subset" -> logging
	"fontTools.subset" -> re
	"fontTools.config" -> logging
	"fontTools.config" -> copy
	"fontTools.misc.configTools" -> logging
	"fontTools.misc.configTools" -> copy
	"fontTools.misc.roundTools" -> math
	"fontTools.misc.roundTools" -> functools
	"fontTools.misc.roundTools" -> logging
	"fontTools.ttLib" -> logging
	"fontTools.ttLib" -> os
	"fontTools.ttLib" -> traceback
	"fontTools.ttLib.ttFont" -> os
	"fontTools.ttLib.ttFont" -> logging
	"fontTools.ttLib.ttFont" -> traceback
	"fontTools.misc.xmlWriter" -> sys
	"fontTools.misc.xmlWriter" -> os
	"fontTools.misc.xmlWriter" -> string
	"fontTools.misc.textTools" -> ast
	"fontTools.misc.textTools" -> string
	"fontTools.misc.textTools" -> doctest
	"fontTools.misc.textTools" -> sys
	"fontTools.ttLib.ttGlyphSet" -> copy
	"fontTools.misc.fixedTools" -> logging
	"fontTools.misc.transform" -> math
	"fontTools.misc.transform" -> sys
	"fontTools.misc.transform" -> doctest
	"fontTools.pens.pointPen" -> math
	"fontTools.pens.recordingPen" -> pprint
	"fontTools.varLib" -> os
	"fontTools.varLib" -> logging
	"fontTools.varLib" -> sys
	"fontTools.varLib" -> doctest
	"fontTools.misc.vector" -> math
	"fontTools.misc.vector" -> operator
	"fontTools.misc.vector" -> warnings
	"fontTools.ttLib.tables" -> doctest
	"fontTools.ttLib.tables" -> sys
	"fontTools.ttLib.tables.otBase" -> sys
	"fontTools.ttLib.tables.otBase" -> array
	"fontTools.ttLib.tables.otBase" -> struct
	"fontTools.ttLib.tables.otBase" -> logging
	"fontTools.ttLib.tables.otBase" -> copy
	"fontTools.ttLib.tables.otTables" -> copy
	"fontTools.ttLib.tables.otTables" -> itertools
	"fontTools.ttLib.tables.otTables" -> logging
	"fontTools.ttLib.tables.otTables" -> struct
	"fontTools.misc.arrayTools" -> math
	"fontTools.misc.arrayTools" -> warnings
	"fontTools.misc.arrayTools" -> sys
	"fontTools.misc.arrayTools" -> doctest
	"fontTools.ttLib.tables.otConverters" -> re
	"fontTools.ttLib.tables.otConverters" -> struct
	"fontTools.ttLib.tables.otConverters" -> logging
	"fontTools.ttLib.tables.C_B_D_T_" -> struct
	"fontTools.misc.sstruct" -> struct
	"fontTools.misc.sstruct" -> re
	"fontTools.ttLib.tables.E_B_D_T_" -> itertools
	"fontTools.ttLib.tables.E_B_D_T_" -> os
	"fontTools.ttLib.tables.E_B_D_T_" -> struct
	"fontTools.ttLib.tables.E_B_D_T_" -> logging
	"fontTools.ttLib.tables.BitmapGlyphMetrics" -> logging
	"fontTools.ttLib.tables.E_B_L_C_" -> struct
	"fontTools.ttLib.tables.E_B_L_C_" -> itertools
	"fontTools.ttLib.tables.E_B_L_C_" -> logging
	"fontTools.cffLib" -> struct
	"fontTools.cffLib" -> logging
	"fontTools.cffLib" -> re
	"fontTools.misc.psCharStrings" -> struct
	"fontTools.misc.psCharStrings" -> logging
	"fontTools.colorLib.builder" -> collections
	"fontTools.colorLib.builder" -> copy
	"fontTools.colorLib.builder" -> enum
	"fontTools.ttLib.tables.C_P_A_L_" -> array
	"fontTools.ttLib.tables.C_P_A_L_" -> struct
	"fontTools.ttLib.tables.C_P_A_L_" -> sys
	"fontTools.ttLib.tables._n_a_m_e" -> struct
	"fontTools.ttLib.tables._n_a_m_e" -> logging
	"fontTools.misc.encodingTools" -> fontTools
	"fontTools.encodings.codecs" -> codecs
	"fontTools.encodings.codecs" -> encodings
	"fontTools.misc.visitor" -> enum
	"fontTools.colorLib.table_builder" -> collections
	"fontTools.colorLib.table_builder" -> enum
	"fontTools.ttLib.tables.D_S_I_G_" -> base64
	"fontTools.ttLib.tables.D__e_b_g" -> json
	"fontTools.misc.timeTools" -> os
	"fontTools.misc.timeTools" -> time
	"fontTools.misc.timeTools" -> datetime
	"fontTools.misc.timeTools" -> calendar
	"fontTools.misc.timeTools" -> sys
	"fontTools.misc.timeTools" -> doctest
	"fontTools.ttLib.tables.F__e_a_t" -> struct
	"fontTools.ttLib.tables.grUtils" -> struct
	"fontTools.ttLib.tables.grUtils" -> warnings
	"fontTools.ttLib.tables.G_P_K_G_" -> sys
	"fontTools.ttLib.tables.G_P_K_G_" -> array
	"fontTools.ttLib.tables.G__l_a_t" -> struct
	"fontTools.ttLib.tables.G__l_o_c" -> array
	"fontTools.ttLib.tables.G__l_o_c" -> sys
	"fontTools.ttLib.tables.L_T_S_H_" -> struct
	"fontTools.ttLib.tables.L_T_S_H_" -> array
	"fontTools.ttLib.tables.M_E_T_A_" -> pdb
	"fontTools.ttLib.tables.M_E_T_A_" -> struct
	"fontTools.ttLib.tables.O_S_2f_2" -> bisect
	"fontTools.ttLib.tables.O_S_2f_2" -> logging
	"fontTools.ttLib.tables.O_S_2f_2" -> doctest
	"fontTools.ttLib.tables.O_S_2f_2" -> sys
	"fontTools.ttLib.tables.S_V_G_" -> struct
	"fontTools.ttLib.tables.S_V_G_" -> logging
	"fontTools.ttLib.tables.S__i_l_f" -> array
	"fontTools.ttLib.tables.S__i_l_f" -> struct
	"fontTools.ttLib.tables.S__i_l_f" -> re
	"fontTools.ttLib.tables.S__i_l_f" -> sys
	"fontTools.ttLib.tables.S__i_l_l" -> struct
	"fontTools.ttLib.tables.T_S_I__0" -> struct
	"fontTools.ttLib.tables.T_S_I__5" -> sys
	"fontTools.ttLib.tables.T_S_I__5" -> array
	"fontTools.ttLib.tables.V_D_M_X_" -> struct
	"fontTools.ttLib.tables.V_O_R_G_" -> struct
	"fontTools.ttLib.tables._a_v_a_r" -> struct
	"fontTools.ttLib.tables._a_v_a_r" -> logging
	"fontTools.ttLib.tables._c_m_a_p" -> sys
	"fontTools.ttLib.tables._c_m_a_p" -> struct
	"fontTools.ttLib.tables._c_m_a_p" -> array
	"fontTools.ttLib.tables._c_m_a_p" -> logging
	"fontTools.ttLib.tables.TupleVariation" -> array
	"fontTools.ttLib.tables.TupleVariation" -> io
	"fontTools.ttLib.tables.TupleVariation" -> logging
	"fontTools.ttLib.tables.TupleVariation" -> struct
	"fontTools.ttLib.tables.TupleVariation" -> sys
	"fontTools.ttLib.tables._c_v_t" -> sys
	"fontTools.ttLib.tables._c_v_t" -> array
	"fontTools.ttLib.tables._f_p_g_m" -> sys
	"fontTools.ttLib.tables._f_p_g_m" -> doctest
	"fontTools.ttLib.tables.ttProgram" -> array
	"fontTools.ttLib.tables.ttProgram" -> re
	"fontTools.ttLib.tables.ttProgram" -> logging
	"fontTools.ttLib.tables.ttProgram" -> sys
	"fontTools.ttLib.tables.ttProgram" -> doctest
	"fontTools.ttLib.tables._f_v_a_r" -> struct
	"fontTools.ttLib.tables._g_a_s_p" -> struct
	"fontTools.ttLib.tables._g_l_y_f" -> sys
	"fontTools.ttLib.tables._g_l_y_f" -> struct
	"fontTools.ttLib.tables._g_l_y_f" -> array
	"fontTools.ttLib.tables._g_l_y_f" -> logging
	"fontTools.ttLib.tables._g_l_y_f" -> math
	"fontTools.ttLib.tables._g_l_y_f" -> os
	"fontTools.ttLib.tables._g_l_y_f" -> doctest
	"fontTools.ttLib.tables._g_l_y_f" -> copy
	"fontTools.misc.filenames" -> doctest
	"fontTools.misc.filenames" -> sys
	"fontTools.ttLib.tables._g_v_a_r" -> array
	"fontTools.ttLib.tables._g_v_a_r" -> itertools
	"fontTools.ttLib.tables._g_v_a_r" -> logging
	"fontTools.ttLib.tables._g_v_a_r" -> struct
	"fontTools.ttLib.tables._g_v_a_r" -> sys
	"fontTools.ttLib.tables._h_d_m_x" -> array
	"fontTools.ttLib.tables._h_e_a_d" -> logging
	"fontTools.ttLib.tables._h_h_e_a" -> math
	"fontTools.ttLib.tables._h_m_t_x" -> sys
	"fontTools.ttLib.tables._h_m_t_x" -> struct
	"fontTools.ttLib.tables._h_m_t_x" -> array
	"fontTools.ttLib.tables._h_m_t_x" -> logging
	"fontTools.ttLib.tables._k_e_r_n" -> struct
	"fontTools.ttLib.tables._k_e_r_n" -> sys
	"fontTools.ttLib.tables._k_e_r_n" -> array
	"fontTools.ttLib.tables._k_e_r_n" -> logging
	"fontTools.ttLib.tables._l_o_c_a" -> sys
	"fontTools.ttLib.tables._l_o_c_a" -> array
	"fontTools.ttLib.tables._l_o_c_a" -> logging
	"fontTools.ttLib.tables._l_t_a_g" -> struct
	"fontTools.ttLib.tables._p_o_s_t" -> sys
	"fontTools.ttLib.tables._p_o_s_t" -> struct
	"fontTools.ttLib.tables._p_o_s_t" -> array
	"fontTools.ttLib.tables._p_o_s_t" -> logging
	"fontTools.agl" -> re
	"fontTools.ttLib.tables.sbixStrike" -> struct
	"fontTools.ttLib.tables.sbixGlyph" -> struct
	"fontTools.ttLib.tables._t_r_a_k" -> struct
	"fontTools.ttLib.tables._v_h_e_a" -> math
	"fontTools.varLib.models" -> doctest
	"fontTools.varLib.models" -> sys
	"fontTools.varLib.errors" -> textwrap
	"fontTools.designspaceLib" -> collections
	"fontTools.designspaceLib" -> copy
	"fontTools.designspaceLib" -> itertools
	"fontTools.designspaceLib" -> math
	"fontTools.designspaceLib" -> os
	"fontTools.designspaceLib" -> posixpath
	"fontTools.designspaceLib" -> plistlib
	"fontTools.misc.etree" -> sys
	"fontTools.misc.etree" -> io
	"fontTools.misc.etree" -> re
	"fontTools.misc.etree" -> contextlib
	"fontTools.misc.etree" -> warnings
	"fontTools.misc.etree" -> collections
	"fontTools.misc.etree" -> weakref
	"xml.etree.cElementTree" -> sys
	"xml.etree.cElementTree" -> re
	"xml.etree.cElementTree" -> warnings
	"xml.etree.cElementTree" -> io
	"xml.etree.cElementTree" -> collections
	"xml.etree.cElementTree" -> contextlib
	"xml.etree.cElementTree" -> weakref
	"fontTools.misc.plistlib" -> collections
	"fontTools.misc.plistlib" -> re
	"fontTools.misc.plistlib" -> warnings
	"fontTools.misc.plistlib" -> datetime
	"fontTools.varLib.varStore" -> sys
	"fontTools.varLib.varStore" -> doctest
	"fontTools.varLib.merger" -> os
	"fontTools.varLib.merger" -> copy
	"fontTools.varLib.merger" -> enum
	"fontTools.varLib.merger" -> logging
	"fontTools.misc.classifyTools" -> sys
	"fontTools.misc.classifyTools" -> doctest
	"fontTools.otlLib.builder" -> os
	"fontTools.otlLib.builder" -> logging
	"fontTools.otlLib.builder" -> copy
	"fontTools.feaLib.ast" -> itertools
	"fontTools.otlLib.optimize" -> sys
	"fontTools.otlLib.optimize" -> doctest
	"fontTools.otlLib.optimize.gpos" -> logging
	"fontTools.otlLib.optimize.gpos" -> os
	"fontTools.varLib.featureVars" -> doctest
	"fontTools.varLib.featureVars" -> sys
	"fontTools.designspaceLib.split" -> itertools
	"fontTools.designspaceLib.split" -> logging
	"fontTools.designspaceLib.split" -> math
	"fontTools.designspaceLib.statNames" -> logging
	"fontTools.varLib.stat" -> fontTools
	"fontTools.colorLib.unbuilder" -> pprint
	"fontTools.colorLib.unbuilder" -> sys
	"fontTools.cffLib.specializer" -> sys
	"fontTools.cffLib.specializer" -> doctest
	"fontTools.cffLib.specializer" -> argparse
	"fontTools.ttx" -> os
	"fontTools.ttx" -> sys
	"fontTools.ttx" -> getopt
	"fontTools.ttx" -> re
	"fontTools.ttx" -> logging
	"fontTools.ttx" -> unicodedata
	"fontTools.misc.cliTools" -> os
	"fontTools.misc.cliTools" -> re
	"fontTools.ttLib.sfnt" -> struct
	"fontTools.ttLib.sfnt" -> logging
	"fontTools.ttLib.sfnt" -> sys
	"fontTools.ttLib.sfnt" -> doctest
	"fontTools.ttLib.woff2" -> sys
	"fontTools.ttLib.woff2" -> array
	"fontTools.ttLib.woff2" -> struct
	"fontTools.ttLib.woff2" -> logging
	"fontTools.misc.macRes" -> struct
	"fontTools.misc.macRes" -> types
	"fontTools.misc.xmlReader" -> sys
	"fontTools.misc.xmlReader" -> os
	"fontTools.misc.xmlReader" -> logging
	"fontTools.ttLib.ttCollection" -> struct
	"fontTools.ttLib.ttCollection" -> logging
	"fontTools.subset.svg" -> re
	pydantic -> typing
	pydantic -> pydantic_core
	pydantic -> dataclasses
	"pydantic._migration" -> sys
	"pydantic_core.core_schema" -> sys
	"pydantic_core.core_schema" -> warnings
	"pydantic_core.core_schema" -> datetime
	"pydantic_core.core_schema" -> time
	"pydantic._internal._git" -> os
	"pydantic._internal._git" -> subprocess
	"pydantic.errors" -> re
	"pydantic._internal._validators" -> math
	"pydantic._internal._validators" -> re
	"pydantic._internal._validators" -> typing
	"pydantic.dataclasses" -> dataclasses
	"pydantic.dataclasses" -> sys
	"pydantic.dataclasses" -> types
	"pydantic._internal._config" -> warnings
	"pydantic.aliases" -> dataclasses
	"pydantic._internal._internal_dataclass" -> sys
	"pydantic._internal._generate_schema" -> collections
	"pydantic._internal._generate_schema" -> dataclasses
	"pydantic._internal._generate_schema" -> datetime
	"pydantic._internal._generate_schema" -> inspect
	"pydantic._internal._generate_schema" -> os
	"pydantic._internal._generate_schema" -> pathlib
	"pydantic._internal._generate_schema" -> re
	"pydantic._internal._generate_schema" -> sys
	"pydantic._internal._generate_schema" -> typing
	"pydantic._internal._generate_schema" -> warnings
	"pydantic._internal._generate_schema" -> copy
	"pydantic._internal._generate_schema" -> typing_extensions
	"pydantic.json_schema" -> dataclasses
	"pydantic.json_schema" -> inspect
	"pydantic.json_schema" -> math
	"pydantic.json_schema" -> re
	"pydantic.json_schema" -> warnings
	"pydantic.json_schema" -> pydantic_core
	"pydantic.json_schema" -> string
	"pydantic.json_schema" -> array
	"pydantic._internal._core_metadata" -> typing
	"pydantic._internal._core_metadata" -> typing_extensions
	"pydantic._internal._core_utils" -> os
	"pydantic._internal._repr" -> types
	"pydantic._internal._repr" -> typing
	"pydantic._internal._repr" -> typing_extensions
	"pydantic._internal._typing_extra" -> dataclasses
	"pydantic._internal._typing_extra" -> re
	"pydantic._internal._typing_extra" -> sys
	"pydantic._internal._typing_extra" -> types
	"pydantic._internal._typing_extra" -> typing
	"pydantic._internal._typing_extra" -> warnings
	"pydantic._internal._dataclasses" -> dataclasses
	"pydantic._internal._dataclasses" -> typing
	"pydantic._internal._dataclasses" -> warnings
	"pydantic.plugin._schema_validator" -> functools
	"pydantic.plugin._loader" -> importlib_metadata
	"pydantic.plugin._loader" -> os
	"pydantic.plugin._loader" -> warnings
	"pydantic.fields" -> dataclasses
	"pydantic.fields" -> inspect
	"pydantic.fields" -> sys
	"pydantic.fields" -> typing
	"pydantic.fields" -> copy
	"pydantic.fields" -> annotated_types
	"pydantic.fields" -> typing_extensions
	"pydantic.fields" -> types
	"pydantic.fields" -> warnings
	annotated_types -> math
	annotated_types -> sys
	annotated_types -> types
	"pydantic.types" -> base64
	"pydantic.types" -> re
	"pydantic.types" -> datetime
	"pydantic.types" -> annotated_types
	"pydantic._internal._fields" -> dataclasses
	"pydantic._internal._fields" -> sys
	"pydantic._internal._fields" -> warnings
	"pydantic._internal._fields" -> copy
	"pydantic._internal._docs_extraction" -> ast
	"pydantic._internal._docs_extraction" -> inspect
	"pydantic._internal._docs_extraction" -> textwrap
	"pydantic.main" -> operator
	"pydantic.main" -> sys
	"pydantic.main" -> types
	"pydantic.main" -> typing
	"pydantic.main" -> warnings
	"pydantic.main" -> copy
	"pydantic.main" -> pydantic_core
	"pydantic.main" -> typing_extensions
	"pydantic.main" -> json
	"pydantic._internal._generics" -> sys
	"pydantic._internal._generics" -> types
	"pydantic._internal._generics" -> typing
	"pydantic._internal._generics" -> typing_extensions
	"pydantic._internal._utils" -> dataclasses
	"pydantic._internal._utils" -> keyword
	"pydantic._internal._utils" -> typing
	"pydantic._internal._utils" -> weakref
	"pydantic._internal._model_construction" -> builtins
	"pydantic._internal._model_construction" -> operator
	"pydantic._internal._model_construction" -> sys
	"pydantic._internal._model_construction" -> typing
	"pydantic._internal._model_construction" -> warnings
	"pydantic._internal._model_construction" -> weakref
	"pydantic._internal._model_construction" -> typing_extensions
	"pydantic._internal._signature" -> dataclasses
	"pydantic._internal._validate_call" -> inspect
	"pydantic._internal._validate_call" -> pydantic_core
	"pydantic.root_model" -> typing
	"pydantic.root_model" -> copy
	"pydantic.deprecated.parse" -> json
	"pydantic.deprecated.parse" -> pickle
	"pydantic.deprecated.parse" -> warnings
	"pydantic.deprecated.copy_internals" -> typing
	"pydantic.deprecated.copy_internals" -> typing_extensions
	"pydantic.deprecated.json" -> datetime
	"pydantic.deprecated.json" -> warnings
	"pydantic.color" -> math
	"pydantic.color" -> re
	"pydantic.networks" -> re
	"pydantic.functional_validators" -> dataclasses
	"pydantic.functional_validators" -> sys
	"zoneinfo._tzpath" -> os
	"zoneinfo._tzpath" -> sysconfig
	"zoneinfo._common" -> struct
	"zoneinfo._zoneinfo" -> bisect
	"zoneinfo._zoneinfo" -> calendar
	"zoneinfo._zoneinfo" -> collections
	"zoneinfo._zoneinfo" -> functools
	"zoneinfo._zoneinfo" -> re
	"zoneinfo._zoneinfo" -> weakref
	"zoneinfo._zoneinfo" -> datetime
	rich -> os
	rich -> inspect
	"rich.pretty" -> builtins
	"rich.pretty" -> collections
	"rich.pretty" -> dataclasses
	"rich.pretty" -> inspect
	"rich.pretty" -> os
	"rich.pretty" -> reprlib
	"rich.pretty" -> sys
	"rich.pretty" -> array
	"rich.pretty" -> pprint
	"rich.repr" -> inspect
	"rich.console" -> inspect
	"rich.console" -> os
	"rich.console" -> sys
	"rich.console" -> threading
	"rich.console" -> zlib
	"rich.console" -> datetime
	"rich.console" -> getpass
	"rich.console" -> copy
	"rich._null_file" -> readline
	"rich.default_styles" -> argparse
	"rich.default_styles" -> io
	"rich.default_styles" -> html
	"rich.style" -> sys
	"rich.style" -> copy
	"rich.style" -> test
	"rich.color" -> re
	"rich.color" -> sys
	"rich.palette" -> colorsys
	"rich.table" -> copy
	"rich.box" -> sys
	"rich.columns" -> os
	"rich.align" -> sys
	"rich.segment" -> code
	"rich.cells" -> re
	"rich.syntax" -> os
	"rich.syntax" -> re
	"rich.syntax" -> sys
	"rich.syntax" -> textwrap
	"rich.syntax" -> argparse
	"rich.syntax" -> code
	"rich.text" -> re
	"rich.text" -> copy
	"rich._wrap" -> re
	"rich.control" -> sys
	"rich.control" -> time
	"rich.emoji" -> sys
	"rich._emoji_replace" -> re
	"rich.markup" -> re
	"rich.ansi" -> re
	"rich.ansi" -> sys
	"rich.ansi" -> io
	"rich.ansi" -> os
	"rich.ansi" -> pty
	pty -> select
	pty -> os
	pty -> sys
	pty -> tty
	"rich.highlighter" -> re
	"rich.highlighter" -> json
	"rich._ratio" -> sys
	"rich._timer" -> time
	"rich._timer" -> contextlib
	"rich.theme" -> configparser
	"rich._log_render" -> datetime
	"rich.__main__" -> colorsys
	"rich.__main__" -> io
	"rich.markdown" -> sys
	"rich.markdown" -> argparse
	"rich.markdown" -> io
	"rich.markdown" -> pydoc
	"markdown_it.common.utils" -> re
	"markdown_it.common.entities" -> html
	"markdown_it.rules_inline.emphasis" -> tokenize
	"markdown_it._compat" -> sys
	"markdown_it.ruler" -> warnings
	"markdown_it.token" -> warnings
	"markdown_it.token" -> attrs
	"markdown_it.token" -> copy
	"markdown_it.rules_inline.strikethrough" -> tokenize
	"markdown_it.rules_inline.autolink" -> re
	"markdown_it.rules_inline.backticks" -> re
	"markdown_it.rules_inline.entity" -> re
	"markdown_it.common.html_re" -> re
	"markdown_it.rules_inline.linkify" -> re
	"markdown_it.common.normalize_url" -> re
	"markdown_it.common.normalize_url" -> mdurl
	"mdurl._decode" -> functools
	"mdurl._decode" -> re
	"mdurl._parse" -> re
	"markdown_it._punycode" -> codecs
	"markdown_it._punycode" -> re
	"markdown_it.parser_block" -> logging
	"markdown_it.parser_block" -> tokenize
	"markdown_it.rules_block" -> code
	"markdown_it.rules_block.blockquote" -> logging
	"markdown_it.rules_block.code" -> logging
	"markdown_it.rules_block.code" -> code
	"markdown_it.rules_block.fence" -> logging
	"markdown_it.rules_block.heading" -> logging
	"markdown_it.rules_block.hr" -> logging
	"markdown_it.rules_block.html_block" -> logging
	"markdown_it.rules_block.html_block" -> re
	"markdown_it.rules_block.lheading" -> logging
	"markdown_it.rules_block.list" -> logging
	"markdown_it.rules_block.paragraph" -> logging
	"markdown_it.rules_block.reference" -> logging
	"markdown_it.rules_block.table" -> re
	"markdown_it.rules_core.linkify" -> re
	"markdown_it.rules_core.normalize" -> re
	"markdown_it.rules_core.replacements" -> logging
	"markdown_it.rules_core.replacements" -> re
	"markdown_it.rules_core.smartquotes" -> re
	"markdown_it.parser_inline" -> tokenize
	"markdown_it.renderer" -> inspect
	"rich.rule" -> sys
	"rich.scope" -> test
	"rich._windows" -> sys
	"rich._windows" -> ctypes
	"rich._windows" -> platform
	"rich._win32_console" -> ctypes
	"rich._win32_console" -> sys
	"rich._win32_console" -> time
	"rich.live" -> sys
	"rich.live" -> random
	"rich.live" -> time
	"rich.file_proxy" -> io
	"rich.live_render" -> sys
	ipywidgets -> os
	ipywidgets -> sys
	"ipywidgets.widgets.widget" -> os
	"ipywidgets.widgets.widget" -> sys
	"ipywidgets.widgets.widget" -> typing
	"ipywidgets.widgets.widget" -> comm
	"ipywidgets.widgets.widget" -> inspect
	"ipywidgets.comm" -> sys
	"ipywidgets.comm" -> comm
	"comm.base_comm" -> contextlib
	"comm.base_comm" -> logging
	"comm.base_comm" -> uuid
	"comm.base_comm" -> comm
	zmq -> os
	zmq -> sys
	zmq -> platform
	zmq -> socket
	zmq -> errno
	zmq -> atexit
	zmq -> zmq
	zmq -> select
	zmq -> pickle
	zmq -> random
	zmq -> time
	zmq -> re
	"zmq.backend" -> os
	"zmq.backend" -> platform
	"zmq.constants" -> errno
	"zmq.constants" -> sys
	"zmq.sugar" -> socket
	"zmq.sugar" -> errno
	"zmq.sugar" -> atexit
	"zmq.sugar" -> os
	"zmq.sugar" -> zmq
	"zmq.sugar" -> select
	"zmq.sugar" -> pickle
	"zmq.sugar" -> random
	"zmq.sugar" -> sys
	"zmq.sugar" -> time
	"zmq.sugar" -> re
	"zmq.error" -> errno
	"zmq.sugar.context" -> atexit
	"zmq.sugar.context" -> os
	"zmq.sugar.context" -> zmq
	"zmq.sugar.context" -> socket
	"zmq._typing" -> sys
	"zmq.sugar.attrsettr" -> errno
	"zmq.sugar.socket" -> errno
	"zmq.sugar.socket" -> pickle
	"zmq.sugar.socket" -> random
	"zmq.sugar.socket" -> sys
	"zmq.sugar.socket" -> zmq
	"zmq.utils.jsonapi" -> json
	"zmq.sugar.poll" -> select
	"zmq.sugar.frame" -> zmq
	"zmq.sugar.tracker" -> time
	"zmq.sugar.version" -> re
	"zmq.eventloop.zmqstream" -> asyncio
	"zmq.eventloop.zmqstream" -> pickle
	"zmq.eventloop.zmqstream" -> warnings
	"zmq.eventloop.zmqstream" -> zmq
	"zmq._future" -> warnings
	"ipykernel._version" -> re
	"ipykernel.connect" -> json
	"ipykernel.connect" -> sys
	"ipykernel.connect" -> jupyter_client
	"jupyter_client._version" -> re
	"jupyter_client.asynchronous.client" -> zmq
	"jupyter_client.asynchronous.client" -> inspect
	"zmq.asyncio" -> asyncio
	"zmq.asyncio" -> selectors
	"zmq.asyncio" -> sys
	"zmq.asyncio" -> warnings
	"jupyter_client.channels" -> asyncio
	"jupyter_client.channels" -> atexit
	"jupyter_client.channels" -> time
	"jupyter_client.channels" -> zmq
	"jupyter_client.channels" -> socket
	"jupyter_core.version" -> re
	"jupyter_core.utils" -> asyncio
	"jupyter_core.utils" -> atexit
	"jupyter_core.utils" -> errno
	"jupyter_core.utils" -> inspect
	"jupyter_core.utils" -> sys
	"jupyter_core.utils" -> threading
	"jupyter_core.utils" -> warnings
	"jupyter_client.channelsabc" -> abc
	"jupyter_client.session" -> hashlib
	"jupyter_client.session" -> hmac
	"jupyter_client.session" -> json
	"jupyter_client.session" -> logging
	"jupyter_client.session" -> os
	"jupyter_client.session" -> pickle
	"jupyter_client.session" -> pprint
	"jupyter_client.session" -> random
	"jupyter_client.session" -> warnings
	"jupyter_client.session" -> datetime
	"jupyter_client.session" -> zmq
	"jupyter_client.adapter" -> json
	"jupyter_client.adapter" -> re
	"jupyter_client.jsonutil" -> math
	"jupyter_client.jsonutil" -> numbers
	"jupyter_client.jsonutil" -> re
	"jupyter_client.jsonutil" -> types
	"jupyter_client.jsonutil" -> warnings
	"jupyter_client.jsonutil" -> datetime
	"jupyter_client.client" -> asyncio
	"jupyter_client.client" -> inspect
	"jupyter_client.client" -> sys
	"jupyter_client.client" -> time
	"jupyter_client.client" -> getpass
	"jupyter_client.client" -> zmq
	"jupyter_client.clientabc" -> abc
	"jupyter_client.connect" -> errno
	"jupyter_client.connect" -> glob
	"jupyter_client.connect" -> json
	"jupyter_client.connect" -> os
	"jupyter_client.connect" -> socket
	"jupyter_client.connect" -> stat
	"jupyter_client.connect" -> tempfile
	"jupyter_client.connect" -> warnings
	"jupyter_client.connect" -> getpass
	"jupyter_client.connect" -> zmq
	"jupyter_core.paths" -> errno
	"jupyter_core.paths" -> os
	"jupyter_core.paths" -> site
	"jupyter_core.paths" -> stat
	"jupyter_core.paths" -> sys
	"jupyter_core.paths" -> tempfile
	"jupyter_core.paths" -> warnings
	"jupyter_core.paths" -> platformdirs
	site -> sys
	site -> os
	site -> builtins
	site -> _sitebuiltins
	site -> io
	site -> stat
	_sitebuiltins -> sys
	rlcompleter -> atexit
	rlcompleter -> builtins
	rlcompleter -> inspect
	rlcompleter -> keyword
	rlcompleter -> re
	rlcompleter -> __main__
	rlcompleter -> readline
	platformdirs -> os
	platformdirs -> sys
	"platformdirs.api" -> os
	"platformdirs.windows" -> os
	"platformdirs.windows" -> sys
	"platformdirs.macos" -> os
	"platformdirs.macos" -> sys
	"platformdirs.unix" -> os
	"platformdirs.unix" -> sys
	"platformdirs.android" -> os
	"platformdirs.android" -> re
	"platformdirs.android" -> sys
	"jupyter_client.localinterfaces" -> os
	"jupyter_client.localinterfaces" -> re
	"jupyter_client.localinterfaces" -> socket
	"jupyter_client.localinterfaces" -> subprocess
	"jupyter_client.ssh.tunnel" -> atexit
	"jupyter_client.ssh.tunnel" -> os
	"jupyter_client.ssh.tunnel" -> re
	"jupyter_client.ssh.tunnel" -> signal
	"jupyter_client.ssh.tunnel" -> socket
	"jupyter_client.ssh.tunnel" -> sys
	"jupyter_client.ssh.tunnel" -> warnings
	"jupyter_client.ssh.tunnel" -> getpass
	"jupyter_client.ssh.forward" -> logging
	"jupyter_client.ssh.forward" -> select
	"jupyter_client.ssh.forward" -> socketserver
	"jupyter_client.manager" -> asyncio
	"jupyter_client.manager" -> functools
	"jupyter_client.manager" -> os
	"jupyter_client.manager" -> re
	"jupyter_client.manager" -> signal
	"jupyter_client.manager" -> sys
	"jupyter_client.manager" -> uuid
	"jupyter_client.manager" -> warnings
	"jupyter_client.manager" -> zmq
	"jupyter_client.manager" -> ipykernel
	"asyncio.futures" -> concurrent
	"asyncio.futures" -> contextvars
	"asyncio.futures" -> logging
	"asyncio.futures" -> sys
	"asyncio.futures" -> _asyncio
	"asyncio.base_futures" -> reprlib
	"jupyter_client.kernelspec" -> json
	"jupyter_client.kernelspec" -> os
	"jupyter_client.kernelspec" -> re
	"jupyter_client.kernelspec" -> shutil
	"jupyter_client.kernelspec" -> warnings
	"jupyter_client.provisioning.factory" -> glob
	"jupyter_client.provisioning.factory" -> sys
	"jupyter_client.provisioning.provisioner_base" -> os
	"jupyter_client.provisioning.local_provisioner" -> asyncio
	"jupyter_client.provisioning.local_provisioner" -> os
	"jupyter_client.provisioning.local_provisioner" -> signal
	"jupyter_client.provisioning.local_provisioner" -> sys
	"jupyter_client.launcher" -> os
	"jupyter_client.launcher" -> sys
	"jupyter_client.launcher" -> warnings
	"jupyter_client.win_interrupt" -> ctypes
	"IPython.paths" -> os
	"IPython.paths" -> tempfile
	"IPython.paths" -> IPython
	"IPython.core.profiledir" -> os
	"IPython.core.profiledir" -> shutil
	"IPython.core.profiledir" -> errno
	"ipykernel.kernelspec" -> errno
	"ipykernel.kernelspec" -> json
	"ipykernel.kernelspec" -> os
	"ipykernel.kernelspec" -> platform
	"ipykernel.kernelspec" -> shutil
	"ipykernel.kernelspec" -> stat
	"ipykernel.kernelspec" -> sys
	"ipykernel.kernelspec" -> tempfile
	"jupyter_client.blocking.client" -> inspect
	"jupyter_client.managerabc" -> abc
	"jupyter_client.multikernelmanager" -> asyncio
	"jupyter_client.multikernelmanager" -> json
	"jupyter_client.multikernelmanager" -> os
	"jupyter_client.multikernelmanager" -> socket
	"jupyter_client.multikernelmanager" -> uuid
	"jupyter_client.multikernelmanager" -> zmq
	"ipykernel.kernelapp" -> atexit
	"ipykernel.kernelapp" -> errno
	"ipykernel.kernelapp" -> logging
	"ipykernel.kernelapp" -> os
	"ipykernel.kernelapp" -> signal
	"ipykernel.kernelapp" -> sys
	"ipykernel.kernelapp" -> traceback
	"ipykernel.kernelapp" -> zmq
	"IPython.core.application" -> atexit
	"IPython.core.application" -> logging
	"IPython.core.application" -> os
	"IPython.core.application" -> shutil
	"IPython.core.application" -> sys
	"IPython.core.application" -> profile
	"IPython.core.crashhandler" -> sys
	"IPython.core.crashhandler" -> traceback
	"IPython.utils.sysinfo" -> os
	"IPython.utils.sysinfo" -> platform
	"IPython.utils.sysinfo" -> pprint
	"IPython.utils.sysinfo" -> sys
	"IPython.utils.sysinfo" -> subprocess
	"IPython.core.shellapp" -> glob
	"IPython.core.shellapp" -> os
	"IPython.core.shellapp" -> sys
	"IPython.core.shellapp" -> matplotlib
	"IPython.core.shellapp" -> pylab
	"IPython.utils.contexts" -> warnings
	"IPython.terminal.pt_inputhooks" -> importlib
	"IPython.terminal.pt_inputhooks" -> os
	"IPython.external.qt_loaders" -> importlib
	"IPython.external.qt_loaders" -> sys
	"IPython.external.qt_loaders" -> os
	"IPython.external.qt_loaders" -> types
	"IPython.external.qt_loaders" -> operator
	"IPython.external.qt_for_kernel" -> os
	"IPython.external.qt_for_kernel" -> sys
	"ipykernel.heartbeat" -> errno
	"ipykernel.heartbeat" -> socket
	"ipykernel.heartbeat" -> zmq
	"ipykernel.iostream" -> asyncio
	"ipykernel.iostream" -> atexit
	"ipykernel.iostream" -> contextvars
	"ipykernel.iostream" -> io
	"ipykernel.iostream" -> os
	"ipykernel.iostream" -> sys
	"ipykernel.iostream" -> threading
	"ipykernel.iostream" -> traceback
	"ipykernel.iostream" -> warnings
	"ipykernel.iostream" -> zmq
	"ipykernel.ipkernel" -> asyncio
	"ipykernel.ipkernel" -> builtins
	"ipykernel.ipkernel" -> gc
	"ipykernel.ipkernel" -> getpass
	"ipykernel.ipkernel" -> os
	"ipykernel.ipkernel" -> signal
	"ipykernel.ipkernel" -> sys
	"ipykernel.ipkernel" -> threading
	"ipykernel.ipkernel" -> comm
	"ipykernel.comm.comm" -> uuid
	"ipykernel.comm.comm" -> comm
	"ipykernel.comm.comm" -> traitlets
	"ipykernel.jsonutil" -> math
	"ipykernel.jsonutil" -> numbers
	"ipykernel.jsonutil" -> re
	"ipykernel.jsonutil" -> types
	"ipykernel.jsonutil" -> datetime
	"ipykernel.kernelbase" -> asyncio
	"ipykernel.kernelbase" -> concurrent
	"ipykernel.kernelbase" -> inspect
	"ipykernel.kernelbase" -> itertools
	"ipykernel.kernelbase" -> logging
	"ipykernel.kernelbase" -> os
	"ipykernel.kernelbase" -> socket
	"ipykernel.kernelbase" -> sys
	"ipykernel.kernelbase" -> threading
	"ipykernel.kernelbase" -> time
	"ipykernel.kernelbase" -> uuid
	"ipykernel.kernelbase" -> warnings
	"ipykernel.kernelbase" -> datetime
	"ipykernel.kernelbase" -> signal
	"ipykernel.kernelbase" -> psutil
	"ipykernel.kernelbase" -> zmq
	"ipykernel.kernelbase" -> getpass
	"ipykernel.comm.manager" -> logging
	"ipykernel.comm.manager" -> comm
	"ipykernel.comm.manager" -> traitlets
	"ipykernel.compiler" -> os
	"ipykernel.compiler" -> sys
	"ipykernel.compiler" -> tempfile
	"ipykernel.compiler" -> ctypes
	"IPython.core.compilerop" -> __future__
	"IPython.core.compilerop" -> codeop
	"IPython.core.compilerop" -> functools
	"IPython.core.compilerop" -> hashlib
	"IPython.core.compilerop" -> linecache
	"IPython.core.compilerop" -> operator
	"IPython.core.compilerop" -> time
	"ipykernel.eventloops" -> os
	"ipykernel.eventloops" -> platform
	"ipykernel.eventloops" -> sys
	"ipykernel.eventloops" -> zmq
	nest_asyncio -> asyncio
	nest_asyncio -> os
	nest_asyncio -> sys
	nest_asyncio -> threading
	"ipykernel.gui.gtkembed" -> sys
	"ipykernel.gui.gtkembed" -> warnings
	"ipykernel.gui.gtk3embed" -> sys
	"ipykernel.gui.gtk3embed" -> warnings
	"ipykernel._eventloop_macos" -> ctypes
	"ipykernel.zmqshell" -> os
	"ipykernel.zmqshell" -> sys
	"ipykernel.zmqshell" -> warnings
	"IPython.core.payloadpage" -> warnings
	"IPython.core.displaypub" -> sys
	"IPython.core.magics.basic" -> io
	"IPython.core.magics.basic" -> os
	"IPython.core.magics.basic" -> sys
	"IPython.core.magics.basic" -> pprint
	"IPython.core.magic_arguments" -> argparse
	"IPython.core.magic_arguments" -> re
	"IPython.core.usage" -> sys
	"nbformat._struct" -> copy
	"nbformat.v1.nbjson" -> json
	"nbformat.v2" -> os
	"nbformat.v2" -> nbformat
	"nbformat.v2.nbjson" -> copy
	"nbformat.v2.nbjson" -> json
	"nbformat.v2.nbpy" -> re
	"nbformat.v3" -> os
	"nbformat.v3" -> nbformat
	"nbformat.v3.convert" -> nbformat
	"nbformat.v3.nbbase" -> warnings
	"nbformat.v3.nbbase" -> nbformat
	"nbformat.v3.nbjson" -> copy
	"nbformat.v3.nbjson" -> json
	"nbformat.v3.nbpy" -> re
	"nbformat.v3.nbpy" -> nbformat
	"nbformat.v4" -> nbformat
	"nbformat.v4.convert" -> json
	"nbformat.v4.convert" -> re
	"nbformat.v4.convert" -> nbformat
	"nbformat.validator" -> json
	"nbformat.validator" -> pprint
	"nbformat.validator" -> warnings
	"nbformat.corpus.words" -> uuid
	"nbformat.json_compat" -> os
	"nbformat.json_compat" -> fastjsonschema
	"nbformat.json_compat" -> jsonschema
	"fastjsonschema.draft04" -> decimal
	"fastjsonschema.draft04" -> re
	"fastjsonschema.exceptions" -> re
	"fastjsonschema.generator" -> re
	"fastjsonschema.ref_resolver" -> contextlib
	"fastjsonschema.ref_resolver" -> json
	"fastjsonschema.ref_resolver" -> re
	"fastjsonschema.draft06" -> decimal
	jsonschema -> warnings
	"jsonschema._format" -> datetime
	"jsonschema._format" -> ipaddress
	"jsonschema._format" -> re
	"jsonschema._format" -> typing
	"jsonschema._format" -> warnings
	"jsonschema._format" -> idna
	"jsonschema._format" -> webcolors
	"jsonschema._format" -> jsonpointer
	"jsonschema._format" -> uri_template
	"jsonschema._format" -> isoduration
	"jsonschema.exceptions" -> heapq
	"jsonschema.exceptions" -> itertools
	"jsonschema.exceptions" -> warnings
	attr -> attrs
	attr -> attr
	"attr.converters" -> typing
	"attr._compat" -> inspect
	"attr._compat" -> platform
	"attr._compat" -> sys
	"attr._compat" -> threading
	"attr._make" -> contextlib
	"attr._make" -> copy
	"attr._make" -> enum
	"attr._make" -> functools
	"attr._make" -> inspect
	"attr._make" -> itertools
	"attr._make" -> linecache
	"attr._make" -> sys
	"attr._make" -> types
	"attr._make" -> typing
	"attr._make" -> attrs
	"attr._make" -> abc
	"attr.validators" -> operator
	"attr.validators" -> re
	"attr.validators" -> attrs
	"attr._cmp" -> functools
	"attr._cmp" -> types
	"attr._funcs" -> copy
	"attr._next_gen" -> attrs
	"attr._version_info" -> attrs
	"attrs.converters" -> typing
	"attrs.validators" -> operator
	"attrs.validators" -> re
	"attrs.validators" -> attrs
	"referencing.exceptions" -> attrs
	"jsonschema._utils" -> itertools
	"jsonschema._utils" -> re
	"jsonschema._types" -> numbers
	fqdn -> re
	"fqdn._compat" -> sys
	"idna.core" -> bisect
	"idna.core" -> unicodedata
	"idna.core" -> re
	"idna.intranges" -> bisect
	rfc3339_validator -> re
	rfc3339_validator -> calendar
	rfc3339_validator -> six
	"webcolors._definitions" -> re
	"webcolors._types" -> typing
	"webcolors._html5" -> string
	jsonpointer -> copy
	jsonpointer -> re
	"uri_template.expansions" -> collections
	"uri_template.expansions" -> operator
	"uri_template.uritemplate" -> re
	"isoduration.types" -> datetime
	"isoduration.operations" -> datetime
	"isoduration.parser.parsing" -> arrow
	"arrow.api" -> datetime
	"arrow.arrow" -> calendar
	"arrow.arrow" -> re
	"arrow.arrow" -> sys
	"arrow.arrow" -> datetime
	"arrow.arrow" -> time
	"arrow.formatter" -> re
	"arrow.formatter" -> sys
	"arrow.formatter" -> datetime
	"arrow.locales" -> sys
	"arrow.constants" -> sys
	"arrow.constants" -> datetime
	"arrow.parser" -> re
	"arrow.parser" -> sys
	"arrow.parser" -> datetime
	"arrow.util" -> datetime
	"arrow.factory" -> calendar
	"arrow.factory" -> datetime
	"isoduration.parser.util" -> re
	rfc3986_validator -> re
	"jsonschema.validators" -> contextlib
	"jsonschema.validators" -> json
	"jsonschema.validators" -> reprlib
	"jsonschema.validators" -> warnings
	"jsonschema.validators" -> referencing
	"jsonschema.validators" -> _typing
	"jsonschema_specifications._core" -> json
	"importlib_resources._common" -> os
	"importlib_resources._common" -> pathlib
	"importlib_resources._common" -> tempfile
	"importlib_resources._common" -> functools
	"importlib_resources._common" -> contextlib
	"importlib_resources._common" -> types
	"importlib_resources._common" -> importlib
	"importlib_resources._common" -> inspect
	"importlib_resources._common" -> warnings
	"importlib_resources._common" -> itertools
	"importlib_resources.abc" -> abc
	"importlib_resources.abc" -> io
	"importlib_resources.abc" -> itertools
	"importlib_resources.abc" -> pathlib
	"importlib_resources._compat" -> abc
	"importlib_resources._compat" -> os
	"importlib_resources._compat" -> sys
	"importlib_resources._compat" -> pathlib
	"importlib_resources._compat" -> warnings
	"importlib_resources.readers" -> collections
	"importlib_resources.readers" -> contextlib
	"importlib_resources.readers" -> itertools
	"importlib_resources.readers" -> pathlib
	"importlib_resources.readers" -> operator
	"importlib_resources.readers" -> re
	"importlib_resources.readers" -> abc
	"importlib_resources._adapters" -> abc
	"jsonschema._keywords" -> re
	"jsonschema._keywords" -> enum
	"jsonschema._legacy_keywords" -> re
	"jsonschema._typing" -> referencing
	"jsonschema.protocols" -> referencing
	"jsonschema.protocols" -> _typing
	"jsonschema.protocols" -> jsonschema
	requests -> warnings
	requests -> urllib3
	requests -> ssl
	requests -> logging
	urllib3 -> logging
	urllib3 -> sys
	urllib3 -> typing
	urllib3 -> warnings
	urllib3 -> ssl
	"urllib3.exceptions" -> socket
	"urllib3.exceptions" -> typing
	"urllib3.exceptions" -> warnings
	"urllib3.connection" -> datetime
	"urllib3.connection" -> logging
	"urllib3.connection" -> os
	"urllib3.connection" -> re
	"urllib3.connection" -> socket
	"urllib3.connection" -> sys
	"urllib3.connection" -> typing
	"urllib3.connection" -> warnings
	"urllib3.connection" -> ssl
	"urllib3.response" -> collections
	"urllib3.response" -> io
	"urllib3.response" -> _json
	"urllib3.response" -> logging
	"urllib3.response" -> re
	"urllib3.response" -> sys
	"urllib3.response" -> typing
	"urllib3.response" -> warnings
	"urllib3.response" -> zlib
	"urllib3.response" -> json
	"urllib3._base_connection" -> typing
	"urllib3._base_connection" -> ssl
	"urllib3.util.connection" -> socket
	"urllib3.util.connection" -> typing
	"urllib3.util.timeout" -> time
	"urllib3.util.timeout" -> typing
	"urllib3.util.timeout" -> token
	"urllib3.util.request" -> io
	"urllib3.util.request" -> typing
	"urllib3.util.request" -> token
	"urllib3.util.util" -> typing
	"urllib3.util.retry" -> email
	"urllib3.util.retry" -> logging
	"urllib3.util.retry" -> random
	"urllib3.util.retry" -> re
	"urllib3.util.retry" -> time
	"urllib3.util.retry" -> typing
	"urllib3.connectionpool" -> errno
	"urllib3.connectionpool" -> logging
	"urllib3.connectionpool" -> queue
	"urllib3.connectionpool" -> sys
	"urllib3.connectionpool" -> typing
	"urllib3.connectionpool" -> warnings
	"urllib3.connectionpool" -> weakref
	"urllib3.connectionpool" -> ssl
	"urllib3._collections" -> typing
	"urllib3._collections" -> copy
	"urllib3._request_methods" -> _json
	"urllib3._request_methods" -> typing
	"urllib3.filepost" -> binascii
	"urllib3.filepost" -> codecs
	"urllib3.filepost" -> os
	"urllib3.filepost" -> typing
	"urllib3.fields" -> email
	"urllib3.fields" -> mimetypes
	"urllib3.fields" -> typing
	"urllib3.util.proxy" -> typing
	"urllib3.util.url" -> re
	"urllib3.util.url" -> typing
	"urllib3.util.ssl_match_hostname" -> ipaddress
	"urllib3.util.ssl_match_hostname" -> re
	"urllib3.util.ssl_match_hostname" -> typing
	"urllib3.util.ssl_" -> hmac
	"urllib3.util.ssl_" -> os
	"urllib3.util.ssl_" -> socket
	"urllib3.util.ssl_" -> sys
	"urllib3.util.ssl_" -> typing
	"urllib3.util.ssl_" -> warnings
	"urllib3.util.ssl_" -> ssl
	"urllib3.util.ssl_" -> attr
	"urllib3.util.ssltransport" -> io
	"urllib3.util.ssltransport" -> socket
	"urllib3.util.ssltransport" -> ssl
	"urllib3.util.ssltransport" -> typing
	"urllib3.util.wait" -> select
	"urllib3.util.wait" -> socket
	"urllib3.poolmanager" -> functools
	"urllib3.poolmanager" -> logging
	"urllib3.poolmanager" -> typing
	"urllib3.poolmanager" -> warnings
	"urllib3.poolmanager" -> ssl
	"urllib3.contrib.emscripten" -> urllib3
	"urllib3.contrib.emscripten.connection" -> os
	"urllib3.contrib.emscripten.connection" -> typing
	"urllib3.contrib.emscripten.fetch" -> io
	"urllib3.contrib.emscripten.fetch" -> json
	"urllib3.contrib.emscripten.response" -> _json
	"urllib3.contrib.emscripten.response" -> logging
	"urllib3.contrib.emscripten.response" -> typing
	"urllib3.contrib.emscripten.response" -> json
	"requests.compat" -> sys
	"requests.compat" -> json
	charset_normalizer -> logging
	"charset_normalizer.api" -> logging
	"charset_normalizer.cd" -> importlib
	"urllib3.contrib.pyopenssl" -> logging
	"urllib3.contrib.pyopenssl" -> ssl
	"urllib3.contrib.pyopenssl" -> typing
	"requests.packages" -> sys
	"requests.packages" -> warnings
	"requests.utils" -> codecs
	"requests.utils" -> contextlib
	"requests.utils" -> io
	"requests.utils" -> os
	"requests.utils" -> re
	"requests.utils" -> socket
	"requests.utils" -> struct
	"requests.utils" -> sys
	"requests.utils" -> tempfile
	"requests.utils" -> warnings
	"requests.utils" -> zipfile
	"certifi.core" -> sys
	"certifi.core" -> atexit
	"certifi.core" -> os
	"certifi.core" -> types
	"requests._internal_utils" -> re
	"requests.cookies" -> calendar
	"requests.cookies" -> copy
	"requests.cookies" -> time
	"requests.cookies" -> threading
	"requests.structures" -> copy
	"requests.sessions" -> os
	"requests.sessions" -> sys
	"requests.sessions" -> time
	"requests.adapters" -> os
	"requests.adapters" -> socket
	"requests.auth" -> hashlib
	"requests.auth" -> os
	"requests.auth" -> re
	"requests.auth" -> threading
	"requests.auth" -> time
	"requests.auth" -> warnings
	"requests.models" -> datetime
	"requests.models" -> encodings
	"requests.models" -> copy
	"requests.models" -> json
	"encodings.idna" -> stringprep
	"encodings.idna" -> re
	"encodings.idna" -> codecs
	"encodings.idna" -> unicodedata
	stringprep -> unicodedata
	"urllib3.contrib.socks" -> typing
	"urllib3.contrib.socks" -> ssl
	"urllib3.contrib.socks" -> warnings
	"nbformat.reader" -> json
	"nbformat.v4.nbbase" -> nbformat
	"nbformat.v4.nbjson" -> copy
	"nbformat.v4.nbjson" -> json
	"nbformat._version" -> re
	"IPython.core.magics.code" -> inspect
	"IPython.core.magics.code" -> io
	"IPython.core.magics.code" -> os
	"IPython.core.magics.code" -> re
	"IPython.core.magics.code" -> sys
	"IPython.core.magics.code" -> ast
	"IPython.core.magics.config" -> re
	"IPython.core.magics.display" -> html
	"IPython.core.magics.execution" -> ast
	"IPython.core.magics.execution" -> bdb
	"IPython.core.magics.execution" -> copy
	"IPython.core.magics.execution" -> profile
	"IPython.core.magics.execution" -> gc
	"IPython.core.magics.execution" -> itertools
	"IPython.core.magics.execution" -> math
	"IPython.core.magics.execution" -> os
	"IPython.core.magics.execution" -> pstats
	"IPython.core.magics.execution" -> re
	"IPython.core.magics.execution" -> shlex
	"IPython.core.magics.execution" -> sys
	"IPython.core.magics.execution" -> time
	"IPython.core.magics.execution" -> timeit
	"IPython.core.magics.execution" -> pdb
	"IPython.core.displayhook" -> sys
	"IPython.core.displayhook" -> _io
	"IPython.core.displayhook" -> tokenize
	"IPython.utils.capture" -> sys
	"IPython.utils.module_paths" -> importlib
	"IPython.utils.module_paths" -> sys
	"IPython.utils.timing" -> time
	"IPython.core.magics.ast_mod" -> ast
	"IPython.core.magics.ast_mod" -> copy
	"IPython.core.magics.history" -> os
	"IPython.core.magics.history" -> sys
	"IPython.core.magics.history" -> fnmatch
	"IPython.core.magics.history" -> io
	"IPython.utils.io" -> atexit
	"IPython.utils.io" -> os
	"IPython.utils.io" -> sys
	"IPython.utils.io" -> tempfile
	"IPython.core.magics.logging" -> os
	"IPython.core.magics.logging" -> sys
	"IPython.core.magics.namespace" -> gc
	"IPython.core.magics.namespace" -> re
	"IPython.core.magics.namespace" -> sys
	"IPython.core.magics.osm" -> io
	"IPython.core.magics.osm" -> os
	"IPython.core.magics.osm" -> pathlib
	"IPython.core.magics.osm" -> re
	"IPython.core.magics.osm" -> sys
	"IPython.core.alias" -> os
	"IPython.core.alias" -> re
	"IPython.core.alias" -> sys
	"IPython.core.magics.packaging" -> functools
	"IPython.core.magics.packaging" -> os
	"IPython.core.magics.packaging" -> re
	"IPython.core.magics.packaging" -> shlex
	"IPython.core.magics.packaging" -> sys
	"IPython.core.magics.pylab" -> matplotlib
	"IPython.core.magics.pylab" -> pylab
	"IPython.core.magics.script" -> asyncio
	"IPython.core.magics.script" -> atexit
	"IPython.core.magics.script" -> errno
	"IPython.core.magics.script" -> os
	"IPython.core.magics.script" -> signal
	"IPython.core.magics.script" -> sys
	"IPython.core.magics.script" -> time
	"ipykernel.displayhook" -> builtins
	"ipykernel.displayhook" -> sys
	"ipykernel.debugger" -> os
	"ipykernel.debugger" -> re
	"ipykernel.debugger" -> sys
	"ipykernel.debugger" -> zmq
	debugpy -> sys
	debugpy -> functools
	debugpy -> typing
	"debugpy.public_api" -> functools
	"debugpy.public_api" -> typing
	"debugpy._version" -> json
	"debugpy.server" -> debugpy
	"debugpy._vendored" -> contextlib
	"debugpy._vendored" -> os
	"debugpy._vendored" -> sys
	"debugpy._vendored._util" -> contextlib
	"debugpy._vendored._util" -> os
	"debugpy._vendored.force_pydevd" -> os
	"debugpy._vendored.force_pydevd" -> warnings
	"debugpy._vendored.force_pydevd" -> debugpy
	"debugpy.server.api" -> codecs
	"debugpy.server.api" -> os
	"debugpy.server.api" -> socket
	"debugpy.server.api" -> sys
	"debugpy.server.api" -> threading
	"debugpy.server.api" -> debugpy
	"debugpy.server.api" -> json
	"debugpy.adapter" -> typing
	"debugpy.common" -> os
	"debugpy.common" -> typing
	"debugpy.common.json" -> builtins
	"debugpy.common.json" -> json
	"debugpy.common.json" -> numbers
	"debugpy.common.json" -> operator
	"debugpy.common.json" -> enum
	"debugpy.common.json" -> array
	"debugpy.common.log" -> atexit
	"debugpy.common.log" -> contextlib
	"debugpy.common.log" -> functools
	"debugpy.common.log" -> inspect
	"debugpy.common.log" -> io
	"debugpy.common.log" -> os
	"debugpy.common.log" -> platform
	"debugpy.common.log" -> sys
	"debugpy.common.log" -> threading
	"debugpy.common.log" -> traceback
	"debugpy.common.log" -> debugpy
	"debugpy.common.log" -> json
	"debugpy.common.timestamp" -> time
	"debugpy.common.util" -> inspect
	"debugpy.common.util" -> os
	"debugpy.common.util" -> sys
	"debugpy.common.util" -> copy
	"debugpy.common.sockets" -> socket
	"debugpy.common.sockets" -> sys
	"debugpy.common.sockets" -> threading
	"ipykernel.serialize" -> pickle
	"ipykernel.serialize" -> warnings
	"ipykernel.pickleutil" -> copy
	"ipykernel.pickleutil" -> pickle
	"ipykernel.pickleutil" -> sys
	"ipykernel.pickleutil" -> typing
	"ipykernel.pickleutil" -> warnings
	dill -> copy
	dill -> pickle
	dill -> types
	dill -> os
	dill -> sys
	"dill._dill" -> warnings
	"dill._dill" -> os
	"dill._dill" -> sys
	"dill._dill" -> marshal
	"dill._dill" -> gc
	"dill._dill" -> abc
	"dill._dill" -> dataclasses
	"dill._dill" -> importlib
	"dill._dill" -> ctypes
	"dill._dill" -> inspect
	"dill._dill" -> typing
	"dill._dill" -> copy
	"dill._dill" -> pickle
	"dill._dill" -> winreg
	"dill.logger" -> codecs
	"dill.logger" -> contextlib
	"dill.logger" -> locale
	"dill.logger" -> logging
	"dill.logger" -> math
	"dill.logger" -> os
	"dill.logger" -> dill
	_pyio -> os
	_pyio -> abc
	_pyio -> codecs
	_pyio -> errno
	_pyio -> stat
	_pyio -> sys
	_pyio -> io
	_pyio -> readline
	"dill._shims" -> inspect
	"dill._shims" -> sys
	"dill.detect" -> dis
	"dill.detect" -> code
	"dill.pointers" -> gc
	"dill.pointers" -> sys
	"dill.source" -> linecache
	"dill.source" -> re
	"dill.temp" -> contextlib
	"dill.session" -> re
	"dill.session" -> os
	"dill.session" -> sys
	"dill.session" -> warnings
	"dill.session" -> pathlib
	"dill.session" -> tempfile
	"dill.session" -> readline
	"dill._objects" -> warnings
	"dill._objects" -> sys
	"dill._objects" -> re
	"dill._objects" -> array
	"dill._objects" -> collections
	"dill._objects" -> codecs
	"dill._objects" -> struct
	"dill._objects" -> dataclasses
	"dill._objects" -> datetime
	"dill._objects" -> calendar
	"dill._objects" -> weakref
	"dill._objects" -> pprint
	"dill._objects" -> decimal
	"dill._objects" -> numbers
	"dill._objects" -> functools
	"dill._objects" -> itertools
	"dill._objects" -> operator
	"dill._objects" -> tempfile
	"dill._objects" -> shelve
	"dill._objects" -> zlib
	"dill._objects" -> gzip
	"dill._objects" -> zipfile
	"dill._objects" -> tarfile
	"dill._objects" -> csv
	"dill._objects" -> hashlib
	"dill._objects" -> hmac
	"dill._objects" -> os
	"dill._objects" -> logging
	"dill._objects" -> optparse
	"dill._objects" -> threading
	"dill._objects" -> socket
	"dill._objects" -> contextlib
	"dill._objects" -> bz2
	"dill._objects" -> sqlite3
	"dill._objects" -> dbm
	"dill._objects" -> ctypes
	"dill._objects" -> fractions
	"dill._objects" -> io
	"dill._objects" -> argparse
	"dill._objects" -> xdrlib
	"dill._objects" -> _socket
	"dill._objects" -> symtable
	dbm -> io
	dbm -> os
	dbm -> struct
	dbm -> sys
	shelve -> collections
	xdrlib -> struct
	xdrlib -> warnings
	symtable -> _symtable
	symtable -> weakref
	symtable -> symtable
	symtable -> os
	symtable -> sys
	"ipykernel.parentpoller" -> ctypes
	"ipykernel.parentpoller" -> os
	"ipykernel.parentpoller" -> platform
	"ipykernel.parentpoller" -> signal
	"ipykernel.parentpoller" -> time
	"ipykernel.parentpoller" -> warnings
	"ipykernel.trio_runner" -> builtins
	"ipykernel.trio_runner" -> logging
	"ipykernel.trio_runner" -> signal
	"ipykernel.trio_runner" -> threading
	"ipykernel.trio_runner" -> traceback
	"ipykernel.trio_runner" -> warnings
	"ipywidgets.widgets.trait_types" -> re
	"ipywidgets.widgets.trait_types" -> traitlets
	"ipywidgets.widgets.widget_description" -> warnings
	"ipywidgets.widgets.widget_button" -> click
	"ipywidgets.widgets.widget_output" -> sys
	"ipywidgets.widgets.widget_output" -> traceback
	"ipywidgets.widgets.interaction" -> sys
	"ipykernel.pylab.backend_inline" -> warnings
	"ipykernel.pylab.backend_inline" -> matplotlib
	"ipywidgets.widgets.widget_media" -> mimetypes
	"ipywidgets.widgets.widget_templates" -> re
	"ipywidgets.widgets.utils" -> sys
	"ipywidgets.widgets.utils" -> inspect
	"ipywidgets.widgets.utils" -> warnings
	"rich.json" -> argparse
	"rich.json" -> sys
	"rich.traceback" -> inspect
	"rich.traceback" -> linecache
	"rich.traceback" -> os
	"rich.traceback" -> sys
	"IPython.core.formatters" -> abc
	"IPython.core.formatters" -> sys
	"IPython.core.formatters" -> traceback
	"IPython.core.formatters" -> warnings
	"IPython.core.formatters" -> decorator
	"IPython.core.formatters" -> pprint
	decorator -> re
	decorator -> sys
	decorator -> inspect
	decorator -> operator
	decorator -> itertools
	decorator -> decorator
	"rich._inspect" -> inspect
	"pydantic.type_adapter" -> sys
	"pydantic._internal._known_annotated_metadata" -> copy
	"pydantic._internal._serializers" -> collections
	"pydantic._internal._serializers" -> typing
	"pydantic._internal._std_types_schema" -> collections
	"pydantic._internal._std_types_schema" -> dataclasses
	"pydantic._internal._std_types_schema" -> os
	"pydantic._internal._std_types_schema" -> typing
	"pydantic._internal._std_types_schema" -> typing_extensions
	"pydantic.functional_serializers" -> dataclasses
	"pydantic.validate_call_decorator" -> functools
	"pydantic.deprecated.config" -> warnings
	"pydantic.deprecated.tools" -> json
	"pydantic.deprecated.tools" -> warnings
	"starlette.status" -> warnings
	"fastapi.routing" -> asyncio
	"fastapi.routing" -> dataclasses
	"fastapi.routing" -> email
	"fastapi.routing" -> inspect
	"fastapi.routing" -> json
	"fastapi.params" -> warnings
	"fastapi.openapi.models" -> email
	"fastapi.openapi.models" -> enum
	"fastapi.openapi.models" -> xml
	"fastapi.openapi.models" -> http
	"fastapi._compat" -> copy
	"starlette.exceptions" -> http
	"starlette.exceptions" -> typing
	"starlette.exceptions" -> warnings
	"starlette.middleware" -> sys
	"starlette.types" -> typing
	"starlette.requests" -> json
	"starlette.requests" -> typing
	"starlette.requests" -> anyio
	"anyio._core._eventloop" -> math
	"anyio._core._eventloop" -> sys
	"anyio._core._eventloop" -> threading
	"anyio._core._eventloop" -> sniffio
	"sniffio._impl" -> sys
	"sniffio._impl" -> threading
	"anyio.abc._eventloop" -> math
	"anyio.abc._eventloop" -> sys
	"anyio.abc._eventloop" -> socket
	"anyio._core._synchronization" -> math
	"anyio._core._synchronization" -> statistics
	"anyio.lowlevel" -> enum
	"anyio._core._exceptions" -> sys
	"anyio._core._tasks" -> math
	"anyio.abc._tasks" -> sys
	"anyio.from_thread" -> sys
	"anyio.abc._sockets" -> socket
	"anyio._core._sockets" -> errno
	"anyio._core._sockets" -> os
	"anyio._core._sockets" -> socket
	"anyio._core._sockets" -> ssl
	"anyio._core._sockets" -> stat
	"anyio._core._sockets" -> sys
	"anyio.to_thread" -> sys
	"anyio.streams.tls" -> logging
	"anyio.streams.tls" -> re
	"anyio.streams.tls" -> ssl
	"anyio.streams.tls" -> sys
	"anyio.abc._testing" -> types
	"anyio._core._fileio" -> os
	"anyio._core._fileio" -> pathlib
	"anyio._core._fileio" -> sys
	"anyio._core._fileio" -> readline
	"anyio._core._fileio" -> glob
	"anyio._core._fileio" -> stat
	"anyio._core._streams" -> math
	"anyio.streams.memory" -> warnings
	"anyio.streams.memory" -> statistics
	"anyio._core._subprocesses" -> sys
	"starlette._utils" -> asyncio
	"starlette._utils" -> functools
	"starlette._utils" -> sys
	"starlette._utils" -> typing
	"starlette.datastructures" -> typing
	"starlette.datastructures" -> shlex
	"starlette.concurrency" -> functools
	"starlette.concurrency" -> sys
	"starlette.concurrency" -> typing
	"starlette.concurrency" -> warnings
	"starlette.concurrency" -> anyio
	"starlette.formparsers" -> typing
	"starlette.applications" -> sys
	"starlette.applications" -> typing
	"starlette.applications" -> warnings
	"starlette.middleware.base" -> typing
	"starlette.middleware.base" -> anyio
	"starlette.responses" -> http
	"starlette.responses" -> json
	"starlette.responses" -> os
	"starlette.responses" -> re
	"starlette.responses" -> stat
	"starlette.responses" -> typing
	"starlette.responses" -> warnings
	"starlette.responses" -> datetime
	"starlette.responses" -> anyio
	secrets -> base64
	"starlette._compat" -> hashlib
	"starlette.background" -> sys
	"starlette.background" -> typing
	"starlette.middleware.errors" -> html
	"starlette.middleware.errors" -> inspect
	"starlette.middleware.errors" -> sys
	"starlette.middleware.errors" -> traceback
	"starlette.middleware.errors" -> typing
	"starlette.middleware.exceptions" -> typing
	"starlette._exception_handler" -> typing
	"starlette.websockets" -> enum
	"starlette.websockets" -> json
	"starlette.websockets" -> typing
	"starlette.routing" -> contextlib
	"starlette.routing" -> functools
	"starlette.routing" -> inspect
	"starlette.routing" -> re
	"starlette.routing" -> traceback
	"starlette.routing" -> types
	"starlette.routing" -> typing
	"starlette.routing" -> warnings
	"starlette.convertors" -> math
	"starlette.convertors" -> typing
	"starlette.convertors" -> uuid
	"fastapi.types" -> types
	"fastapi.logger" -> logging
	"fastapi.security.http" -> binascii
	"fastapi.dependencies.utils" -> inspect
	"fastapi.dependencies.utils" -> copy
	"fastapi.dependencies.utils" -> anyio
	"fastapi.concurrency" -> anyio
	"fastapi.utils" -> re
	"fastapi.utils" -> warnings
	"fastapi.utils" -> fastapi
	"fastapi.encoders" -> dataclasses
	"fastapi.encoders" -> datetime
	"fastapi.openapi.docs" -> json
	"fastapi.openapi.utils" -> http
	"fastapi.openapi.utils" -> inspect
	"fastapi.openapi.utils" -> warnings
	transformers -> logging
	transformers -> sys
	huggingface_hub -> importlib
	huggingface_hub -> os
	huggingface_hub -> sys
	huggingface_hub -> logging
	"huggingface_hub._commit_scheduler" -> atexit
	"huggingface_hub._commit_scheduler" -> logging
	"huggingface_hub._commit_scheduler" -> os
	"huggingface_hub._commit_scheduler" -> time
	"huggingface_hub.hf_api" -> inspect
	"huggingface_hub.hf_api" -> json
	"huggingface_hub.hf_api" -> re
	"huggingface_hub.hf_api" -> struct
	"huggingface_hub.hf_api" -> warnings
	"huggingface_hub.hf_api" -> datetime
	"huggingface_hub.hf_api" -> requests
	"huggingface_hub.hf_api" -> logging
	"tqdm.auto" -> warnings
	"tqdm.auto" -> tqdm
	"tqdm.autonotebook" -> sys
	"tqdm.autonotebook" -> tqdm
	"tqdm.notebook" -> re
	"tqdm.notebook" -> sys
	"tqdm.notebook" -> ipywidgets
	"tqdm.notebook" -> tqdm
	"tqdm.notebook" -> warnings
	"tqdm.asyncio" -> asyncio
	"tqdm.asyncio" -> tqdm
	"tqdm.contrib" -> tqdm
	"huggingface_hub._commit_api" -> base64
	"huggingface_hub._commit_api" -> io
	"huggingface_hub._commit_api" -> os
	"huggingface_hub._commit_api" -> warnings
	"huggingface_hub._commit_api" -> logging
	"huggingface_hub.constants" -> os
	"huggingface_hub.constants" -> re
	"huggingface_hub.constants" -> typing
	"huggingface_hub.lfs" -> inspect
	"huggingface_hub.lfs" -> io
	"huggingface_hub.lfs" -> os
	"huggingface_hub.lfs" -> re
	"huggingface_hub.lfs" -> warnings
	"huggingface_hub.lfs" -> logging
	"huggingface_hub.lfs" -> tqdm
	"huggingface_hub.utils" -> tqdm
	"huggingface_hub.utils.tqdm" -> io
	"huggingface_hub.utils.tqdm" -> warnings
	"huggingface_hub.utils.tqdm" -> tqdm
	"huggingface_hub.utils._cache_manager" -> os
	"huggingface_hub.utils._cache_manager" -> shutil
	"huggingface_hub.utils._cache_manager" -> time
	"huggingface_hub.utils._cache_manager" -> logging
	"huggingface_hub.utils.logging" -> logging
	"huggingface_hub.utils.logging" -> os
	"huggingface_hub.utils._chunk_utils" -> itertools
	"huggingface_hub.utils._datetime" -> datetime
	"huggingface_hub.utils._errors" -> re
	"huggingface_hub.utils._fixes" -> contextlib
	"huggingface_hub.utils._fixes" -> os
	"huggingface_hub.utils._fixes" -> shutil
	"huggingface_hub.utils._fixes" -> stat
	"huggingface_hub.utils._fixes" -> tempfile
	"huggingface_hub.utils._fixes" -> yaml
	"huggingface_hub.utils._token" -> os
	"huggingface_hub.utils._token" -> warnings
	"huggingface_hub.utils._runtime" -> importlib
	"huggingface_hub.utils._runtime" -> platform
	"huggingface_hub.utils._runtime" -> sys
	"huggingface_hub.utils._runtime" -> warnings
	"spellchecker.spellchecker" -> gzip
	"spellchecker.spellchecker" -> json
	"spellchecker.spellchecker" -> pkgutil
	"spellchecker.spellchecker" -> string
	"spellchecker.spellchecker" -> typing
	"spellchecker.spellchecker" -> tokenize
	"spellchecker.utils" -> contextlib
	"spellchecker.utils" -> functools
	"spellchecker.utils" -> gzip
	"spellchecker.utils" -> re
	"spellchecker.utils" -> typing
	"spellchecker.utils" -> warnings
	"torchvision.utils" -> collections
	"torchvision.utils" -> math
	"torchvision.utils" -> pathlib
	"torchvision.utils" -> warnings
	"torchvision.utils" -> torch
	"PIL.ImageDraw" -> math
	"PIL.ImageDraw" -> numbers
	"PIL.ImageDraw" -> struct
	"PIL.ImageFont" -> base64
	"PIL.ImageFont" -> os
	"PIL.ImageFont" -> sys
	"PIL.ImageFont" -> warnings
	"cnstd.yolov7.plots" -> glob
	"cnstd.yolov7.plots" -> math
	"cnstd.yolov7.plots" -> os
	"cnstd.yolov7.plots" -> random
	"cnstd.yolov7.plots" -> copy
	"cnstd.yolov7.plots" -> cv2
	"cnstd.yolov7.plots" -> matplotlib
	"cnstd.yolov7.plots" -> torch
	"cnstd.yolov7.plots" -> yaml
	"seaborn.rcmod" -> functools
	"seaborn.rcmod" -> cycler
	"seaborn.palettes" -> colorsys
	"seaborn.external.husl" -> operator
	"seaborn.external.husl" -> math
	"seaborn.utils" -> os
	"seaborn.utils" -> inspect
	"seaborn.utils" -> warnings
	"seaborn.utils" -> colorsys
	"seaborn._core.typing" -> datetime
	"seaborn.external.version" -> collections
	"seaborn.external.version" -> itertools
	"seaborn.external.version" -> re
	"seaborn.external.appdirs" -> sys
	"seaborn.external.appdirs" -> os
	"seaborn.external.appdirs" -> platform
	"seaborn.external.appdirs" -> win32com
	win32com -> os
	win32com -> sys
	win32com -> pythoncom
	win32com -> win32api
	win32com -> win32com
	win32com -> types
	pythoncom -> pywintypes
	pywintypes -> importlib
	pywintypes -> os
	pywintypes -> sys
	"torch.utils.data.sampler" -> torch
	"torch.utils.data.dataset" -> bisect
	"torch.utils.data.dataset" -> warnings
	"torch.utils.data.dataset" -> math
	"torch.utils.data.datapipes.iter.utils" -> copy
	"torch.utils.data.datapipes.iter.utils" -> warnings
	"torch.utils.data.datapipes.datapipe" -> functools
	"torch.utils.data.datapipes.datapipe" -> pickle
	"torch.utils.data.datapipes.datapipe" -> dill
	"torch.utils.data.datapipes._typing" -> collections
	"torch.utils.data.datapipes._typing" -> functools
	"torch.utils.data.datapipes._typing" -> numbers
	"torch.utils.data.datapipes._typing" -> sys
	"torch.utils.data.datapipes._hook_iterator" -> inspect
	"torch.utils.data.datapipes._hook_iterator" -> functools
	"torch.utils.data.datapipes._hook_iterator" -> torch
	"torch.utils.data.datapipes.utils.common" -> fnmatch
	"torch.utils.data.datapipes.utils.common" -> functools
	"torch.utils.data.datapipes.utils.common" -> inspect
	"torch.utils.data.datapipes.utils.common" -> os
	"torch.utils.data.datapipes.utils.common" -> warnings
	"torch.utils.data._utils" -> sys
	"torch.utils.data._utils" -> atexit
	"torch.utils.data._utils" -> numpy
	"torch.utils.data._utils.worker" -> torch
	"torch.utils.data._utils.worker" -> random
	"torch.utils.data._utils.worker" -> os
	"torch.utils.data._utils.worker" -> queue
	"torch.utils.data._utils.worker" -> ctypes
	"torch.utils.data._utils.signal_handling" -> signal
	"torch.utils.data._utils.signal_handling" -> threading
	"torch.utils.data.graph_settings" -> inspect
	"torch.utils.data.graph_settings" -> warnings
	"torch.utils.data.graph_settings" -> torch
	"torch.utils.data.datapipes._decorator" -> inspect
	"torch.utils.data.graph" -> io
	"torch.utils.data.graph" -> pickle
	"torch.utils.data.graph" -> warnings
	"torch.utils.data._utils.serialization" -> dill
	"torch.utils.data._utils.pin_memory" -> collections
	"torch.utils.data._utils.pin_memory" -> queue
	"torch.utils.data._utils.pin_memory" -> torch
	"torch.utils.data._utils.collate" -> collections
	"torch.utils.data._utils.collate" -> contextlib
	"torch.utils.data._utils.collate" -> re
	"torch.utils.data._utils.collate" -> torch
	"torch.utils.data.datapipes.iter.callable" -> functools
	"torch.utils.data.datapipes.dataframe.datapipes" -> random
	"torch.utils.data.datapipes.iter.combinatorics" -> random
	"torch.utils.data.datapipes.iter.combinatorics" -> torch
	"torch.utils.data.datapipes.iter.combining" -> warnings
	"torch.utils.data.datapipes.iter.grouping" -> warnings
	"torch.utils.data.datapipes.iter.grouping" -> torch
	"torch.utils.data.datapipes.utils.decoder" -> io
	"torch.utils.data.datapipes.utils.decoder" -> json
	"torch.utils.data.datapipes.utils.decoder" -> os
	"torch.utils.data.datapipes.utils.decoder" -> pickle
	"torch.utils.data.datapipes.utils.decoder" -> tempfile
	"torch.utils.data.datapipes.utils.decoder" -> torch
	"torchvision.io" -> torch
	"torchvision.io._video_opt" -> math
	"torchvision.io._video_opt" -> warnings
	"torchvision.io._video_opt" -> torch
	"torchvision.io.image" -> torch
	"torchvision.io.video" -> gc
	"torchvision.io.video" -> math
	"torchvision.io.video" -> os
	"torchvision.io.video" -> re
	"torchvision.io.video" -> warnings
	"torchvision.io.video" -> torch
	"torchvision.io.video_reader" -> io
	"torchvision.io.video_reader" -> warnings
	"torchvision.io.video_reader" -> torch
	"scipy.io" -> test
	"scipy.io.matlab" -> test
	"scipy._lib.doccer" -> sys
	"scipy.io.matlab._byteordercodes" -> sys
	"scipy.io.matlab._mio4" -> sys
	"scipy.io.matlab._mio4" -> warnings
	"scipy.io.matlab._mio4" -> scipy
	"scipy.io.matlab._mio5" -> os
	"scipy.io.matlab._mio5" -> time
	"scipy.io.matlab._mio5" -> sys
	"scipy.io.matlab._mio5" -> zlib
	"scipy.io.matlab._mio5" -> warnings
	"scipy.io.matlab._mio5" -> scipy
	"scipy.io._netcdf" -> warnings
	"scipy.io._netcdf" -> weakref
	"scipy.io._netcdf" -> array
	"scipy.io._fortran" -> warnings
	"scipy.io._fast_matrix_market" -> io
	"scipy.io._fast_matrix_market" -> os
	"scipy.io._fast_matrix_market" -> scipy
	"scipy.io._mmio" -> os
	"scipy.io._idl" -> struct
	"scipy.io._idl" -> tempfile
	"scipy.io._idl" -> zlib
	"scipy.io._idl" -> warnings
	"scipy.io._harwell_boeing" -> test
	"scipy.io._harwell_boeing.hb" -> warnings
	"scipy.io._harwell_boeing._fortran_format_parser" -> re
	"scipy.io.arff" -> test
	"scipy.io.arff._arffread" -> re
	"scipy.io.arff._arffread" -> datetime
	"scipy.io.arff._arffread" -> csv
	"scipy.io.arff._arffread" -> ctypes
	"scipy.io.arff._arffread" -> sys
	"scipy.io.arff._arffread" -> types
	"scipy.io.wavfile" -> io
	"scipy.io.wavfile" -> sys
	"scipy.io.wavfile" -> numpy
	"scipy.io.wavfile" -> struct
	"scipy.io.wavfile" -> warnings
	"torch.utils.data.datapipes.map.combinatorics" -> random
	"torch.utils.data.datapipes.map.combinatorics" -> torch
	"torch.utils.data.datapipes.map.utils" -> copy
	"torch.utils.data.datapipes.map.utils" -> warnings
	"torch.utils.data.dataloader" -> functools
	"torch.utils.data.dataloader" -> itertools
	"torch.utils.data.dataloader" -> logging
	"torch.utils.data.dataloader" -> os
	"torch.utils.data.dataloader" -> queue
	"torch.utils.data.dataloader" -> threading
	"torch.utils.data.dataloader" -> warnings
	"torch.utils.data.dataloader" -> torch
	"torch.utils.data.dataloader" -> multiprocessing
	"torch.utils.data.distributed" -> math
	"torch.utils.data.distributed" -> torch
	shapely -> warnings
	"shapely.errors" -> threading
	"shapely._geometry" -> warnings
	"shapely.decorators" -> os
	"shapely.predicates" -> warnings
	"shapely.algorithms._oriented_envelope" -> math
	"shapely.algorithms._oriented_envelope" -> shapely
	"shapely.affinity" -> shapely
	"shapely.measurement" -> warnings
	"shapely.geometry.base" -> re
	"shapely.geometry.base" -> shapely
	"shapely.coords" -> array
	"shapely.geometry.collection" -> shapely
	"shapely.geometry.linestring" -> shapely
	"shapely.geometry.point" -> shapely
	"shapely.geometry.multilinestring" -> shapely
	"shapely.geometry.multipoint" -> shapely
	"shapely.geometry.multipolygon" -> shapely
	"shapely.geometry.polygon" -> shapely
	"shapely.algorithms.cga" -> shapely
	"shapely._version" -> json
	"torch.nn.parallel.parallel_apply" -> threading
	"torch.nn.parallel.parallel_apply" -> torch
	"torch.cuda.amp.autocast_mode" -> collections
	"torch.cuda.amp.autocast_mode" -> functools
	"torch.cuda.amp.autocast_mode" -> torch
	"torch.cuda.amp.grad_scaler" -> inspect
	"torch.cuda.amp.grad_scaler" -> warnings
	"torch.cuda.amp.grad_scaler" -> abc
	"torch.cuda.amp.grad_scaler" -> torch
	"torch.cuda.amp.common" -> torch
	"torch.nn.parallel.replicate" -> torch
	"torch.nn.parallel.replicate" -> comm
	"torch.nn.parallel.comm" -> warnings
	"torch.nn.parallel.comm" -> torch
	"torch.cuda.nccl" -> collections
	"torch.cuda.nccl" -> warnings
	"torch.cuda.nccl" -> torch
	"torch.nn.parallel._functions" -> warnings
	"torch.nn.parallel._functions" -> torch
	"torch.nn.parallel._functions" -> comm
	"torch.nn.parallel.data_parallel" -> operator
	"torch.nn.parallel.data_parallel" -> torch
	"torch.nn.parallel.data_parallel" -> warnings
	"torch.nn.parallel.scatter_gather" -> torch
	"torch.nn.parallel.scatter_gather" -> warnings
	"torch.utils.model_zoo" -> tqdm
}
